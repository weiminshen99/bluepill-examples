ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_cortex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_NVIC_SetPriorityGrouping,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_NVIC_SetPriorityGrouping
  22              		.thumb
  23              		.thumb_func
  25              	HAL_NVIC_SetPriorityGrouping:
  26              	.LFB64:
  27              		.file 1 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c"
   1:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
   2:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
   3:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @file    stm32f1xx_hal_cortex.c
   4:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @author  MCD Application Team
   5:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @version V1.0.4
   6:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @date    29-April-2016
   7:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief   CORTEX HAL module driver.
   8:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
   9:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          This file provides firmware functions to manage the following
  10:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          functionalities of the CORTEX:
  11:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           + Initialization and de-initialization functions
  12:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           + Peripheral Control functions
  13:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *          
  14:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *  @verbatim    
  15:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
  16:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                         ##### How to use this driver #####
  17:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
  18:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  19:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]  
  20:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     *** How to configure Interrupts using Cortex HAL driver ***
  21:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     ===========================================================
  22:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]     
  23:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     This section provide functions allowing to configure the NVIC interrupts (IRQ).
  24:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     The Cortex-M3 exceptions are managed by CMSIS functions.
  25:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  26:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     (#) Configure the NVIC Priority Grouping using HAL_NVIC_SetPriorityGrouping()
  27:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         function according to the following table.
  28:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  29:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      The table below gives the allowed values of the pre-emption priority and subpriority according
  30:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      to the Priority Grouping configuration performed by HAL_NVIC_SetPriorityGrouping() function.
  31:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        ============================================================================================
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 2


  32:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****          NVIC_PriorityGroup   | NVIC_IRQChannelPreemptionPriority | NVIC_IRQChannelSubPriority  |  
  33:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        ============================================================================================
  34:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_0  |                0                  |            0-15             | 0
  35:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                               |                                   |                             | 4
  36:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  37:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_1  |                0-1                |            0-7              | 1
  38:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                               |                                   |                             | 3
  39:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  40:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_2  |                0-3                |            0-3              | 2
  41:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                               |                                   |                             | 2
  42:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  43:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_3  |                0-7                |            0-1              | 3
  44:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                               |                                   |                             | 1
  45:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        --------------------------------------------------------------------------------------------
  46:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         NVIC_PRIORITYGROUP_4  |                0-15               |            0                | 4
  47:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                               |                                   |                             | 0
  48:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        ============================================================================================
  49:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      (#)  Configure the priority of the selected IRQ Channels using HAL_NVIC_SetPriority() 
  50:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  51:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      (#)  Enable the selected IRQ Channels using HAL_NVIC_EnableIRQ() 
  52:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       
  53:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  54:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      -@- When the NVIC_PRIORITYGROUP_0 is selected, IRQ pre-emption is no more possible. 
  55:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****          The pending IRQ priority will be managed only by the sub priority.
  56:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  57:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****      -@- IRQ priority order (sorted by highest to lowest priority):
  58:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest pre-emption priority
  59:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest sub priority
  60:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (+@) Lowest hardware priority (IRQ number)
  61:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  
  62:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]  
  63:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     *** How to configure Systick using Cortex HAL driver ***
  64:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     ========================================================
  65:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
  66:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     Setup SysTick Timer for 1 msec interrupts.
  67:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****            
  68:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) The HAL_SYSTICK_Config()function calls the SysTick_Config() function which
  69:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        is a CMSIS function that:
  70:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick Reload register with value passed as function parameter.
  71:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick IRQ priority to the lowest value (0x0F).
  72:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Resets the SysTick Counter register.
  73:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Configures the SysTick Counter clock source to be Core Clock Source (HCLK).
  74:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Enables the SysTick Interrupt.
  75:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****         (++) Starts the SysTick Counter.
  76:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     
  77:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) You can change the SysTick Clock source to be HCLK_Div8 by calling the function
  78:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK_DIV8) just after the
  79:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        HAL_SYSTICK_Config() function call.
  80:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  81:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) You can change the SysTick IRQ priority by calling the
  82:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        HAL_NVIC_SetPriority(SysTick_IRQn,...) function just after the HAL_SYSTICK_Config() function
  83:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        call. The HAL_NVIC_SetPriority() call the NVIC_SetPriority() function which is a CMSIS funct
  84:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
  85:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    (+) To adjust the SysTick time base, use the following formula:
  86:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                             
  87:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        Reload Value = SysTick Counter Clock (Hz) x  Desired Time base (s)
  88:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        (++) Reload Value is the parameter to be passed for HAL_SYSTICK_Config() function
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 3


  89:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****        (++) Reload Value should not exceed 0xFFFFFF
  90:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    
  91:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   @endverbatim
  92:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
  93:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @attention
  94:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  95:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  96:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
  97:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  98:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * are permitted provided that the following conditions are met:
  99:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
 100:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer.
 101:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
 102:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      this list of conditions and the following disclaimer in the documentation
 103:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      and/or other materials provided with the distribution.
 104:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
 105:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      may be used to endorse or promote products derived from this software
 106:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *      without specific prior written permission.
 107:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
 108:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
 109:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
 110:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 111:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
 112:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 113:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 114:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 115:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 116:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 117:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
 118:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *
 119:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ******************************************************************************
 120:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 121:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 122:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Includes ------------------------------------------------------------------*/
 123:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #include "stm32f1xx_hal.h"
 124:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 125:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @addtogroup STM32F1xx_HAL_Driver
 126:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 127:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 128:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 129:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX CORTEX
 130:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief CORTEX HAL module driver
 131:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 132:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 133:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 134:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #ifdef HAL_CORTEX_MODULE_ENABLED
 135:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 136:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private typedef -----------------------------------------------------------*/
 137:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private define ------------------------------------------------------------*/
 138:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private macro -------------------------------------------------------------*/
 139:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private variables ---------------------------------------------------------*/
 140:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private function prototypes -----------------------------------------------*/
 141:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /* Private functions ---------------------------------------------------------*/
 142:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 143:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions CORTEX Exported Functions
 144:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 145:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 4


 146:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 147:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 148:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group1 Initialization and de-initialization functions
 149:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  *  @brief    Initialization and Configuration functions 
 150:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  *
 151:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @verbatim    
 152:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 153:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****               ##### Initialization and de-initialization functions #####
 154:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 155:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
 156:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       This section provide the Cortex HAL driver functions allowing to configure Interrupts
 157:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       Systick functionalities 
 158:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 159:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @endverbatim
 160:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 161:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 162:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 163:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 164:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 165:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets the priority grouping field (pre-emption priority and subpriority)
 166:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         using the required unlock sequence.
 167:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  PriorityGroup: The priority grouping bits length. 
 168:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 169:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 170:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    4 bits for subpriority
 171:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 172:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    3 bits for subpriority
 173:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 174:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    2 bits for subpriority
 175:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 176:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    1 bits for subpriority
 177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                    0 bits for subpriority
 179:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @note   When the NVIC_PriorityGroup_0 is selected, IRQ pre-emption is no more possible. 
 180:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         The pending IRQ priority will be managed only by the subpriority. 
 181:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 183:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
 184:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
  28              		.loc 1 184 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33              	.LVL0:
  34              	.LBB40:
  35              	.LBB41:
  36              		.file 2 "./Drivers_V1.0.4/CMSIS/Include/core_cm3.h"
   1:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**************************************************************************//**
   2:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  * @file     core_cm3.h
   3:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  * @brief    CMSIS Cortex-M3 Core Peripheral Access Layer Header File
   4:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  * @version  V4.30
   5:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  * @date     20. October 2015
   6:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
   7:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
   9:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    All rights reserved.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 5


  10:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    Redistribution and use in source and binary forms, with or without
  11:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    modification, are permitted provided that the following conditions are met:
  12:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    - Redistributions of source code must retain the above copyright
  13:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer.
  14:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      notice, this list of conditions and the following disclaimer in the
  16:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      documentation and/or other materials provided with the distribution.
  17:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      to endorse or promote products derived from this software without
  19:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      specific prior written permission.
  20:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    *
  21:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    ---------------------------------------------------------------------------*/
  33:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  34:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  35:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if   defined ( __ICCARM__ )
  36:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  #pragma system_include         /* treat file as system include file for MISRA check */
  37:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  38:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #pragma clang system_header   /* treat file as system include file */
  39:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
  40:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  41:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_GENERIC
  42:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_GENERIC
  43:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  44:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #include <stdint.h>
  45:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  46:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
  47:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  extern "C" {
  48:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
  49:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  50:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
  51:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \page CMSIS_MISRA_Exceptions  MISRA-C:2004 Compliance Exceptions
  52:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   CMSIS violates the following MISRA-C:2004 rules:
  53:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  54:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    \li Required Rule 8.5, object/function definition in header file.<br>
  55:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      Function definitions in header files are used to allow 'inlining'.
  56:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  57:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    \li Required Rule 18.4, declaration of union type or object of union type: '{...}'.<br>
  58:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      Unions are used for effective representation of core registers.
  59:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  60:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****    \li Advisory Rule 19.7, Function-like macro defined.<br>
  61:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****      Function-like macros are used to allow more efficient code.
  62:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
  63:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  64:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  65:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*******************************************************************************
  66:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  *                 CMSIS definitions
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 6


  67:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
  68:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
  69:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup Cortex_M3
  70:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
  71:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
  72:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  73:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*  CMSIS CM3 definitions */
  74:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_MAIN  (0x04U)                                      /*!< [31:16] CMSIS H
  75:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION_SUB   (0x1EU)                                      /*!< [15:0]  CMSIS H
  76:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CM3_CMSIS_VERSION       ((__CM3_CMSIS_VERSION_MAIN << 16U) | \
  77:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                                     __CM3_CMSIS_VERSION_SUB           )        /*!< CMSIS HAL versi
  78:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  79:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CORTEX_M                (0x03U)                                      /*!< Cortex-M Core *
  80:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  81:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  82:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if   defined ( __CC_ARM )
  83:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  84:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  85:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  86:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  87:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
  88:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for ARM Comp
  89:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         __inline                                   /*!< inline keyword for ARM C
  90:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static __inline
  91:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  92:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
  93:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for GNU Comp
  94:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for GNU C
  95:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
  96:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
  97:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
  98:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for IAR Comp
  99:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for IAR C
 100:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 101:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 102:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 103:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TI CCS C
 104:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 105:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 106:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 107:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            __asm                                      /*!< asm keyword for TASKING 
 108:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                     /*!< inline keyword for TASKI
 109:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 110:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 111:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 112:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __packed
 113:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __ASM            _asm                                      /*!< asm keyword for COSMIC Co
 114:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __INLINE         inline                                    /*!< inline keyword for COSMIC
 115:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define __STATIC_INLINE  static inline
 116:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 117:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #else
 118:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #error Unknown compiler
 119:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 120:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 121:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /** __FPU_USED indicates whether an FPU is used or not.
 122:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     This core does not support an FPU at all
 123:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 7


 124:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __FPU_USED       0U
 125:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 126:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if defined ( __CC_ARM )
 127:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined __TARGET_FPU_VFP
 128:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 129:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 130:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 131:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined(__ARMCC_VERSION) && (__ARMCC_VERSION >= 6010050)
 132:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined __ARM_PCS_VFP
 133:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 134:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 135:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 136:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __GNUC__ )
 137:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined (__VFP_FP__) && !defined(__SOFTFP__)
 138:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 139:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 140:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 141:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __ICCARM__ )
 142:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined __ARMVFP__
 143:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 144:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 145:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 146:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __TMS470__ )
 147:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined __TI_VFP_SUPPORT__
 148:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 149:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 150:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 151:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __TASKING__ )
 152:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if defined __FPU_VFP__
 153:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 154:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 155:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 156:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #elif defined ( __CSMC__ )
 157:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #if ( __CSMC__ & 0x400U)
 158:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #error "Compiler generates FPU instructions for a device without an FPU (check __FPU_PRESENT)"
 159:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 160:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 161:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 162:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 163:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #include "core_cmInstr.h"                /* Core Instruction Access */
 164:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #include "core_cmFunc.h"                 /* Core Function Access */
 165:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 166:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 167:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 168:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 169:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 170:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif /* __CORE_CM3_H_GENERIC */
 171:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 172:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifndef __CMSIS_GENERIC
 173:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 174:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifndef __CORE_CM3_H_DEPENDANT
 175:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define __CORE_CM3_H_DEPENDANT
 176:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 177:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 178:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  extern "C" {
 179:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 180:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 8


 181:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* check device defines and use defaults */
 182:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if defined __CHECK_DEVICE_DEFINES
 183:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #ifndef __CM3_REV
 184:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #define __CM3_REV               0x0200U
 185:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #warning "__CM3_REV not defined in device header file; using default!"
 186:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 187:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 188:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #ifndef __MPU_PRESENT
 189:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #define __MPU_PRESENT             0U
 190:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #warning "__MPU_PRESENT not defined in device header file; using default!"
 191:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 192:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 193:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #ifndef __NVIC_PRIO_BITS
 194:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #define __NVIC_PRIO_BITS          4U
 195:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #warning "__NVIC_PRIO_BITS not defined in device header file; using default!"
 196:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 197:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 198:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #ifndef __Vendor_SysTickConfig
 199:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #define __Vendor_SysTickConfig    0U
 200:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     #warning "__Vendor_SysTickConfig not defined in device header file; using default!"
 201:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #endif
 202:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 203:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 204:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* IO definitions (access restrictions to peripheral registers) */
 205:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 206:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     \defgroup CMSIS_glob_defs CMSIS Global Defines
 207:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 208:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     <strong>IO Type Qualifiers</strong> are used
 209:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     \li to specify the access to peripheral variables.
 210:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     \li for automatic generation of peripheral register debug information.
 211:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
 212:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #ifdef __cplusplus
 213:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define   __I     volatile             /*!< Defines 'read only' permissions */
 214:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #else
 215:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define   __I     volatile const       /*!< Defines 'read only' permissions */
 216:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 217:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define     __O     volatile             /*!< Defines 'write only' permissions */
 218:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define     __IO    volatile             /*!< Defines 'read / write' permissions */
 219:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 220:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* following defines should be used for structure members */
 221:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define     __IM     volatile const      /*! Defines 'read only' structure member permissions */
 222:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define     __OM     volatile            /*! Defines 'write only' structure member permissions */
 223:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define     __IOM    volatile            /*! Defines 'read / write' structure member permissions */
 224:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 225:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group Cortex_M3 */
 226:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 227:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 228:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 229:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*******************************************************************************
 230:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  *                 Register Abstraction
 231:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   Core Register contain:
 232:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core Register
 233:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core NVIC Register
 234:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core SCB Register
 235:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core SysTick Register
 236:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core Debug Register
 237:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core MPU Register
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 9


 238:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
 239:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 240:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_core_register Defines and Type Definitions
 241:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief Type definitions and defines for Cortex-M processor based devices.
 242:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
 243:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 244:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 245:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 246:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_CORE  Status and Control Registers
 247:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief      Core Register type definitions.
 248:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 249:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 250:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 251:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 252:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Application Program Status Register (APSR).
 253:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 254:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef union
 255:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 256:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   struct
 257:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 258:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:27;              /*!< bit:  0..26  Reserved */
 259:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 260:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 261:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 262:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 263:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 264:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 265:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 266:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } APSR_Type;
 267:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 268:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* APSR Register Definitions */
 269:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_N_Pos                         31U                                            /*!< APSR
 270:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_N_Msk                         (1UL << APSR_N_Pos)                            /*!< APSR
 271:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 272:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_Z_Pos                         30U                                            /*!< APSR
 273:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_Z_Msk                         (1UL << APSR_Z_Pos)                            /*!< APSR
 274:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 275:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_C_Pos                         29U                                            /*!< APSR
 276:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_C_Msk                         (1UL << APSR_C_Pos)                            /*!< APSR
 277:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 278:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_V_Pos                         28U                                            /*!< APSR
 279:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_V_Msk                         (1UL << APSR_V_Pos)                            /*!< APSR
 280:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 281:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_Q_Pos                         27U                                            /*!< APSR
 282:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define APSR_Q_Msk                         (1UL << APSR_Q_Pos)                            /*!< APSR
 283:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 284:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 285:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 286:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Interrupt Program Status Register (IPSR).
 287:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 288:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef union
 289:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 290:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   struct
 291:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 292:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 293:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:23;              /*!< bit:  9..31  Reserved */
 294:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 10


 295:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 296:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } IPSR_Type;
 297:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 298:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* IPSR Register Definitions */
 299:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Pos                        0U                                            /*!< IPSR
 300:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define IPSR_ISR_Msk                       (0x1FFUL /*<< IPSR_ISR_Pos*/)                  /*!< IPSR
 301:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 302:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 303:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 304:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Special-Purpose Program Status Registers (xPSR).
 305:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 306:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef union
 307:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 308:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   struct
 309:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 310:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t ISR:9;                      /*!< bit:  0.. 8  Exception number */
 311:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t _reserved0:15;              /*!< bit:  9..23  Reserved */
 312:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t T:1;                        /*!< bit:     24  Thumb bit        (read 0) */
 313:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t IT:2;                       /*!< bit: 25..26  saved IT state   (read 0) */
 314:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t Q:1;                        /*!< bit:     27  Saturation condition flag */
 315:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t V:1;                        /*!< bit:     28  Overflow condition code flag */
 316:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t C:1;                        /*!< bit:     29  Carry condition code flag */
 317:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t Z:1;                        /*!< bit:     30  Zero condition code flag */
 318:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t N:1;                        /*!< bit:     31  Negative condition code flag */
 319:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 320:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 321:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } xPSR_Type;
 322:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 323:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* xPSR Register Definitions */
 324:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_N_Pos                         31U                                            /*!< xPSR
 325:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_N_Msk                         (1UL << xPSR_N_Pos)                            /*!< xPSR
 326:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 327:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Pos                         30U                                            /*!< xPSR
 328:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_Z_Msk                         (1UL << xPSR_Z_Pos)                            /*!< xPSR
 329:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 330:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_C_Pos                         29U                                            /*!< xPSR
 331:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_C_Msk                         (1UL << xPSR_C_Pos)                            /*!< xPSR
 332:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 333:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_V_Pos                         28U                                            /*!< xPSR
 334:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_V_Msk                         (1UL << xPSR_V_Pos)                            /*!< xPSR
 335:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 336:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Pos                         27U                                            /*!< xPSR
 337:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_Q_Msk                         (1UL << xPSR_Q_Pos)                            /*!< xPSR
 338:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 339:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Pos                        25U                                            /*!< xPSR
 340:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_IT_Msk                        (3UL << xPSR_IT_Pos)                           /*!< xPSR
 341:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 342:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_T_Pos                         24U                                            /*!< xPSR
 343:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_T_Msk                         (1UL << xPSR_T_Pos)                            /*!< xPSR
 344:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 345:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Pos                        0U                                            /*!< xPSR
 346:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define xPSR_ISR_Msk                       (0x1FFUL /*<< xPSR_ISR_Pos*/)                  /*!< xPSR
 347:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 348:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 349:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 350:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Union type to access the Control Registers (CONTROL).
 351:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 11


 352:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef union
 353:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 354:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   struct
 355:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 356:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t nPRIV:1;                    /*!< bit:      0  Execution privilege in Thread mode */
 357:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t SPSEL:1;                    /*!< bit:      1  Stack to be used */
 358:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     uint32_t _reserved1:30;              /*!< bit:  2..31  Reserved */
 359:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   } b;                                   /*!< Structure used for bit  access */
 360:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t w;                            /*!< Type      used for word access */
 361:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } CONTROL_Type;
 362:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 363:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* CONTROL Register Definitions */
 364:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Pos                   1U                                            /*!< CONT
 365:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CONTROL_SPSEL_Msk                  (1UL << CONTROL_SPSEL_Pos)                     /*!< CONT
 366:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 367:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Pos                   0U                                            /*!< CONT
 368:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CONTROL_nPRIV_Msk                  (1UL /*<< CONTROL_nPRIV_Pos*/)                 /*!< CONT
 369:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 370:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CORE */
 371:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 372:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 373:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 374:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
 375:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_NVIC  Nested Vectored Interrupt Controller (NVIC)
 376:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief      Type definitions for the NVIC Registers
 377:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 378:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 379:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 380:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 381:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Nested Vectored Interrupt Controller (NVIC).
 382:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 383:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 384:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 385:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISER[8U];               /*!< Offset: 0x000 (R/W)  Interrupt Set Enable Register */
 386:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[24U];
 387:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICER[8U];               /*!< Offset: 0x080 (R/W)  Interrupt Clear Enable Register 
 388:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RSERVED1[24U];
 389:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ISPR[8U];               /*!< Offset: 0x100 (R/W)  Interrupt Set Pending Register *
 390:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[24U];
 391:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICPR[8U];               /*!< Offset: 0x180 (R/W)  Interrupt Clear Pending Register
 392:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[24U];
 393:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IABR[8U];               /*!< Offset: 0x200 (R/W)  Interrupt Active bit Register */
 394:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[56U];
 395:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  IP[240U];               /*!< Offset: 0x300 (R/W)  Interrupt Priority Register (8Bi
 396:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[644U];
 397:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __OM  uint32_t STIR;                   /*!< Offset: 0xE00 ( /W)  Software Trigger Interrupt Regis
 398:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }  NVIC_Type;
 399:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 400:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Software Triggered Interrupt Register Definitions */
 401:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Pos                 0U                                         /*!< STIR: I
 402:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define NVIC_STIR_INTID_Msk                (0x1FFUL /*<< NVIC_STIR_INTID_Pos*/)        /*!< STIR: I
 403:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 404:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_NVIC */
 405:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 406:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 407:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 408:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 12


 409:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCB     System Control Block (SCB)
 410:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control Block Registers
 411:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 412:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 413:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 414:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 415:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control Block (SCB).
 416:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 417:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 418:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 419:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CPUID;                  /*!< Offset: 0x000 (R/ )  CPUID Base Register */
 420:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ICSR;                   /*!< Offset: 0x004 (R/W)  Interrupt Control and State Regi
 421:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VTOR;                   /*!< Offset: 0x008 (R/W)  Vector Table Offset Register */
 422:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AIRCR;                  /*!< Offset: 0x00C (R/W)  Application Interrupt and Reset 
 423:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SCR;                    /*!< Offset: 0x010 (R/W)  System Control Register */
 424:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CCR;                    /*!< Offset: 0x014 (R/W)  Configuration Control Register *
 425:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint8_t  SHP[12U];               /*!< Offset: 0x018 (R/W)  System Handlers Priority Registe
 426:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SHCSR;                  /*!< Offset: 0x024 (R/W)  System Handler Control and State
 427:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CFSR;                   /*!< Offset: 0x028 (R/W)  Configurable Fault Status Regist
 428:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t HFSR;                   /*!< Offset: 0x02C (R/W)  HardFault Status Register */
 429:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DFSR;                   /*!< Offset: 0x030 (R/W)  Debug Fault Status Register */
 430:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MMFAR;                  /*!< Offset: 0x034 (R/W)  MemManage Fault Address Register
 431:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t BFAR;                   /*!< Offset: 0x038 (R/W)  BusFault Address Register */
 432:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t AFSR;                   /*!< Offset: 0x03C (R/W)  Auxiliary Fault Status Register 
 433:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PFR[2U];                /*!< Offset: 0x040 (R/ )  Processor Feature Register */
 434:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DFR;                    /*!< Offset: 0x048 (R/ )  Debug Feature Register */
 435:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ADR;                    /*!< Offset: 0x04C (R/ )  Auxiliary Feature Register */
 436:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t MMFR[4U];               /*!< Offset: 0x050 (R/ )  Memory Model Feature Register */
 437:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ISAR[5U];               /*!< Offset: 0x060 (R/ )  Instruction Set Attributes Regis
 438:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[5U];
 439:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPACR;                  /*!< Offset: 0x088 (R/W)  Coprocessor Access Control Regis
 440:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } SCB_Type;
 441:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 442:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB CPUID Register Definitions */
 443:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Pos          24U                                            /*!< SCB 
 444:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_IMPLEMENTER_Msk          (0xFFUL << SCB_CPUID_IMPLEMENTER_Pos)          /*!< SCB 
 445:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 446:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Pos              20U                                            /*!< SCB 
 447:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_VARIANT_Msk              (0xFUL << SCB_CPUID_VARIANT_Pos)               /*!< SCB 
 448:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 449:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Pos         16U                                            /*!< SCB 
 450:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_ARCHITECTURE_Msk         (0xFUL << SCB_CPUID_ARCHITECTURE_Pos)          /*!< SCB 
 451:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 452:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Pos                4U                                            /*!< SCB 
 453:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_PARTNO_Msk               (0xFFFUL << SCB_CPUID_PARTNO_Pos)              /*!< SCB 
 454:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 455:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Pos              0U                                            /*!< SCB 
 456:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CPUID_REVISION_Msk             (0xFUL /*<< SCB_CPUID_REVISION_Pos*/)          /*!< SCB 
 457:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 458:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Interrupt Control State Register Definitions */
 459:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Pos            31U                                            /*!< SCB 
 460:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_NMIPENDSET_Msk            (1UL << SCB_ICSR_NMIPENDSET_Pos)               /*!< SCB 
 461:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 462:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Pos             28U                                            /*!< SCB 
 463:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVSET_Msk             (1UL << SCB_ICSR_PENDSVSET_Pos)                /*!< SCB 
 464:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 465:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Pos             27U                                            /*!< SCB 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 13


 466:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSVCLR_Msk             (1UL << SCB_ICSR_PENDSVCLR_Pos)                /*!< SCB 
 467:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 468:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Pos             26U                                            /*!< SCB 
 469:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTSET_Msk             (1UL << SCB_ICSR_PENDSTSET_Pos)                /*!< SCB 
 470:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 471:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Pos             25U                                            /*!< SCB 
 472:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_PENDSTCLR_Msk             (1UL << SCB_ICSR_PENDSTCLR_Pos)                /*!< SCB 
 473:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 474:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Pos            23U                                            /*!< SCB 
 475:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPREEMPT_Msk            (1UL << SCB_ICSR_ISRPREEMPT_Pos)               /*!< SCB 
 476:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 477:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Pos            22U                                            /*!< SCB 
 478:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_ISRPENDING_Msk            (1UL << SCB_ICSR_ISRPENDING_Pos)               /*!< SCB 
 479:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 480:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Pos           12U                                            /*!< SCB 
 481:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTPENDING_Msk           (0x1FFUL << SCB_ICSR_VECTPENDING_Pos)          /*!< SCB 
 482:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 483:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Pos             11U                                            /*!< SCB 
 484:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_RETTOBASE_Msk             (1UL << SCB_ICSR_RETTOBASE_Pos)                /*!< SCB 
 485:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 486:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Pos             0U                                            /*!< SCB 
 487:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_ICSR_VECTACTIVE_Msk            (0x1FFUL /*<< SCB_ICSR_VECTACTIVE_Pos*/)       /*!< SCB 
 488:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 489:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Vector Table Offset Register Definitions */
 490:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if (__CM3_REV < 0x0201U)                   /* core r2p1 */
 491:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Pos               29U                                            /*!< SCB 
 492:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLBASE_Msk               (1UL << SCB_VTOR_TBLBASE_Pos)                  /*!< SCB 
 493:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 494:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 495:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x3FFFFFUL << SCB_VTOR_TBLOFF_Pos)            /*!< SCB 
 496:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #else
 497:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Pos                 7U                                            /*!< SCB 
 498:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_VTOR_TBLOFF_Msk                (0x1FFFFFFUL << SCB_VTOR_TBLOFF_Pos)           /*!< SCB 
 499:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 500:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 501:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Application Interrupt and Reset Control Register Definitions */
 502:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Pos              16U                                            /*!< SCB 
 503:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEY_Msk              (0xFFFFUL << SCB_AIRCR_VECTKEY_Pos)            /*!< SCB 
 504:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 505:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Pos          16U                                            /*!< SCB 
 506:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTKEYSTAT_Msk          (0xFFFFUL << SCB_AIRCR_VECTKEYSTAT_Pos)        /*!< SCB 
 507:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 508:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Pos            15U                                            /*!< SCB 
 509:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_ENDIANESS_Msk            (1UL << SCB_AIRCR_ENDIANESS_Pos)               /*!< SCB 
 510:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 511:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Pos              8U                                            /*!< SCB 
 512:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_PRIGROUP_Msk             (7UL << SCB_AIRCR_PRIGROUP_Pos)                /*!< SCB 
 513:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 514:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Pos           2U                                            /*!< SCB 
 515:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_SYSRESETREQ_Msk          (1UL << SCB_AIRCR_SYSRESETREQ_Pos)             /*!< SCB 
 516:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 517:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Pos         1U                                            /*!< SCB 
 518:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTCLRACTIVE_Msk        (1UL << SCB_AIRCR_VECTCLRACTIVE_Pos)           /*!< SCB 
 519:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 520:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Pos             0U                                            /*!< SCB 
 521:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_AIRCR_VECTRESET_Msk            (1UL /*<< SCB_AIRCR_VECTRESET_Pos*/)           /*!< SCB 
 522:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 14


 523:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB System Control Register Definitions */
 524:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Pos               4U                                            /*!< SCB 
 525:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SEVONPEND_Msk              (1UL << SCB_SCR_SEVONPEND_Pos)                 /*!< SCB 
 526:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 527:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Pos               2U                                            /*!< SCB 
 528:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPDEEP_Msk              (1UL << SCB_SCR_SLEEPDEEP_Pos)                 /*!< SCB 
 529:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 530:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Pos             1U                                            /*!< SCB 
 531:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SCR_SLEEPONEXIT_Msk            (1UL << SCB_SCR_SLEEPONEXIT_Pos)               /*!< SCB 
 532:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 533:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Configuration Control Register Definitions */
 534:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Pos                9U                                            /*!< SCB 
 535:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_STKALIGN_Msk               (1UL << SCB_CCR_STKALIGN_Pos)                  /*!< SCB 
 536:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 537:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Pos               8U                                            /*!< SCB 
 538:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_BFHFNMIGN_Msk              (1UL << SCB_CCR_BFHFNMIGN_Pos)                 /*!< SCB 
 539:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 540:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Pos               4U                                            /*!< SCB 
 541:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_DIV_0_TRP_Msk              (1UL << SCB_CCR_DIV_0_TRP_Pos)                 /*!< SCB 
 542:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 543:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Pos             3U                                            /*!< SCB 
 544:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_UNALIGN_TRP_Msk            (1UL << SCB_CCR_UNALIGN_TRP_Pos)               /*!< SCB 
 545:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 546:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Pos            1U                                            /*!< SCB 
 547:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_USERSETMPEND_Msk           (1UL << SCB_CCR_USERSETMPEND_Pos)              /*!< SCB 
 548:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 549:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Pos          0U                                            /*!< SCB 
 550:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CCR_NONBASETHRDENA_Msk         (1UL /*<< SCB_CCR_NONBASETHRDENA_Pos*/)        /*!< SCB 
 551:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 552:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB System Handler Control and State Register Definitions */
 553:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Pos          18U                                            /*!< SCB 
 554:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTENA_Msk          (1UL << SCB_SHCSR_USGFAULTENA_Pos)             /*!< SCB 
 555:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 556:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Pos          17U                                            /*!< SCB 
 557:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTENA_Msk          (1UL << SCB_SHCSR_BUSFAULTENA_Pos)             /*!< SCB 
 558:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 559:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Pos          16U                                            /*!< SCB 
 560:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTENA_Msk          (1UL << SCB_SHCSR_MEMFAULTENA_Pos)             /*!< SCB 
 561:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 562:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Pos         15U                                            /*!< SCB 
 563:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLPENDED_Msk         (1UL << SCB_SHCSR_SVCALLPENDED_Pos)            /*!< SCB 
 564:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 565:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Pos       14U                                            /*!< SCB 
 566:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTPENDED_Msk       (1UL << SCB_SHCSR_BUSFAULTPENDED_Pos)          /*!< SCB 
 567:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 568:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Pos       13U                                            /*!< SCB 
 569:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTPENDED_Msk       (1UL << SCB_SHCSR_MEMFAULTPENDED_Pos)          /*!< SCB 
 570:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 571:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Pos       12U                                            /*!< SCB 
 572:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTPENDED_Msk       (1UL << SCB_SHCSR_USGFAULTPENDED_Pos)          /*!< SCB 
 573:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 574:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Pos           11U                                            /*!< SCB 
 575:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SYSTICKACT_Msk           (1UL << SCB_SHCSR_SYSTICKACT_Pos)              /*!< SCB 
 576:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 577:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Pos            10U                                            /*!< SCB 
 578:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_PENDSVACT_Msk            (1UL << SCB_SHCSR_PENDSVACT_Pos)               /*!< SCB 
 579:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 15


 580:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Pos            8U                                            /*!< SCB 
 581:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MONITORACT_Msk           (1UL << SCB_SHCSR_MONITORACT_Pos)              /*!< SCB 
 582:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 583:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Pos             7U                                            /*!< SCB 
 584:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_SVCALLACT_Msk            (1UL << SCB_SHCSR_SVCALLACT_Pos)               /*!< SCB 
 585:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 586:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Pos           3U                                            /*!< SCB 
 587:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_USGFAULTACT_Msk          (1UL << SCB_SHCSR_USGFAULTACT_Pos)             /*!< SCB 
 588:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 589:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Pos           1U                                            /*!< SCB 
 590:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_BUSFAULTACT_Msk          (1UL << SCB_SHCSR_BUSFAULTACT_Pos)             /*!< SCB 
 591:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 592:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Pos           0U                                            /*!< SCB 
 593:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_SHCSR_MEMFAULTACT_Msk          (1UL /*<< SCB_SHCSR_MEMFAULTACT_Pos*/)         /*!< SCB 
 594:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 595:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Configurable Fault Status Register Definitions */
 596:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Pos            16U                                            /*!< SCB 
 597:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_USGFAULTSR_Msk            (0xFFFFUL << SCB_CFSR_USGFAULTSR_Pos)          /*!< SCB 
 598:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 599:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Pos             8U                                            /*!< SCB 
 600:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_BUSFAULTSR_Msk            (0xFFUL << SCB_CFSR_BUSFAULTSR_Pos)            /*!< SCB 
 601:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 602:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Pos             0U                                            /*!< SCB 
 603:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_CFSR_MEMFAULTSR_Msk            (0xFFUL /*<< SCB_CFSR_MEMFAULTSR_Pos*/)        /*!< SCB 
 604:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 605:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Hard Fault Status Register Definitions */
 606:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Pos              31U                                            /*!< SCB 
 607:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_DEBUGEVT_Msk              (1UL << SCB_HFSR_DEBUGEVT_Pos)                 /*!< SCB 
 608:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 609:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Pos                30U                                            /*!< SCB 
 610:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_FORCED_Msk                (1UL << SCB_HFSR_FORCED_Pos)                   /*!< SCB 
 611:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 612:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Pos                1U                                            /*!< SCB 
 613:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_HFSR_VECTTBL_Msk               (1UL << SCB_HFSR_VECTTBL_Pos)                  /*!< SCB 
 614:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 615:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SCB Debug Fault Status Register Definitions */
 616:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Pos               4U                                            /*!< SCB 
 617:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_EXTERNAL_Msk              (1UL << SCB_DFSR_EXTERNAL_Pos)                 /*!< SCB 
 618:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 619:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Pos                 3U                                            /*!< SCB 
 620:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_VCATCH_Msk                (1UL << SCB_DFSR_VCATCH_Pos)                   /*!< SCB 
 621:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 622:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Pos                2U                                            /*!< SCB 
 623:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_DWTTRAP_Msk               (1UL << SCB_DFSR_DWTTRAP_Pos)                  /*!< SCB 
 624:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 625:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Pos                   1U                                            /*!< SCB 
 626:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_BKPT_Msk                  (1UL << SCB_DFSR_BKPT_Pos)                     /*!< SCB 
 627:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 628:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Pos                 0U                                            /*!< SCB 
 629:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_DFSR_HALTED_Msk                (1UL /*<< SCB_DFSR_HALTED_Pos*/)               /*!< SCB 
 630:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 631:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCB */
 632:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 633:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 634:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 635:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 636:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SCnSCB System Controls not in SCB (SCnSCB)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 16


 637:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Control and ID Register not in the SCB
 638:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 639:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 640:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 641:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 642:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Control and ID Register not in the SCB.
 643:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 644:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 645:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 646:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 647:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ICTR;                   /*!< Offset: 0x004 (R/ )  Interrupt Controller Type Regist
 648:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if ((defined __CM3_REV) && (__CM3_REV >= 0x200U))
 649:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACTLR;                  /*!< Offset: 0x008 (R/W)  Auxiliary Control Register */
 650:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #else
 651:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 652:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
 653:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } SCnSCB_Type;
 654:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 655:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Interrupt Controller Type Register Definitions */
 656:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Pos         0U                                         /*!< ICTR: I
 657:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ICTR_INTLINESNUM_Msk        (0xFUL /*<< SCnSCB_ICTR_INTLINESNUM_Pos*/)  /*!< ICTR: I
 658:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 659:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Auxiliary Control Register Definitions */
 660:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 661:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Pos            2U                                         /*!< ACTLR: 
 662:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISFOLD_Msk           (1UL << SCnSCB_ACTLR_DISFOLD_Pos)           /*!< ACTLR: 
 663:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 664:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Pos         1U                                         /*!< ACTLR: 
 665:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISDEFWBUF_Msk        (1UL << SCnSCB_ACTLR_DISDEFWBUF_Pos)        /*!< ACTLR: 
 666:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 667:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Pos         0U                                         /*!< ACTLR: 
 668:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB_ACTLR_DISMCYCINT_Msk        (1UL /*<< SCnSCB_ACTLR_DISMCYCINT_Pos*/)    /*!< ACTLR: 
 669:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 670:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SCnotSCB */
 671:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 672:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 673:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 674:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 675:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_SysTick     System Tick Timer (SysTick)
 676:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the System Timer Registers.
 677:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 678:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 679:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 680:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 681:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the System Timer (SysTick).
 682:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 683:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 684:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 685:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  SysTick Control and Status Regis
 686:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LOAD;                   /*!< Offset: 0x004 (R/W)  SysTick Reload Value Register */
 687:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t VAL;                    /*!< Offset: 0x008 (R/W)  SysTick Current Value Register *
 688:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CALIB;                  /*!< Offset: 0x00C (R/ )  SysTick Calibration Register */
 689:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } SysTick_Type;
 690:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 691:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SysTick Control / Status Register Definitions */
 692:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Pos         16U                                            /*!< SysT
 693:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_COUNTFLAG_Msk         (1UL << SysTick_CTRL_COUNTFLAG_Pos)            /*!< SysT
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 17


 694:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 695:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Pos          2U                                            /*!< SysT
 696:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_CLKSOURCE_Msk         (1UL << SysTick_CTRL_CLKSOURCE_Pos)            /*!< SysT
 697:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 698:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Pos            1U                                            /*!< SysT
 699:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_TICKINT_Msk           (1UL << SysTick_CTRL_TICKINT_Pos)              /*!< SysT
 700:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 701:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Pos             0U                                            /*!< SysT
 702:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CTRL_ENABLE_Msk            (1UL /*<< SysTick_CTRL_ENABLE_Pos*/)           /*!< SysT
 703:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 704:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SysTick Reload Register Definitions */
 705:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Pos             0U                                            /*!< SysT
 706:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_LOAD_RELOAD_Msk            (0xFFFFFFUL /*<< SysTick_LOAD_RELOAD_Pos*/)    /*!< SysT
 707:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 708:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SysTick Current Register Definitions */
 709:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Pos             0U                                            /*!< SysT
 710:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_VAL_CURRENT_Msk            (0xFFFFFFUL /*<< SysTick_VAL_CURRENT_Pos*/)    /*!< SysT
 711:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 712:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* SysTick Calibration Register Definitions */
 713:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Pos            31U                                            /*!< SysT
 714:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_NOREF_Msk            (1UL << SysTick_CALIB_NOREF_Pos)               /*!< SysT
 715:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 716:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Pos             30U                                            /*!< SysT
 717:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_SKEW_Msk             (1UL << SysTick_CALIB_SKEW_Pos)                /*!< SysT
 718:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 719:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Pos             0U                                            /*!< SysT
 720:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_CALIB_TENMS_Msk            (0xFFFFFFUL /*<< SysTick_CALIB_TENMS_Pos*/)    /*!< SysT
 721:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 722:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_SysTick */
 723:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 724:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 725:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 726:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 727:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_ITM     Instrumentation Trace Macrocell (ITM)
 728:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Instrumentation Trace Macrocell (ITM)
 729:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 730:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 731:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 732:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 733:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Instrumentation Trace Macrocell Register (ITM).
 734:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 735:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 736:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 737:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __OM  union
 738:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 739:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     __OM  uint8_t    u8;                 /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 8-bit */
 740:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     __OM  uint16_t   u16;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 16-bit */
 741:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     __OM  uint32_t   u32;                /*!< Offset: 0x000 ( /W)  ITM Stimulus Port 32-bit */
 742:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }  PORT [32U];                         /*!< Offset: 0x000 ( /W)  ITM Stimulus Port Registers */
 743:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[864U];
 744:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TER;                    /*!< Offset: 0xE00 (R/W)  ITM Trace Enable Register */
 745:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[15U];
 746:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TPR;                    /*!< Offset: 0xE40 (R/W)  ITM Trace Privilege Register */
 747:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[15U];
 748:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t TCR;                    /*!< Offset: 0xE80 (R/W)  ITM Trace Control Register */
 749:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[29U];
 750:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __OM  uint32_t IWR;                    /*!< Offset: 0xEF8 ( /W)  ITM Integration Write Register *
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 18


 751:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t IRR;                    /*!< Offset: 0xEFC (R/ )  ITM Integration Read Register */
 752:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t IMCR;                   /*!< Offset: 0xF00 (R/W)  ITM Integration Mode Control Reg
 753:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[43U];
 754:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __OM  uint32_t LAR;                    /*!< Offset: 0xFB0 ( /W)  ITM Lock Access Register */
 755:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t LSR;                    /*!< Offset: 0xFB4 (R/ )  ITM Lock Status Register */
 756:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[6U];
 757:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID4;                   /*!< Offset: 0xFD0 (R/ )  ITM Peripheral Identification Re
 758:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID5;                   /*!< Offset: 0xFD4 (R/ )  ITM Peripheral Identification Re
 759:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID6;                   /*!< Offset: 0xFD8 (R/ )  ITM Peripheral Identification Re
 760:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID7;                   /*!< Offset: 0xFDC (R/ )  ITM Peripheral Identification Re
 761:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID0;                   /*!< Offset: 0xFE0 (R/ )  ITM Peripheral Identification Re
 762:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID1;                   /*!< Offset: 0xFE4 (R/ )  ITM Peripheral Identification Re
 763:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID2;                   /*!< Offset: 0xFE8 (R/ )  ITM Peripheral Identification Re
 764:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PID3;                   /*!< Offset: 0xFEC (R/ )  ITM Peripheral Identification Re
 765:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID0;                   /*!< Offset: 0xFF0 (R/ )  ITM Component  Identification Re
 766:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID1;                   /*!< Offset: 0xFF4 (R/ )  ITM Component  Identification Re
 767:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID2;                   /*!< Offset: 0xFF8 (R/ )  ITM Component  Identification Re
 768:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t CID3;                   /*!< Offset: 0xFFC (R/ )  ITM Component  Identification Re
 769:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } ITM_Type;
 770:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 771:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Trace Privilege Register Definitions */
 772:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Pos                0U                                            /*!< ITM 
 773:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TPR_PRIVMASK_Msk               (0xFUL /*<< ITM_TPR_PRIVMASK_Pos*/)            /*!< ITM 
 774:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 775:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Trace Control Register Definitions */
 776:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Pos                   23U                                            /*!< ITM 
 777:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_BUSY_Msk                   (1UL << ITM_TCR_BUSY_Pos)                      /*!< ITM 
 778:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 779:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Pos             16U                                            /*!< ITM 
 780:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TraceBusID_Msk             (0x7FUL << ITM_TCR_TraceBusID_Pos)             /*!< ITM 
 781:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 782:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Pos                10U                                            /*!< ITM 
 783:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_GTSFREQ_Msk                (3UL << ITM_TCR_GTSFREQ_Pos)                   /*!< ITM 
 784:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 785:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Pos              8U                                            /*!< ITM 
 786:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSPrescale_Msk             (3UL << ITM_TCR_TSPrescale_Pos)                /*!< ITM 
 787:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 788:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Pos                  4U                                            /*!< ITM 
 789:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SWOENA_Msk                 (1UL << ITM_TCR_SWOENA_Pos)                    /*!< ITM 
 790:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 791:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Pos                  3U                                            /*!< ITM 
 792:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_DWTENA_Msk                 (1UL << ITM_TCR_DWTENA_Pos)                    /*!< ITM 
 793:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 794:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Pos                 2U                                            /*!< ITM 
 795:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_SYNCENA_Msk                (1UL << ITM_TCR_SYNCENA_Pos)                   /*!< ITM 
 796:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 797:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Pos                   1U                                            /*!< ITM 
 798:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_TSENA_Msk                  (1UL << ITM_TCR_TSENA_Pos)                     /*!< ITM 
 799:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 800:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Pos                  0U                                            /*!< ITM 
 801:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_TCR_ITMENA_Msk                 (1UL /*<< ITM_TCR_ITMENA_Pos*/)                /*!< ITM 
 802:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 803:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Integration Write Register Definitions */
 804:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Pos                0U                                            /*!< ITM 
 805:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IWR_ATVALIDM_Msk               (1UL /*<< ITM_IWR_ATVALIDM_Pos*/)              /*!< ITM 
 806:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 807:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Integration Read Register Definitions */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 19


 808:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Pos                0U                                            /*!< ITM 
 809:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IRR_ATREADYM_Msk               (1UL /*<< ITM_IRR_ATREADYM_Pos*/)              /*!< ITM 
 810:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 811:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Integration Mode Control Register Definitions */
 812:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Pos            0U                                            /*!< ITM 
 813:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_IMCR_INTEGRATION_Msk           (1UL /*<< ITM_IMCR_INTEGRATION_Pos*/)          /*!< ITM 
 814:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 815:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ITM Lock Status Register Definitions */
 816:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Pos                 2U                                            /*!< ITM 
 817:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_ByteAcc_Msk                (1UL << ITM_LSR_ByteAcc_Pos)                   /*!< ITM 
 818:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 819:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Pos                  1U                                            /*!< ITM 
 820:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Access_Msk                 (1UL << ITM_LSR_Access_Pos)                    /*!< ITM 
 821:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 822:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Pos                 0U                                            /*!< ITM 
 823:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_LSR_Present_Msk                (1UL /*<< ITM_LSR_Present_Pos*/)               /*!< ITM 
 824:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 825:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_ITM */
 826:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 827:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 828:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 829:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 830:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_DWT     Data Watchpoint and Trace (DWT)
 831:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Data Watchpoint and Trace (DWT)
 832:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 833:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 834:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 835:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 836:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Data Watchpoint and Trace Register (DWT).
 837:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 838:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 839:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 840:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x000 (R/W)  Control Register */
 841:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CYCCNT;                 /*!< Offset: 0x004 (R/W)  Cycle Count Register */
 842:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CPICNT;                 /*!< Offset: 0x008 (R/W)  CPI Count Register */
 843:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t EXCCNT;                 /*!< Offset: 0x00C (R/W)  Exception Overhead Count Registe
 844:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SLEEPCNT;               /*!< Offset: 0x010 (R/W)  Sleep Count Register */
 845:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t LSUCNT;                 /*!< Offset: 0x014 (R/W)  LSU Count Register */
 846:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FOLDCNT;                /*!< Offset: 0x018 (R/W)  Folded-instruction Count Registe
 847:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t PCSR;                   /*!< Offset: 0x01C (R/ )  Program Counter Sample Register 
 848:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP0;                  /*!< Offset: 0x020 (R/W)  Comparator Register 0 */
 849:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK0;                  /*!< Offset: 0x024 (R/W)  Mask Register 0 */
 850:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION0;              /*!< Offset: 0x028 (R/W)  Function Register 0 */
 851:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[1U];
 852:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP1;                  /*!< Offset: 0x030 (R/W)  Comparator Register 1 */
 853:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK1;                  /*!< Offset: 0x034 (R/W)  Mask Register 1 */
 854:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION1;              /*!< Offset: 0x038 (R/W)  Function Register 1 */
 855:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[1U];
 856:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP2;                  /*!< Offset: 0x040 (R/W)  Comparator Register 2 */
 857:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK2;                  /*!< Offset: 0x044 (R/W)  Mask Register 2 */
 858:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION2;              /*!< Offset: 0x048 (R/W)  Function Register 2 */
 859:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[1U];
 860:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t COMP3;                  /*!< Offset: 0x050 (R/W)  Comparator Register 3 */
 861:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t MASK3;                  /*!< Offset: 0x054 (R/W)  Mask Register 3 */
 862:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FUNCTION3;              /*!< Offset: 0x058 (R/W)  Function Register 3 */
 863:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } DWT_Type;
 864:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 20


 865:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Control Register Definitions */
 866:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Pos               28U                                         /*!< DWT CTR
 867:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NUMCOMP_Msk               (0xFUL << DWT_CTRL_NUMCOMP_Pos)             /*!< DWT CTR
 868:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 869:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Pos              27U                                         /*!< DWT CTR
 870:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOTRCPKT_Msk              (0x1UL << DWT_CTRL_NOTRCPKT_Pos)            /*!< DWT CTR
 871:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 872:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Pos             26U                                         /*!< DWT CTR
 873:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOEXTTRIG_Msk             (0x1UL << DWT_CTRL_NOEXTTRIG_Pos)           /*!< DWT CTR
 874:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 875:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Pos              25U                                         /*!< DWT CTR
 876:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOCYCCNT_Msk              (0x1UL << DWT_CTRL_NOCYCCNT_Pos)            /*!< DWT CTR
 877:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 878:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Pos              24U                                         /*!< DWT CTR
 879:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_NOPRFCNT_Msk              (0x1UL << DWT_CTRL_NOPRFCNT_Pos)            /*!< DWT CTR
 880:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 881:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Pos             22U                                         /*!< DWT CTR
 882:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCEVTENA_Msk             (0x1UL << DWT_CTRL_CYCEVTENA_Pos)           /*!< DWT CTR
 883:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 884:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Pos            21U                                         /*!< DWT CTR
 885:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_FOLDEVTENA_Msk            (0x1UL << DWT_CTRL_FOLDEVTENA_Pos)          /*!< DWT CTR
 886:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 887:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Pos             20U                                         /*!< DWT CTR
 888:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_LSUEVTENA_Msk             (0x1UL << DWT_CTRL_LSUEVTENA_Pos)           /*!< DWT CTR
 889:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 890:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Pos           19U                                         /*!< DWT CTR
 891:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SLEEPEVTENA_Msk           (0x1UL << DWT_CTRL_SLEEPEVTENA_Pos)         /*!< DWT CTR
 892:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 893:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Pos             18U                                         /*!< DWT CTR
 894:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCEVTENA_Msk             (0x1UL << DWT_CTRL_EXCEVTENA_Pos)           /*!< DWT CTR
 895:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 896:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Pos             17U                                         /*!< DWT CTR
 897:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CPIEVTENA_Msk             (0x1UL << DWT_CTRL_CPIEVTENA_Pos)           /*!< DWT CTR
 898:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 899:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Pos             16U                                         /*!< DWT CTR
 900:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_EXCTRCENA_Msk             (0x1UL << DWT_CTRL_EXCTRCENA_Pos)           /*!< DWT CTR
 901:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 902:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Pos            12U                                         /*!< DWT CTR
 903:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_PCSAMPLENA_Msk            (0x1UL << DWT_CTRL_PCSAMPLENA_Pos)          /*!< DWT CTR
 904:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 905:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Pos               10U                                         /*!< DWT CTR
 906:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_SYNCTAP_Msk               (0x3UL << DWT_CTRL_SYNCTAP_Pos)             /*!< DWT CTR
 907:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 908:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Pos                 9U                                         /*!< DWT CTR
 909:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCTAP_Msk                (0x1UL << DWT_CTRL_CYCTAP_Pos)              /*!< DWT CTR
 910:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 911:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Pos               5U                                         /*!< DWT CTR
 912:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTINIT_Msk              (0xFUL << DWT_CTRL_POSTINIT_Pos)            /*!< DWT CTR
 913:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 914:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Pos             1U                                         /*!< DWT CTR
 915:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_POSTPRESET_Msk            (0xFUL << DWT_CTRL_POSTPRESET_Pos)          /*!< DWT CTR
 916:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 917:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Pos              0U                                         /*!< DWT CTR
 918:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CTRL_CYCCNTENA_Msk             (0x1UL /*<< DWT_CTRL_CYCCNTENA_Pos*/)       /*!< DWT CTR
 919:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 920:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT CPI Count Register Definitions */
 921:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Pos               0U                                         /*!< DWT CPI
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 21


 922:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_CPICNT_CPICNT_Msk              (0xFFUL /*<< DWT_CPICNT_CPICNT_Pos*/)       /*!< DWT CPI
 923:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 924:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Exception Overhead Count Register Definitions */
 925:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Pos               0U                                         /*!< DWT EXC
 926:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_EXCCNT_EXCCNT_Msk              (0xFFUL /*<< DWT_EXCCNT_EXCCNT_Pos*/)       /*!< DWT EXC
 927:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 928:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Sleep Count Register Definitions */
 929:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Pos           0U                                         /*!< DWT SLE
 930:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_SLEEPCNT_SLEEPCNT_Msk          (0xFFUL /*<< DWT_SLEEPCNT_SLEEPCNT_Pos*/)   /*!< DWT SLE
 931:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 932:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT LSU Count Register Definitions */
 933:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Pos               0U                                         /*!< DWT LSU
 934:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_LSUCNT_LSUCNT_Msk              (0xFFUL /*<< DWT_LSUCNT_LSUCNT_Pos*/)       /*!< DWT LSU
 935:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 936:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Folded-instruction Count Register Definitions */
 937:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Pos             0U                                         /*!< DWT FOL
 938:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FOLDCNT_FOLDCNT_Msk            (0xFFUL /*<< DWT_FOLDCNT_FOLDCNT_Pos*/)     /*!< DWT FOL
 939:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 940:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Comparator Mask Register Definitions */
 941:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Pos                   0U                                         /*!< DWT MAS
 942:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_MASK_MASK_Msk                  (0x1FUL /*<< DWT_MASK_MASK_Pos*/)           /*!< DWT MAS
 943:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 944:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* DWT Comparator Function Register Definitions */
 945:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Pos           24U                                         /*!< DWT FUN
 946:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_MATCHED_Msk           (0x1UL << DWT_FUNCTION_MATCHED_Pos)         /*!< DWT FUN
 947:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 948:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Pos        16U                                         /*!< DWT FUN
 949:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR1_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR1_Pos)      /*!< DWT FUN
 950:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 951:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Pos        12U                                         /*!< DWT FUN
 952:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVADDR0_Msk        (0xFUL << DWT_FUNCTION_DATAVADDR0_Pos)      /*!< DWT FUN
 953:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 954:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Pos         10U                                         /*!< DWT FUN
 955:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVSIZE_Msk         (0x3UL << DWT_FUNCTION_DATAVSIZE_Pos)       /*!< DWT FUN
 956:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 957:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Pos            9U                                         /*!< DWT FUN
 958:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_LNK1ENA_Msk           (0x1UL << DWT_FUNCTION_LNK1ENA_Pos)         /*!< DWT FUN
 959:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 960:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Pos         8U                                         /*!< DWT FUN
 961:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_DATAVMATCH_Msk        (0x1UL << DWT_FUNCTION_DATAVMATCH_Pos)      /*!< DWT FUN
 962:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 963:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Pos           7U                                         /*!< DWT FUN
 964:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_CYCMATCH_Msk          (0x1UL << DWT_FUNCTION_CYCMATCH_Pos)        /*!< DWT FUN
 965:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 966:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Pos          5U                                         /*!< DWT FUN
 967:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_EMITRANGE_Msk         (0x1UL << DWT_FUNCTION_EMITRANGE_Pos)       /*!< DWT FUN
 968:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 969:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Pos           0U                                         /*!< DWT FUN
 970:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_FUNCTION_FUNCTION_Msk          (0xFUL /*<< DWT_FUNCTION_FUNCTION_Pos*/)    /*!< DWT FUN
 971:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 972:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_DWT */
 973:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 974:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 975:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 976:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
 977:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_TPI     Trace Port Interface (TPI)
 978:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Trace Port Interface (TPI)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 22


 979:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
 980:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 981:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 982:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
 983:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Trace Port Interface Register (TPI).
 984:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
 985:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
 986:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
 987:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SSPSR;                  /*!< Offset: 0x000 (R/ )  Supported Parallel Port Size Reg
 988:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CSPSR;                  /*!< Offset: 0x004 (R/W)  Current Parallel Port Size Regis
 989:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED0[2U];
 990:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ACPR;                   /*!< Offset: 0x010 (R/W)  Asynchronous Clock Prescaler Reg
 991:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED1[55U];
 992:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t SPPR;                   /*!< Offset: 0x0F0 (R/W)  Selected Pin Protocol Register *
 993:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED2[131U];
 994:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FFSR;                   /*!< Offset: 0x300 (R/ )  Formatter and Flush Status Regis
 995:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t FFCR;                   /*!< Offset: 0x304 (R/W)  Formatter and Flush Control Regi
 996:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FSCR;                   /*!< Offset: 0x308 (R/ )  Formatter Synchronization Counte
 997:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED3[759U];
 998:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TRIGGER;                /*!< Offset: 0xEE8 (R/ )  TRIGGER */
 999:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO0;                  /*!< Offset: 0xEEC (R/ )  Integration ETM Data */
1000:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR2;              /*!< Offset: 0xEF0 (R/ )  ITATBCTR2 */
1001:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED4[1U];
1002:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t ITATBCTR0;              /*!< Offset: 0xEF8 (R/ )  ITATBCTR0 */
1003:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t FIFO1;                  /*!< Offset: 0xEFC (R/ )  Integration ITM Data */
1004:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t ITCTRL;                 /*!< Offset: 0xF00 (R/W)  Integration Mode Control */
1005:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED5[39U];
1006:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMSET;               /*!< Offset: 0xFA0 (R/W)  Claim tag set */
1007:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CLAIMCLR;               /*!< Offset: 0xFA4 (R/W)  Claim tag clear */
1008:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****         uint32_t RESERVED7[8U];
1009:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVID;                  /*!< Offset: 0xFC8 (R/ )  TPIU_DEVID */
1010:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t DEVTYPE;                /*!< Offset: 0xFCC (R/ )  TPIU_DEVTYPE */
1011:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } TPI_Type;
1012:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1013:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Asynchronous Clock Prescaler Register Definitions */
1014:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Pos              0U                                         /*!< TPI ACP
1015:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ACPR_PRESCALER_Msk             (0x1FFFUL /*<< TPI_ACPR_PRESCALER_Pos*/)    /*!< TPI ACP
1016:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1017:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Selected Pin Protocol Register Definitions */
1018:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Pos                 0U                                         /*!< TPI SPP
1019:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_SPPR_TXMODE_Msk                (0x3UL /*<< TPI_SPPR_TXMODE_Pos*/)          /*!< TPI SPP
1020:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1021:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Status Register Definitions */
1022:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Pos              3U                                         /*!< TPI FFS
1023:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtNonStop_Msk             (0x1UL << TPI_FFSR_FtNonStop_Pos)           /*!< TPI FFS
1024:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1025:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Pos              2U                                         /*!< TPI FFS
1026:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_TCPresent_Msk             (0x1UL << TPI_FFSR_TCPresent_Pos)           /*!< TPI FFS
1027:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1028:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Pos              1U                                         /*!< TPI FFS
1029:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FtStopped_Msk             (0x1UL << TPI_FFSR_FtStopped_Pos)           /*!< TPI FFS
1030:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1031:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Pos               0U                                         /*!< TPI FFS
1032:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFSR_FlInProg_Msk              (0x1UL /*<< TPI_FFSR_FlInProg_Pos*/)        /*!< TPI FFS
1033:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1034:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Formatter and Flush Control Register Definitions */
1035:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Pos                 8U                                         /*!< TPI FFC
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 23


1036:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_TrigIn_Msk                (0x1UL << TPI_FFCR_TrigIn_Pos)              /*!< TPI FFC
1037:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1038:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Pos                1U                                         /*!< TPI FFC
1039:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FFCR_EnFCont_Msk               (0x1UL << TPI_FFCR_EnFCont_Pos)             /*!< TPI FFC
1040:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1041:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI TRIGGER Register Definitions */
1042:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Pos             0U                                         /*!< TPI TRI
1043:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_TRIGGER_TRIGGER_Msk            (0x1UL /*<< TPI_TRIGGER_TRIGGER_Pos*/)      /*!< TPI TRI
1044:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1045:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Integration ETM Data Register Definitions (FIFO0) */
1046:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1047:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ITM_ATVALID_Pos)        /*!< TPI FIF
1048:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1049:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1050:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ITM_bytecount_Msk        (0x3UL << TPI_FIFO0_ITM_bytecount_Pos)      /*!< TPI FIF
1051:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1052:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1053:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO0_ETM_ATVALID_Pos)        /*!< TPI FIF
1054:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1055:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1056:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM_bytecount_Msk        (0x3UL << TPI_FIFO0_ETM_bytecount_Pos)      /*!< TPI FIF
1057:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1058:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Pos                 16U                                         /*!< TPI FIF
1059:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM2_Msk                 (0xFFUL << TPI_FIFO0_ETM2_Pos)              /*!< TPI FIF
1060:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1061:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Pos                  8U                                         /*!< TPI FIF
1062:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM1_Msk                 (0xFFUL << TPI_FIFO0_ETM1_Pos)              /*!< TPI FIF
1063:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1064:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Pos                  0U                                         /*!< TPI FIF
1065:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO0_ETM0_Msk                 (0xFFUL /*<< TPI_FIFO0_ETM0_Pos*/)          /*!< TPI FIF
1066:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1067:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR2 Register Definitions */
1068:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Pos           0U                                         /*!< TPI ITA
1069:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR2_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR2_ATREADY_Pos*/)    /*!< TPI ITA
1070:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1071:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Integration ITM Data Register Definitions (FIFO1) */
1072:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Pos          29U                                         /*!< TPI FIF
1073:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ITM_ATVALID_Pos)        /*!< TPI FIF
1074:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1075:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Pos        27U                                         /*!< TPI FIF
1076:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM_bytecount_Msk        (0x3UL << TPI_FIFO1_ITM_bytecount_Pos)      /*!< TPI FIF
1077:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1078:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Pos          26U                                         /*!< TPI FIF
1079:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_ATVALID_Msk          (0x3UL << TPI_FIFO1_ETM_ATVALID_Pos)        /*!< TPI FIF
1080:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1081:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Pos        24U                                         /*!< TPI FIF
1082:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ETM_bytecount_Msk        (0x3UL << TPI_FIFO1_ETM_bytecount_Pos)      /*!< TPI FIF
1083:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1084:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Pos                 16U                                         /*!< TPI FIF
1085:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM2_Msk                 (0xFFUL << TPI_FIFO1_ITM2_Pos)              /*!< TPI FIF
1086:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1087:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Pos                  8U                                         /*!< TPI FIF
1088:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM1_Msk                 (0xFFUL << TPI_FIFO1_ITM1_Pos)              /*!< TPI FIF
1089:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1090:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Pos                  0U                                         /*!< TPI FIF
1091:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_FIFO1_ITM0_Msk                 (0xFFUL /*<< TPI_FIFO1_ITM0_Pos*/)          /*!< TPI FIF
1092:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 24


1093:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI ITATBCTR0 Register Definitions */
1094:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Pos           0U                                         /*!< TPI ITA
1095:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITATBCTR0_ATREADY_Msk          (0x1UL /*<< TPI_ITATBCTR0_ATREADY_Pos*/)    /*!< TPI ITA
1096:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1097:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI Integration Mode Control Register Definitions */
1098:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Pos                 0U                                         /*!< TPI ITC
1099:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_ITCTRL_Mode_Msk                (0x1UL /*<< TPI_ITCTRL_Mode_Pos*/)          /*!< TPI ITC
1100:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1101:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI DEVID Register Definitions */
1102:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Pos             11U                                         /*!< TPI DEV
1103:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NRZVALID_Msk             (0x1UL << TPI_DEVID_NRZVALID_Pos)           /*!< TPI DEV
1104:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1105:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Pos            10U                                         /*!< TPI DEV
1106:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MANCVALID_Msk            (0x1UL << TPI_DEVID_MANCVALID_Pos)          /*!< TPI DEV
1107:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1108:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Pos             9U                                         /*!< TPI DEV
1109:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_PTINVALID_Msk            (0x1UL << TPI_DEVID_PTINVALID_Pos)          /*!< TPI DEV
1110:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1111:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Pos              6U                                         /*!< TPI DEV
1112:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_MinBufSz_Msk             (0x7UL << TPI_DEVID_MinBufSz_Pos)           /*!< TPI DEV
1113:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1114:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Pos             5U                                         /*!< TPI DEV
1115:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_AsynClkIn_Msk            (0x1UL << TPI_DEVID_AsynClkIn_Pos)          /*!< TPI DEV
1116:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1117:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Pos          0U                                         /*!< TPI DEV
1118:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVID_NrTraceInput_Msk         (0x1FUL /*<< TPI_DEVID_NrTraceInput_Pos*/)  /*!< TPI DEV
1119:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1120:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* TPI DEVTYPE Register Definitions */
1121:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Pos           4U                                         /*!< TPI DEV
1122:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_MajorType_Msk          (0xFUL << TPI_DEVTYPE_MajorType_Pos)        /*!< TPI DEV
1123:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1124:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Pos             0U                                         /*!< TPI DEV
1125:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_DEVTYPE_SubType_Msk            (0xFUL /*<< TPI_DEVTYPE_SubType_Pos*/)      /*!< TPI DEV
1126:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1127:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@}*/ /* end of group CMSIS_TPI */
1128:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1129:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1130:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1131:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1132:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1133:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_MPU     Memory Protection Unit (MPU)
1134:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Memory Protection Unit (MPU)
1135:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1136:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1137:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1138:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1139:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Memory Protection Unit (MPU).
1140:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1141:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
1142:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1143:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IM  uint32_t TYPE;                   /*!< Offset: 0x000 (R/ )  MPU Type Register */
1144:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t CTRL;                   /*!< Offset: 0x004 (R/W)  MPU Control Register */
1145:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RNR;                    /*!< Offset: 0x008 (R/W)  MPU Region RNRber Register */
1146:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR;                   /*!< Offset: 0x00C (R/W)  MPU Region Base Address Register
1147:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR;                   /*!< Offset: 0x010 (R/W)  MPU Region Attribute and Size Re
1148:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A1;                /*!< Offset: 0x014 (R/W)  MPU Alias 1 Region Base Address 
1149:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A1;                /*!< Offset: 0x018 (R/W)  MPU Alias 1 Region Attribute and
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 25


1150:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A2;                /*!< Offset: 0x01C (R/W)  MPU Alias 2 Region Base Address 
1151:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A2;                /*!< Offset: 0x020 (R/W)  MPU Alias 2 Region Attribute and
1152:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RBAR_A3;                /*!< Offset: 0x024 (R/W)  MPU Alias 3 Region Base Address 
1153:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t RASR_A3;                /*!< Offset: 0x028 (R/W)  MPU Alias 3 Region Attribute and
1154:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } MPU_Type;
1155:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1156:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* MPU Type Register Definitions */
1157:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Pos               16U                                            /*!< MPU 
1158:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_IREGION_Msk               (0xFFUL << MPU_TYPE_IREGION_Pos)               /*!< MPU 
1159:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1160:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Pos                8U                                            /*!< MPU 
1161:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_DREGION_Msk               (0xFFUL << MPU_TYPE_DREGION_Pos)               /*!< MPU 
1162:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1163:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Pos               0U                                            /*!< MPU 
1164:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_TYPE_SEPARATE_Msk              (1UL /*<< MPU_TYPE_SEPARATE_Pos*/)             /*!< MPU 
1165:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1166:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* MPU Control Register Definitions */
1167:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Pos             2U                                            /*!< MPU 
1168:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_PRIVDEFENA_Msk            (1UL << MPU_CTRL_PRIVDEFENA_Pos)               /*!< MPU 
1169:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1170:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Pos               1U                                            /*!< MPU 
1171:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_HFNMIENA_Msk              (1UL << MPU_CTRL_HFNMIENA_Pos)                 /*!< MPU 
1172:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1173:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Pos                 0U                                            /*!< MPU 
1174:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_CTRL_ENABLE_Msk                (1UL /*<< MPU_CTRL_ENABLE_Pos*/)               /*!< MPU 
1175:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1176:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* MPU Region Number Register Definitions */
1177:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Pos                  0U                                            /*!< MPU 
1178:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RNR_REGION_Msk                 (0xFFUL /*<< MPU_RNR_REGION_Pos*/)             /*!< MPU 
1179:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1180:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* MPU Region Base Address Register Definitions */
1181:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Pos                   5U                                            /*!< MPU 
1182:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_ADDR_Msk                  (0x7FFFFFFUL << MPU_RBAR_ADDR_Pos)             /*!< MPU 
1183:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1184:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Pos                  4U                                            /*!< MPU 
1185:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_VALID_Msk                 (1UL << MPU_RBAR_VALID_Pos)                    /*!< MPU 
1186:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1187:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Pos                 0U                                            /*!< MPU 
1188:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RBAR_REGION_Msk                (0xFUL /*<< MPU_RBAR_REGION_Pos*/)             /*!< MPU 
1189:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1190:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* MPU Region Attribute and Size Register Definitions */
1191:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Pos                 16U                                            /*!< MPU 
1192:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ATTRS_Msk                 (0xFFFFUL << MPU_RASR_ATTRS_Pos)               /*!< MPU 
1193:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1194:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Pos                    28U                                            /*!< MPU 
1195:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_XN_Msk                    (1UL << MPU_RASR_XN_Pos)                       /*!< MPU 
1196:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1197:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Pos                    24U                                            /*!< MPU 
1198:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_AP_Msk                    (0x7UL << MPU_RASR_AP_Pos)                     /*!< MPU 
1199:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1200:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Pos                   19U                                            /*!< MPU 
1201:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_TEX_Msk                   (0x7UL << MPU_RASR_TEX_Pos)                    /*!< MPU 
1202:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1203:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Pos                     18U                                            /*!< MPU 
1204:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_S_Msk                     (1UL << MPU_RASR_S_Pos)                        /*!< MPU 
1205:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1206:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Pos                     17U                                            /*!< MPU 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 26


1207:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_C_Msk                     (1UL << MPU_RASR_C_Pos)                        /*!< MPU 
1208:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1209:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Pos                     16U                                            /*!< MPU 
1210:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_B_Msk                     (1UL << MPU_RASR_B_Pos)                        /*!< MPU 
1211:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1212:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Pos                    8U                                            /*!< MPU 
1213:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SRD_Msk                   (0xFFUL << MPU_RASR_SRD_Pos)                   /*!< MPU 
1214:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1215:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Pos                   1U                                            /*!< MPU 
1216:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_SIZE_Msk                  (0x1FUL << MPU_RASR_SIZE_Pos)                  /*!< MPU 
1217:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1218:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Pos                 0U                                            /*!< MPU 
1219:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define MPU_RASR_ENABLE_Msk                (1UL /*<< MPU_RASR_ENABLE_Pos*/)               /*!< MPU 
1220:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1221:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_MPU */
1222:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
1223:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1224:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1225:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1226:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_core_register
1227:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_CoreDebug       Core Debug Registers (CoreDebug)
1228:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Type definitions for the Core Debug Registers
1229:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1230:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1231:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1232:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1233:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief  Structure type to access the Core Debug Register (CoreDebug).
1234:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1235:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** typedef struct
1236:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1237:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DHCSR;                  /*!< Offset: 0x000 (R/W)  Debug Halting Control and Status
1238:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __OM  uint32_t DCRSR;                  /*!< Offset: 0x004 ( /W)  Debug Core Register Selector Reg
1239:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DCRDR;                  /*!< Offset: 0x008 (R/W)  Debug Core Register Data Registe
1240:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __IOM uint32_t DEMCR;                  /*!< Offset: 0x00C (R/W)  Debug Exception and Monitor Cont
1241:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** } CoreDebug_Type;
1242:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1243:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Debug Halting Control and Status Register Definitions */
1244:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Pos         16U                                            /*!< Core
1245:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_DBGKEY_Msk         (0xFFFFUL << CoreDebug_DHCSR_DBGKEY_Pos)       /*!< Core
1246:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1247:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Pos     25U                                            /*!< Core
1248:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RESET_ST_Msk     (1UL << CoreDebug_DHCSR_S_RESET_ST_Pos)        /*!< Core
1249:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1250:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Pos    24U                                            /*!< Core
1251:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_RETIRE_ST_Msk    (1UL << CoreDebug_DHCSR_S_RETIRE_ST_Pos)       /*!< Core
1252:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1253:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Pos       19U                                            /*!< Core
1254:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_LOCKUP_Msk       (1UL << CoreDebug_DHCSR_S_LOCKUP_Pos)          /*!< Core
1255:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1256:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Pos        18U                                            /*!< Core
1257:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_SLEEP_Msk        (1UL << CoreDebug_DHCSR_S_SLEEP_Pos)           /*!< Core
1258:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1259:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Pos         17U                                            /*!< Core
1260:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_HALT_Msk         (1UL << CoreDebug_DHCSR_S_HALT_Pos)            /*!< Core
1261:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1262:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Pos       16U                                            /*!< Core
1263:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_S_REGRDY_Msk       (1UL << CoreDebug_DHCSR_S_REGRDY_Pos)          /*!< Core
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 27


1264:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1265:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Pos     5U                                            /*!< Core
1266:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_SNAPSTALL_Msk    (1UL << CoreDebug_DHCSR_C_SNAPSTALL_Pos)       /*!< Core
1267:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1268:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Pos      3U                                            /*!< Core
1269:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_MASKINTS_Msk     (1UL << CoreDebug_DHCSR_C_MASKINTS_Pos)        /*!< Core
1270:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1271:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Pos          2U                                            /*!< Core
1272:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_STEP_Msk         (1UL << CoreDebug_DHCSR_C_STEP_Pos)            /*!< Core
1273:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1274:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Pos          1U                                            /*!< Core
1275:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_HALT_Msk         (1UL << CoreDebug_DHCSR_C_HALT_Pos)            /*!< Core
1276:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1277:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Pos       0U                                            /*!< Core
1278:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DHCSR_C_DEBUGEN_Msk      (1UL /*<< CoreDebug_DHCSR_C_DEBUGEN_Pos*/)     /*!< Core
1279:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1280:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Debug Core Register Selector Register Definitions */
1281:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Pos         16U                                            /*!< Core
1282:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGWnR_Msk         (1UL << CoreDebug_DCRSR_REGWnR_Pos)            /*!< Core
1283:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1284:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Pos          0U                                            /*!< Core
1285:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DCRSR_REGSEL_Msk         (0x1FUL /*<< CoreDebug_DCRSR_REGSEL_Pos*/)     /*!< Core
1286:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1287:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Debug Exception and Monitor Control Register Definitions */
1288:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Pos         24U                                            /*!< Core
1289:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_TRCENA_Msk         (1UL << CoreDebug_DEMCR_TRCENA_Pos)            /*!< Core
1290:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1291:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Pos        19U                                            /*!< Core
1292:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_REQ_Msk        (1UL << CoreDebug_DEMCR_MON_REQ_Pos)           /*!< Core
1293:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1294:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Pos       18U                                            /*!< Core
1295:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_STEP_Msk       (1UL << CoreDebug_DEMCR_MON_STEP_Pos)          /*!< Core
1296:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1297:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Pos       17U                                            /*!< Core
1298:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_PEND_Msk       (1UL << CoreDebug_DEMCR_MON_PEND_Pos)          /*!< Core
1299:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1300:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Pos         16U                                            /*!< Core
1301:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_MON_EN_Msk         (1UL << CoreDebug_DEMCR_MON_EN_Pos)            /*!< Core
1302:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1303:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Pos     10U                                            /*!< Core
1304:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_HARDERR_Msk     (1UL << CoreDebug_DEMCR_VC_HARDERR_Pos)        /*!< Core
1305:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1306:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Pos       9U                                            /*!< Core
1307:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_INTERR_Msk      (1UL << CoreDebug_DEMCR_VC_INTERR_Pos)         /*!< Core
1308:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1309:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Pos       8U                                            /*!< Core
1310:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_BUSERR_Msk      (1UL << CoreDebug_DEMCR_VC_BUSERR_Pos)         /*!< Core
1311:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1312:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Pos      7U                                            /*!< Core
1313:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_STATERR_Msk     (1UL << CoreDebug_DEMCR_VC_STATERR_Pos)        /*!< Core
1314:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1315:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Pos       6U                                            /*!< Core
1316:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CHKERR_Msk      (1UL << CoreDebug_DEMCR_VC_CHKERR_Pos)         /*!< Core
1317:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1318:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Pos      5U                                            /*!< Core
1319:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_NOCPERR_Msk     (1UL << CoreDebug_DEMCR_VC_NOCPERR_Pos)        /*!< Core
1320:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 28


1321:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Pos        4U                                            /*!< Core
1322:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_MMERR_Msk       (1UL << CoreDebug_DEMCR_VC_MMERR_Pos)          /*!< Core
1323:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1324:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Pos    0U                                            /*!< Core
1325:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_DEMCR_VC_CORERESET_Msk   (1UL /*<< CoreDebug_DEMCR_VC_CORERESET_Pos*/)  /*!< Core
1326:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1327:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_CoreDebug */
1328:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1329:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1330:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1331:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1332:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_bitfield     Core register bit field macros
1333:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief      Macros for use with bit field definitions (xxx_Pos, xxx_Msk).
1334:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1335:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1336:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1337:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1338:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Mask and shift a bit field value for use in a register bit range.
1339:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1340:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of the bit field.
1341:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted value.
1342:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
1343:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define _VAL2FLD(field, value)    ((value << field ## _Pos) & field ## _Msk)
1344:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1345:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1346:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief     Mask and shift a register value to extract a bit filed value.
1347:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param[in] field  Name of the register bit field.
1348:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param[in] value  Value of register.
1349:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return           Masked and shifted bit field value.
1350:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
1351:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define _FLD2VAL(field, value)    ((value & field ## _Msk) >> field ## _Pos)
1352:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1353:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of group CMSIS_core_bitfield */
1354:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1355:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1356:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1357:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup    CMSIS_core_register
1358:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup   CMSIS_core_base     Core Definitions
1359:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief      Definitions for base addresses, unions, and structures.
1360:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1361:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1362:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1363:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* Memory mapping of Cortex-M3 Hardware */
1364:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCS_BASE            (0xE000E000UL)                            /*!< System Control Space Bas
1365:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM_BASE            (0xE0000000UL)                            /*!< ITM Base Address */
1366:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT_BASE            (0xE0001000UL)                            /*!< DWT Base Address */
1367:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI_BASE            (0xE0040000UL)                            /*!< TPI Base Address */
1368:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug_BASE      (0xE000EDF0UL)                            /*!< Core Debug Base Address 
1369:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick_BASE        (SCS_BASE +  0x0010UL)                    /*!< SysTick Base Address */
1370:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define NVIC_BASE           (SCS_BASE +  0x0100UL)                    /*!< NVIC Base Address */
1371:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB_BASE            (SCS_BASE +  0x0D00UL)                    /*!< System Control Block Bas
1372:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1373:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCnSCB              ((SCnSCB_Type    *)     SCS_BASE      )   /*!< System control Register 
1374:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SCB                 ((SCB_Type       *)     SCB_BASE      )   /*!< SCB configuration struct
1375:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define SysTick             ((SysTick_Type   *)     SysTick_BASE  )   /*!< SysTick configuration st
1376:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define NVIC                ((NVIC_Type      *)     NVIC_BASE     )   /*!< NVIC configuration struc
1377:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define ITM                 ((ITM_Type       *)     ITM_BASE      )   /*!< ITM configuration struct
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 29


1378:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define DWT                 ((DWT_Type       *)     DWT_BASE      )   /*!< DWT configuration struct
1379:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define TPI                 ((TPI_Type       *)     TPI_BASE      )   /*!< TPI configuration struct
1380:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #define CoreDebug           ((CoreDebug_Type *)     CoreDebug_BASE)   /*!< Core Debug configuration
1381:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1382:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if (__MPU_PRESENT == 1U)
1383:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define MPU_BASE          (SCS_BASE +  0x0D90UL)                    /*!< Memory Protection Unit *
1384:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   #define MPU               ((MPU_Type       *)     MPU_BASE      )   /*!< Memory Protection Unit *
1385:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #endif
1386:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1387:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} */
1388:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1389:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1390:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1391:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*******************************************************************************
1392:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  *                Hardware Abstraction Layer
1393:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   Core Function Interface contains:
1394:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core NVIC Functions
1395:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core SysTick Functions
1396:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core Debug Functions
1397:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   - Core Register Access Functions
1398:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  ******************************************************************************/
1399:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1400:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_FunctionInterface Functions and Instructions Reference
1401:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** */
1402:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1403:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1404:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1405:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ##########################   NVIC functions  #################################### */
1406:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1407:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1408:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_NVICFunctions NVIC Functions
1409:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Functions that manage interrupts and exceptions via the NVIC.
1410:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1411:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1412:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1413:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1414:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Set Priority Grouping
1415:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Sets the priority grouping field using the required unlock sequence.
1416:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            The parameter PriorityGroup is assigned to the field SCB->AIRCR [10:8] PRIGROUP field.
1417:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            Only values from 0..7 are used.
1418:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1419:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1420:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      PriorityGroup  Priority grouping field.
1421:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1422:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriorityGrouping(uint32_t PriorityGroup)
1423:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1424:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t reg_value;
1425:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);             /* only values 0..7 a
1426:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1427:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   reg_value  =  SCB->AIRCR;                                                   /* read old register 
  37              		.loc 2 1427 0
  38 0000 074A     		ldr	r2, .L2
  39 0002 D368     		ldr	r3, [r2, #12]
  40              	.LVL1:
1428:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   reg_value &= ~((uint32_t)(SCB_AIRCR_VECTKEY_Msk | SCB_AIRCR_PRIGROUP_Msk)); /* clear bits to chan
  41              		.loc 2 1428 0
  42 0004 23F4E063 		bic	r3, r3, #1792
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 30


  43              	.LVL2:
  44 0008 1B04     		lsls	r3, r3, #16
  45 000a 1B0C     		lsrs	r3, r3, #16
  46              	.LVL3:
1429:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
1430:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                 ((uint32_t)0x5FAUL << SCB_AIRCR_VECTKEY_Pos) |
1431:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  47              		.loc 2 1431 0
  48 000c 0002     		lsls	r0, r0, #8
  49              	.LVL4:
  50 000e 00F4E060 		and	r0, r0, #1792
1430:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                 (PriorityGroupTmp << 8U)                      );              /* Insert write key a
  51              		.loc 2 1430 0
  52 0012 1843     		orrs	r0, r0, r3
1429:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   reg_value  =  (reg_value                                   |
  53              		.loc 2 1429 0
  54 0014 40F0BF60 		orr	r0, r0, #100139008
  55 0018 40F40030 		orr	r0, r0, #131072
  56              	.LVL5:
1432:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SCB->AIRCR =  reg_value;
  57              		.loc 2 1432 0
  58 001c D060     		str	r0, [r2, #12]
  59              	.LVL6:
  60 001e 7047     		bx	lr
  61              	.L3:
  62              		.align	2
  63              	.L2:
  64 0020 00ED00E0 		.word	-536810240
  65              	.LBE41:
  66              	.LBE40:
  67              		.cfi_endproc
  68              	.LFE64:
  70              		.section	.text.HAL_NVIC_SetPriority,"ax",%progbits
  71              		.align	2
  72              		.global	HAL_NVIC_SetPriority
  73              		.thumb
  74              		.thumb_func
  76              	HAL_NVIC_SetPriority:
  77              	.LFB65:
 185:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 186:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 187:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 188:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set the PRIGROUP[10:8] bits according to the PriorityGroup parameter value */
 189:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPriorityGrouping(PriorityGroup);
 190:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 191:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 192:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 193:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets the priority of an interrupt.
 194:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn: External interrupt number
 195:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 196:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 197:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  PreemptPriority: The pre-emption priority for the IRQn channel.
 198:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 199:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority 
 200:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  SubPriority: the subpriority level for the IRQ channel.
 201:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be a value between 0 and 15
 202:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         A lower priority value indicates a higher priority.          
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 31


 203:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 204:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 205:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPriority(IRQn_Type IRQn, uint32_t PreemptPriority, uint32_t SubPriority)
 206:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
  78              		.loc 1 206 0
  79              		.cfi_startproc
  80              		@ args = 0, pretend = 0, frame = 0
  81              		@ frame_needed = 0, uses_anonymous_args = 0
  82              		@ link register save eliminated.
  83              	.LVL7:
  84 0000 30B4     		push	{r4, r5}
  85              	.LCFI0:
  86              		.cfi_def_cfa_offset 8
  87              		.cfi_offset 4, -8
  88              		.cfi_offset 5, -4
  89              	.LVL8:
  90              	.LBB42:
  91              	.LBB43:
1433:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1434:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1435:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1436:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1437:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Get Priority Grouping
1438:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Reads the priority grouping field from the NVIC Interrupt Controller.
1439:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return                Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field).
1440:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1441:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriorityGrouping(void)
1442:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1443:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   return ((uint32_t)((SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) >> SCB_AIRCR_PRIGROUP_Pos));
  92              		.loc 2 1443 0
  93 0002 164B     		ldr	r3, .L10
  94 0004 DB68     		ldr	r3, [r3, #12]
  95 0006 C3F30223 		ubfx	r3, r3, #8, #3
  96              	.LVL9:
  97              	.LBE43:
  98              	.LBE42:
  99              	.LBB44:
 100              	.LBB45:
1444:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1445:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1446:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1447:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1448:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Enable External Interrupt
1449:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Enables a device-specific interrupt in the NVIC interrupt controller.
1450:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1451:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1452:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_EnableIRQ(IRQn_Type IRQn)
1453:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1454:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   NVIC->ISER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1455:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1456:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1457:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1458:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1459:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Disable External Interrupt
1460:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Disables a device-specific interrupt in the NVIC interrupt controller.
1461:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1462:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 32


1463:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DisableIRQ(IRQn_Type IRQn)
1464:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1465:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   NVIC->ICER[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1466:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1467:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1468:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1469:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1470:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Get Pending Interrupt
1471:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Reads the pending register in the NVIC and returns the pending bit for the specified int
1472:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1473:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not pending.
1474:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is pending.
1475:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1476:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPendingIRQ(IRQn_Type IRQn)
1477:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1478:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1479:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1480:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1481:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1482:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1483:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Set Pending Interrupt
1484:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Sets the pending bit of an external interrupt.
1485:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number. Value cannot be negative.
1486:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1487:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPendingIRQ(IRQn_Type IRQn)
1488:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1489:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   NVIC->ISPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1490:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1491:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1492:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1493:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1494:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Clear Pending Interrupt
1495:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Clears the pending bit of an external interrupt.
1496:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  External interrupt number. Value cannot be negative.
1497:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1498:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_ClearPendingIRQ(IRQn_Type IRQn)
1499:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1500:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   NVIC->ICPR[(((uint32_t)(int32_t)IRQn) >> 5UL)] = (uint32_t)(1UL << (((uint32_t)(int32_t)IRQn) & 0
1501:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1502:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1503:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1504:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1505:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Get Active Interrupt
1506:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Reads the active register in NVIC and returns the active bit.
1507:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1508:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return             0  Interrupt status is not active.
1509:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return             1  Interrupt status is active.
1510:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1511:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetActive(IRQn_Type IRQn)
1512:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1513:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   return((uint32_t)(((NVIC->IABR[(((uint32_t)(int32_t)IRQn) >> 5UL)] & (1UL << (((uint32_t)(int32_t
1514:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1515:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1516:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1517:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1518:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Set Interrupt Priority
1519:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Sets the priority of an interrupt.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 33


1520:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \note    The priority cannot be set for every core interrupt.
1521:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]      IRQn  Interrupt number.
1522:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]  priority  Priority to set.
1523:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1524:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SetPriority(IRQn_Type IRQn, uint32_t priority)
1525:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1526:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1527:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1528:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1529:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1530:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   else
1531:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1532:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     NVIC->IP[((uint32_t)(int32_t)IRQn)]               = (uint8_t)((priority << (8U - __NVIC_PRIO_BI
1533:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1534:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1535:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1536:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1537:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1538:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Get Interrupt Priority
1539:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Reads the priority of an interrupt.
1540:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            The interrupt number can be positive to specify an external (device specific) interrupt,
1541:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            or negative to specify an internal (core) interrupt.
1542:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]   IRQn  Interrupt number.
1543:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return             Interrupt Priority.
1544:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                       Value is aligned automatically to the implemented priority bits of the microc
1545:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1546:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_GetPriority(IRQn_Type IRQn)
1547:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1548:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1549:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   if ((int32_t)(IRQn) < 0)
1550:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1551:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     return(((uint32_t)SCB->SHP[(((uint32_t)(int32_t)IRQn) & 0xFUL)-4UL] >> (8U - __NVIC_PRIO_BITS))
1552:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1553:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   else
1554:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1555:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     return(((uint32_t)NVIC->IP[((uint32_t)(int32_t)IRQn)]               >> (8U - __NVIC_PRIO_BITS))
1556:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1557:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1558:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1559:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1560:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1561:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Encode Priority
1562:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Encodes the priority for an interrupt with the given priority group,
1563:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            preemptive priority value, and subpriority value.
1564:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1565:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS), the smallest possible priority group is set.
1566:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1567:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]   PreemptPriority  Preemptive priority value (starting from 0).
1568:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]       SubPriority  Subpriority value (starting from 0).
1569:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return                        Encoded priority. Value can be used in the function \ref NVIC_SetP
1570:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1571:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t NVIC_EncodePriority (uint32_t PriorityGroup, uint32_t PreemptPriority, uin
1572:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1573:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1574:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1575:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1576:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 34


1577:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
 101              		.loc 2 1577 0
 102 000a C3F10704 		rsb	r4, r3, #7
 103 000e 042C     		cmp	r4, #4
 104 0010 28BF     		it	cs
 105 0012 0424     		movcs	r4, #4
 106              	.LVL10:
1578:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 107              		.loc 2 1578 0
 108 0014 1D1D     		adds	r5, r3, #4
 109 0016 062D     		cmp	r5, #6
 110 0018 01D9     		bls	.L8
 111 001a DD1E     		subs	r5, r3, #3
 112 001c 00E0     		b	.L5
 113              	.L8:
 114 001e 0025     		movs	r5, #0
 115              	.L5:
 116              	.LVL11:
1579:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1580:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   return (
1581:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 117              		.loc 2 1581 0
 118 0020 0123     		movs	r3, #1
 119              	.LVL12:
 120 0022 03FA04F4 		lsl	r4, r3, r4
 121              	.LVL13:
 122 0026 013C     		subs	r4, r4, #1
 123 0028 2140     		ands	r1, r1, r4
 124              	.LVL14:
 125 002a A940     		lsls	r1, r1, r5
1582:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            ((SubPriority     & (uint32_t)((1UL << (SubPriorityBits    )) - 1UL)))
 126              		.loc 2 1582 0
 127 002c AB40     		lsls	r3, r3, r5
 128 002e 013B     		subs	r3, r3, #1
 129 0030 1A40     		ands	r2, r2, r3
 130              	.LVL15:
1580:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            ((PreemptPriority & (uint32_t)((1UL << (PreemptPriorityBits)) - 1UL)) << SubPriorityBits
 131              		.loc 2 1580 0
 132 0032 0A43     		orrs	r2, r2, r1
 133              	.LVL16:
 134              	.LBE45:
 135              	.LBE44:
 136              	.LBB46:
 137              	.LBB47:
1526:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 138              		.loc 2 1526 0
 139 0034 0028     		cmp	r0, #0
 140 0036 06DA     		bge	.L6
1528:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 141              		.loc 2 1528 0
 142 0038 00F00F00 		and	r0, r0, #15
 143              	.LVL17:
 144 003c 1201     		lsls	r2, r2, #4
 145 003e D2B2     		uxtb	r2, r2
 146 0040 074B     		ldr	r3, .L10+4
 147 0042 1A54     		strb	r2, [r3, r0]
 148 0044 07E0     		b	.L4
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 35


 149              	.LVL18:
 150              	.L6:
1532:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 151              		.loc 2 1532 0
 152 0046 1201     		lsls	r2, r2, #4
 153 0048 D2B2     		uxtb	r2, r2
 154 004a 00F16040 		add	r0, r0, #-536870912
 155              	.LVL19:
 156 004e 00F56140 		add	r0, r0, #57600
 157 0052 80F80023 		strb	r2, [r0, #768]
 158              	.LVL20:
 159              	.L4:
 160              	.LBE47:
 161              	.LBE46:
 207:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   uint32_t prioritygroup = 0x00;
 208:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 209:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 210:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_SUB_PRIORITY(SubPriority));
 211:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PREEMPTION_PRIORITY(PreemptPriority));
 212:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 213:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   prioritygroup = NVIC_GetPriorityGrouping();
 214:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   
 215:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPriority(IRQn, NVIC_EncodePriority(prioritygroup, PreemptPriority, SubPriority));
 216:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 162              		.loc 1 216 0
 163 0056 30BC     		pop	{r4, r5}
 164              	.LCFI1:
 165              		.cfi_restore 5
 166              		.cfi_restore 4
 167              		.cfi_def_cfa_offset 0
 168 0058 7047     		bx	lr
 169              	.L11:
 170 005a 00BF     		.align	2
 171              	.L10:
 172 005c 00ED00E0 		.word	-536810240
 173 0060 14ED00E0 		.word	-536810220
 174              		.cfi_endproc
 175              	.LFE65:
 177              		.section	.text.HAL_NVIC_EnableIRQ,"ax",%progbits
 178              		.align	2
 179              		.global	HAL_NVIC_EnableIRQ
 180              		.thumb
 181              		.thumb_func
 183              	HAL_NVIC_EnableIRQ:
 184              	.LFB66:
 217:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 218:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 219:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Enables a device specific interrupt in the NVIC interrupt controller.
 220:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @note   To configure interrupts priority correctly, the NVIC_PriorityGroupConfig()
 221:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         function should be called before. 
 222:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 223:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 224:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 225:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 226:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 227:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_EnableIRQ(IRQn_Type IRQn)
 228:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 36


 185              		.loc 1 228 0
 186              		.cfi_startproc
 187              		@ args = 0, pretend = 0, frame = 0
 188              		@ frame_needed = 0, uses_anonymous_args = 0
 189              		@ link register save eliminated.
 190              	.LVL21:
 191              	.LBB48:
 192              	.LBB49:
1454:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 193              		.loc 2 1454 0
 194 0000 4209     		lsrs	r2, r0, #5
 195 0002 00F01F00 		and	r0, r0, #31
 196              	.LVL22:
 197 0006 0123     		movs	r3, #1
 198 0008 03FA00F0 		lsl	r0, r3, r0
 199 000c 014B     		ldr	r3, .L13
 200 000e 43F82200 		str	r0, [r3, r2, lsl #2]
 201              	.LVL23:
 202 0012 7047     		bx	lr
 203              	.L14:
 204              		.align	2
 205              	.L13:
 206 0014 00E100E0 		.word	-536813312
 207              	.LBE49:
 208              	.LBE48:
 209              		.cfi_endproc
 210              	.LFE66:
 212              		.section	.text.HAL_NVIC_DisableIRQ,"ax",%progbits
 213              		.align	2
 214              		.global	HAL_NVIC_DisableIRQ
 215              		.thumb
 216              		.thumb_func
 218              	HAL_NVIC_DisableIRQ:
 219              	.LFB67:
 229:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 231:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 232:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Enable interrupt */
 233:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_EnableIRQ(IRQn);
 234:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 235:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 236:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 237:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Disables a device specific interrupt in the NVIC interrupt controller.
 238:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 239:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 240:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 241:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 242:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 243:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_DisableIRQ(IRQn_Type IRQn)
 244:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 220              		.loc 1 244 0
 221              		.cfi_startproc
 222              		@ args = 0, pretend = 0, frame = 0
 223              		@ frame_needed = 0, uses_anonymous_args = 0
 224              		@ link register save eliminated.
 225              	.LVL24:
 226              	.LBB50:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 37


 227              	.LBB51:
1465:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 228              		.loc 2 1465 0
 229 0000 4309     		lsrs	r3, r0, #5
 230 0002 00F01F00 		and	r0, r0, #31
 231              	.LVL25:
 232 0006 0122     		movs	r2, #1
 233 0008 02FA00F0 		lsl	r0, r2, r0
 234 000c 2033     		adds	r3, r3, #32
 235 000e 024A     		ldr	r2, .L16
 236 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 237              	.LVL26:
 238 0014 7047     		bx	lr
 239              	.L17:
 240 0016 00BF     		.align	2
 241              	.L16:
 242 0018 00E100E0 		.word	-536813312
 243              	.LBE51:
 244              	.LBE50:
 245              		.cfi_endproc
 246              	.LFE67:
 248              		.section	.text.HAL_NVIC_SystemReset,"ax",%progbits
 249              		.align	2
 250              		.global	HAL_NVIC_SystemReset
 251              		.thumb
 252              		.thumb_func
 254              	HAL_NVIC_SystemReset:
 255              	.LFB68:
 245:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 246:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_DEVICE_IRQ(IRQn));
 247:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 248:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 249:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Disable interrupt */
 250:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_DisableIRQ(IRQn);
 251:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 252:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 253:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 254:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initiates a system reset request to reset the MCU.
 255:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 256:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 257:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SystemReset(void)
 258:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 256              		.loc 1 258 0
 257              		.cfi_startproc
 258              		@ Volatile: function does not return.
 259              		@ args = 0, pretend = 0, frame = 0
 260              		@ frame_needed = 0, uses_anonymous_args = 0
 261              		@ link register save eliminated.
 262              	.LBB60:
 263              	.LBB61:
 264              	.LBB62:
 265              	.LBB63:
 266              		.file 3 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 38


   5:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
   9:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    *
  21:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  35:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  38:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
  45:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  46:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  47:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
  51:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  52:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  53:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  54:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  58:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  60:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 39


  62:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  63:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  64:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  65:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  69:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  71:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  73:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  74:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  75:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  76:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  80:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  82:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  84:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 115:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 40


 119:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 121:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 123:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 126:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 127:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 128:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 129:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 132:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 134:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 136:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 138:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 141:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 142:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 143:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 144:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 148:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 150:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 152:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 155:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 156:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 157:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 158:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 162:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 164:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 41


 176:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 186:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 188:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 190:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 192:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 193:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 194:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 195:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 199:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 201:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 203:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 206:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 207:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 208:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 209:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 213:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 215:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 217:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 218:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 219:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 221:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 222:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 226:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 228:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 230:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 231:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 232:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 42


 233:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 237:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 239:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 241:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 242:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 243:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 244:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 248:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 250:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 252:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 255:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 256:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 257:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 258:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 262:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 264:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 266:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 267:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 268:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 269:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 274:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 276:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 278:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 289:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 43


 290:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 292:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 293:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 294:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 295:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 299:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 301:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 303:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 306:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 307:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 309:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 310:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 314:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 316:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 319:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 325:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 327:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 328:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 329:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 330:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 331:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 335:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 337:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 343:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 344:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 44


 347:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 348:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 349:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 351:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 352:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
 356:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** */
 357:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 365:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 368:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 369:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 370:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 373:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 375:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 377:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 378:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 379:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 380:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 383:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 385:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 387:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 388:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 389:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 390:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 394:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 396:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 398:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 399:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 400:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 401:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 45


 404:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 406:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 408:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 409:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 410:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 411:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 416:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 418:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 420:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 421:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 422:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 423:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 427:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 429:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 267              		.loc 3 429 0
 268              		.syntax unified
 269              	@ 429 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 270 0000 BFF34F8F 		dsb 0xF
 271              	@ 0 "" 2
 272              		.thumb
 273              		.syntax unified
 274              	.LBE63:
 275              	.LBE62:
1583:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****          );
1584:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1585:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1586:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1587:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1588:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   Decode Priority
1589:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Decodes an interrupt priority value with a given priority group to
1590:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            preemptive priority value and subpriority value.
1591:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            In case of a conflict between priority grouping and available
1592:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            priority bits (__NVIC_PRIO_BITS) the smallest possible priority group is set.
1593:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]         Priority   Priority value, which can be retrieved with the function \ref NVIC
1594:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]     PriorityGroup  Used priority group.
1595:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [out] pPreemptPriority  Preemptive priority value (starting from 0).
1596:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [out]     pSubPriority  Subpriority value (starting from 0).
1597:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1598:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_DecodePriority (uint32_t Priority, uint32_t PriorityGroup, uint32_t* cons
1599:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1600:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PriorityGroupTmp = (PriorityGroup & (uint32_t)0x07UL);   /* only values 0..7 are used   
1601:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
1602:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t SubPriorityBits;
1603:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1604:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   PreemptPriorityBits = ((7UL - PriorityGroupTmp) > (uint32_t)(__NVIC_PRIO_BITS)) ? (uint32_t)(__NV
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 46


1605:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
1606:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1607:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   *pPreemptPriority = (Priority >> SubPriorityBits) & (uint32_t)((1UL << (PreemptPriorityBits)) - 1
1608:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
1609:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1610:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1611:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1612:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1613:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   System Reset
1614:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Initiates a system reset request to reset the MCU.
1615:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1616:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE void NVIC_SystemReset(void)
1617:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1618:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure all outstanding memor
1619:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                                                                        buffered write are completed
1620:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SCB->AIRCR  = (uint32_t)((0x5FAUL << SCB_AIRCR_VECTKEY_Pos)    |
1621:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 276              		.loc 2 1621 0
 277 0004 0549     		ldr	r1, .L20
 278 0006 CA68     		ldr	r2, [r1, #12]
 279 0008 02F4E062 		and	r2, r2, #1792
1620:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                            (SCB->AIRCR & SCB_AIRCR_PRIGROUP_Msk) |
 280              		.loc 2 1620 0
 281 000c 044B     		ldr	r3, .L20+4
 282 000e 1343     		orrs	r3, r3, r2
 283 0010 CB60     		str	r3, [r1, #12]
 284              	.LBB64:
 285              	.LBB65:
 286              		.loc 3 429 0
 287              		.syntax unified
 288              	@ 429 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 289 0012 BFF34F8F 		dsb 0xF
 290              	@ 0 "" 2
 291              		.thumb
 292              		.syntax unified
 293              	.L19:
 294              	.LBE65:
 295              	.LBE64:
 296              	.LBB66:
 297              	.LBB67:
 375:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 298              		.loc 3 375 0
 299              		.syntax unified
 300              	@ 375 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 301 0016 00BF     		nop
 302              	@ 0 "" 2
 303              		.thumb
 304              		.syntax unified
 305 0018 FDE7     		b	.L19
 306              	.L21:
 307 001a 00BF     		.align	2
 308              	.L20:
 309 001c 00ED00E0 		.word	-536810240
 310 0020 0400FA05 		.word	100270084
 311              	.LBE67:
 312              	.LBE66:
 313              	.LBE61:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 47


 314              	.LBE60:
 315              		.cfi_endproc
 316              	.LFE68:
 318              		.section	.text.HAL_SYSTICK_Config,"ax",%progbits
 319              		.align	2
 320              		.global	HAL_SYSTICK_Config
 321              		.thumb
 322              		.thumb_func
 324              	HAL_SYSTICK_Config:
 325              	.LFB69:
 259:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* System Reset */
 260:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SystemReset();
 261:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 262:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 263:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 264:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initializes the System Timer and its interrupt, and starts the System Tick Timer.
 265:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         Counter is in free running mode to generate periodic interrupts.
 266:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  TicksNumb: Specifies the ticks Number of ticks between two interrupts.
 267:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status:  - 0  Function succeeded.
 268:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                  - 1  Function failed.
 269:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 270:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_SYSTICK_Config(uint32_t TicksNumb)
 271:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 326              		.loc 1 271 0
 327              		.cfi_startproc
 328              		@ args = 0, pretend = 0, frame = 0
 329              		@ frame_needed = 0, uses_anonymous_args = 0
 330              		@ link register save eliminated.
 331              	.LVL27:
 332              	.LBB68:
 333              	.LBB69:
1622:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****                             SCB_AIRCR_SYSRESETREQ_Msk    );         /* Keep priority group unchange
1623:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   __DSB();                                                          /* Ensure completion of memory 
1624:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1625:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   for(;;)                                                           /* wait until reset */
1626:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1627:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     __NOP();
1628:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1629:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
1630:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1631:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /*@} end of CMSIS_Core_NVICFunctions */
1632:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1633:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1634:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1635:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /* ##################################    SysTick function  ########################################
1636:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1637:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \ingroup  CMSIS_Core_FunctionInterface
1638:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \defgroup CMSIS_Core_SysTickFunctions SysTick Functions
1639:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief    Functions that configure the System.
1640:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   @{
1641:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1642:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1643:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** #if (__Vendor_SysTickConfig == 0U)
1644:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1645:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** /**
1646:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \brief   System Tick Configuration
1647:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \details Initializes the System Timer and its interrupt, and starts the System Tick Timer.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 48


1648:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            Counter is in free running mode to generate periodic interrupts.
1649:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \param [in]  ticks  Number of ticks between two interrupts.
1650:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return          0  Function succeeded.
1651:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \return          1  Function failed.
1652:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   \note    When the variable <b>__Vendor_SysTickConfig</b> is set to 1, then the
1653:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            function <b>SysTick_Config</b> is not included. In this case, the file <b><i>device</i>.
1654:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****            must contain a vendor-specific implementation of this function.
1655:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****  */
1656:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** __STATIC_INLINE uint32_t SysTick_Config(uint32_t ticks)
1657:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** {
1658:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   if ((ticks - 1UL) > SysTick_LOAD_RELOAD_Msk)
 334              		.loc 2 1658 0
 335 0000 0138     		subs	r0, r0, #1
 336              	.LVL28:
 337 0002 B0F1807F 		cmp	r0, #16777216
 338 0006 0AD2     		bcs	.L24
1659:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
1660:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****     return (1UL);                                                   /* Reload value impossible */
1661:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
1662:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
1663:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SysTick->LOAD  = (uint32_t)(ticks - 1UL);                         /* set reload register */
 339              		.loc 2 1663 0
 340 0008 064B     		ldr	r3, .L25
 341 000a 5860     		str	r0, [r3, #4]
 342              	.LVL29:
 343              	.LBB70:
 344              	.LBB71:
1528:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 345              		.loc 2 1528 0
 346 000c F021     		movs	r1, #240
 347 000e 064A     		ldr	r2, .L25+4
 348 0010 82F82310 		strb	r1, [r2, #35]
 349              	.LVL30:
 350              	.LBE71:
 351              	.LBE70:
1664:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   NVIC_SetPriority (SysTick_IRQn, (1UL << __NVIC_PRIO_BITS) - 1UL); /* set Priority for Systick Int
1665:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SysTick->VAL   = 0UL;                                             /* Load the SysTick Counter Val
 352              		.loc 2 1665 0
 353 0014 0020     		movs	r0, #0
 354              	.LVL31:
 355 0016 9860     		str	r0, [r3, #8]
1666:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SysTick->CTRL  = SysTick_CTRL_CLKSOURCE_Msk |
 356              		.loc 2 1666 0
 357 0018 0722     		movs	r2, #7
 358 001a 1A60     		str	r2, [r3]
 359 001c 7047     		bx	lr
 360              	.L24:
1660:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 361              		.loc 2 1660 0
 362 001e 0120     		movs	r0, #1
 363              	.LVL32:
 364              	.LBE69:
 365              	.LBE68:
 272:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****    return SysTick_Config(TicksNumb);
 273:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 366              		.loc 1 273 0
 367 0020 7047     		bx	lr
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 49


 368              	.L26:
 369 0022 00BF     		.align	2
 370              	.L25:
 371 0024 10E000E0 		.word	-536813552
 372 0028 00ED00E0 		.word	-536810240
 373              		.cfi_endproc
 374              	.LFE69:
 376              		.section	.text.HAL_NVIC_GetPriorityGrouping,"ax",%progbits
 377              		.align	2
 378              		.global	HAL_NVIC_GetPriorityGrouping
 379              		.thumb
 380              		.thumb_func
 382              	HAL_NVIC_GetPriorityGrouping:
 383              	.LFB70:
 274:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 275:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @}
 276:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 277:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 278:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /** @defgroup CORTEX_Exported_Functions_Group2 Peripheral Control functions
 279:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  *  @brief    Cortex control functions 
 280:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  *
 281:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @verbatim   
 282:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 283:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                       ##### Peripheral Control functions #####
 284:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   ==============================================================================
 285:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     [..]
 286:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       This subsection provides a set of functions allowing to control the CORTEX
 287:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       (NVIC, SYSTICK, MPU) functionalities. 
 288:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  
 289:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****       
 290:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** @endverbatim
 291:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @{
 292:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 293:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 294:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #if (__MPU_PRESENT == 1)
 295:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Initializes and configures the Region and the memory to be protected.
 297:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  MPU_Init: Pointer to a MPU_Region_InitTypeDef structure that contains
 298:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                the initialization and configuration information.
 299:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 300:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 301:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_MPU_ConfigRegion(MPU_Region_InitTypeDef *MPU_Init)
 302:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 303:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 304:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_NUMBER(MPU_Init->Number));
 305:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_MPU_REGION_ENABLE(MPU_Init->Enable));
 306:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 307:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set the Region number */
 308:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   MPU->RNR = MPU_Init->Number;
 309:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 310:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   if ((MPU_Init->Enable) != RESET)
 311:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 312:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     /* Check the parameters */
 313:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_INSTRUCTION_ACCESS(MPU_Init->DisableExec));
 314:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_PERMISSION_ATTRIBUTE(MPU_Init->AccessPermission));
 315:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_TEX_LEVEL(MPU_Init->TypeExtField));
 316:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_SHAREABLE(MPU_Init->IsShareable));
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 50


 317:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_CACHEABLE(MPU_Init->IsCacheable));
 318:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_ACCESS_BUFFERABLE(MPU_Init->IsBufferable));
 319:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_SUB_REGION_DISABLE(MPU_Init->SubRegionDisable));
 320:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     assert_param(IS_MPU_REGION_SIZE(MPU_Init->Size));
 321:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     
 322:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RBAR = MPU_Init->BaseAddress;
 323:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RASR = ((uint32_t)MPU_Init->DisableExec             << MPU_RASR_XN_Pos)   |
 324:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->AccessPermission        << MPU_RASR_AP_Pos)   |
 325:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->TypeExtField            << MPU_RASR_TEX_Pos)  |
 326:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsShareable             << MPU_RASR_S_Pos)    |
 327:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsCacheable             << MPU_RASR_C_Pos)    |
 328:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->IsBufferable            << MPU_RASR_B_Pos)    |
 329:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->SubRegionDisable        << MPU_RASR_SRD_Pos)  |
 330:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Size                    << MPU_RASR_SIZE_Pos) |
 331:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****                 ((uint32_t)MPU_Init->Enable                  << MPU_RASR_ENABLE_Pos);
 332:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 333:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   else
 334:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 335:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RBAR = 0x00;
 336:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     MPU->RASR = 0x00;
 337:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 338:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 339:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** #endif /* __MPU_PRESENT */
 340:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 342:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Gets the priority grouping field from the NVIC Interrupt Controller.
 343:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval Priority grouping field (SCB->AIRCR [10:8] PRIGROUP field)
 344:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 345:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPriorityGrouping(void)
 346:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 384              		.loc 1 346 0
 385              		.cfi_startproc
 386              		@ args = 0, pretend = 0, frame = 0
 387              		@ frame_needed = 0, uses_anonymous_args = 0
 388              		@ link register save eliminated.
 389              	.LBB72:
 390              	.LBB73:
1443:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 391              		.loc 2 1443 0
 392 0000 024B     		ldr	r3, .L28
 393 0002 D868     		ldr	r0, [r3, #12]
 394              	.LBE73:
 395              	.LBE72:
 347:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Get the PRIGROUP[10:8] field value */
 348:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetPriorityGrouping();
 349:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 396              		.loc 1 349 0
 397 0004 C0F30220 		ubfx	r0, r0, #8, #3
 398 0008 7047     		bx	lr
 399              	.L29:
 400 000a 00BF     		.align	2
 401              	.L28:
 402 000c 00ED00E0 		.word	-536810240
 403              		.cfi_endproc
 404              	.LFE70:
 406              		.section	.text.HAL_NVIC_GetPriority,"ax",%progbits
 407              		.align	2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 51


 408              		.global	HAL_NVIC_GetPriority
 409              		.thumb
 410              		.thumb_func
 412              	HAL_NVIC_GetPriority:
 413              	.LFB71:
 350:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 351:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 352:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Gets the priority of an interrupt.
 353:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn: External interrupt number
 354:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 355:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 356:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param   PriorityGroup: the priority grouping bits length.
 357:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 358:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_0: 0 bits for pre-emption priority
 359:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      4 bits for subpriority
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_1: 1 bits for pre-emption priority
 361:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      3 bits for subpriority
 362:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_2: 2 bits for pre-emption priority
 363:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      2 bits for subpriority
 364:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_3: 3 bits for pre-emption priority
 365:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      1 bits for subpriority
 366:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *           @arg NVIC_PRIORITYGROUP_4: 4 bits for pre-emption priority
 367:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                                      0 bits for subpriority
 368:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  pPreemptPriority: Pointer on the Preemptive priority value (starting from 0).
 369:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  pSubPriority: Pointer on the Subpriority value (starting from 0).
 370:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 371:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 372:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_GetPriority(IRQn_Type IRQn, uint32_t PriorityGroup, uint32_t* pPreemptPriority, uint3
 373:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 414              		.loc 1 373 0
 415              		.cfi_startproc
 416              		@ args = 0, pretend = 0, frame = 0
 417              		@ frame_needed = 0, uses_anonymous_args = 0
 418              		@ link register save eliminated.
 419              	.LVL33:
 420 0000 70B4     		push	{r4, r5, r6}
 421              	.LCFI2:
 422              		.cfi_def_cfa_offset 12
 423              		.cfi_offset 4, -12
 424              		.cfi_offset 5, -8
 425              		.cfi_offset 6, -4
 426              	.LVL34:
 427              	.LBB74:
 428              	.LBB75:
1549:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   {
 429              		.loc 2 1549 0
 430 0002 0028     		cmp	r0, #0
 431              	.LVL35:
 432 0004 05DA     		bge	.L31
1551:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 433              		.loc 2 1551 0
 434 0006 00F00F00 		and	r0, r0, #15
 435 000a 134C     		ldr	r4, .L36
 436 000c 245C     		ldrb	r4, [r4, r0]	@ zero_extendqisi2
 437 000e 2409     		lsrs	r4, r4, #4
 438 0010 06E0     		b	.L32
 439              	.L31:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 52


1555:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   }
 440              		.loc 2 1555 0
 441 0012 00F16040 		add	r0, r0, #-536870912
 442 0016 00F56140 		add	r0, r0, #57600
 443 001a 90F80043 		ldrb	r4, [r0, #768]	@ zero_extendqisi2
 444 001e 2409     		lsrs	r4, r4, #4
 445              	.L32:
 446              	.LVL36:
 447              	.LBE75:
 448              	.LBE74:
 449              	.LBB76:
 450              	.LBB77:
1600:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   uint32_t PreemptPriorityBits;
 451              		.loc 2 1600 0
 452 0020 01F00701 		and	r1, r1, #7
 453              	.LVL37:
1604:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   SubPriorityBits     = ((PriorityGroupTmp + (uint32_t)(__NVIC_PRIO_BITS)) < (uint32_t)7UL) ? (uint
 454              		.loc 2 1604 0
 455 0024 C1F10700 		rsb	r0, r1, #7
 456 0028 0428     		cmp	r0, #4
 457 002a 28BF     		it	cs
 458 002c 0420     		movcs	r0, #4
 459              	.LVL38:
1605:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** 
 460              		.loc 2 1605 0
 461 002e 0D1D     		adds	r5, r1, #4
 462 0030 062D     		cmp	r5, #6
 463 0032 01D9     		bls	.L34
 464 0034 0339     		subs	r1, r1, #3
 465              	.LVL39:
 466 0036 00E0     		b	.L33
 467              	.LVL40:
 468              	.L34:
 469 0038 0021     		movs	r1, #0
 470              	.LVL41:
 471              	.L33:
1607:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h ****   *pSubPriority     = (Priority                   ) & (uint32_t)((1UL << (SubPriorityBits    )) - 1
 472              		.loc 2 1607 0
 473 003a 24FA01F6 		lsr	r6, r4, r1
 474 003e 0125     		movs	r5, #1
 475              	.LVL42:
 476 0040 05FA00F0 		lsl	r0, r5, r0
 477              	.LVL43:
 478 0044 0138     		subs	r0, r0, #1
 479 0046 3040     		ands	r0, r0, r6
 480 0048 1060     		str	r0, [r2]
1608:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 481              		.loc 2 1608 0
 482 004a 05FA01F1 		lsl	r1, r5, r1
 483              	.LVL44:
 484 004e 0139     		subs	r1, r1, #1
 485 0050 2140     		ands	r1, r1, r4
 486 0052 1960     		str	r1, [r3]
 487              	.LVL45:
 488              	.LBE77:
 489              	.LBE76:
 374:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 53


 375:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_NVIC_PRIORITY_GROUP(PriorityGroup));
 376:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****  /* Get priority for Cortex-M system or device specific interrupts */
 377:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_DecodePriority(NVIC_GetPriority(IRQn), PriorityGroup, pPreemptPriority, pSubPriority);
 378:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 490              		.loc 1 378 0
 491 0054 70BC     		pop	{r4, r5, r6}
 492              	.LCFI3:
 493              		.cfi_restore 6
 494              		.cfi_restore 5
 495              		.cfi_restore 4
 496              		.cfi_def_cfa_offset 0
 497 0056 7047     		bx	lr
 498              	.L37:
 499              		.align	2
 500              	.L36:
 501 0058 14ED00E0 		.word	-536810220
 502              		.cfi_endproc
 503              	.LFE71:
 505              		.section	.text.HAL_NVIC_SetPendingIRQ,"ax",%progbits
 506              		.align	2
 507              		.global	HAL_NVIC_SetPendingIRQ
 508              		.thumb
 509              		.thumb_func
 511              	HAL_NVIC_SetPendingIRQ:
 512              	.LFB72:
 379:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 380:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 381:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Sets Pending bit of an external interrupt.
 382:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  IRQn External interrupt number
 383:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 384:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 385:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 386:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 387:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_SetPendingIRQ(IRQn_Type IRQn)
 388:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** { 
 513              		.loc 1 388 0
 514              		.cfi_startproc
 515              		@ args = 0, pretend = 0, frame = 0
 516              		@ frame_needed = 0, uses_anonymous_args = 0
 517              		@ link register save eliminated.
 518              	.LVL46:
 519              	.LBB78:
 520              	.LBB79:
1489:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 521              		.loc 2 1489 0
 522 0000 4309     		lsrs	r3, r0, #5
 523 0002 00F01F00 		and	r0, r0, #31
 524              	.LVL47:
 525 0006 0122     		movs	r2, #1
 526 0008 02FA00F0 		lsl	r0, r2, r0
 527 000c 4033     		adds	r3, r3, #64
 528 000e 024A     		ldr	r2, .L39
 529 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 530              	.LVL48:
 531 0014 7047     		bx	lr
 532              	.L40:
 533 0016 00BF     		.align	2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 54


 534              	.L39:
 535 0018 00E100E0 		.word	-536813312
 536              	.LBE79:
 537              	.LBE78:
 538              		.cfi_endproc
 539              	.LFE72:
 541              		.section	.text.HAL_NVIC_GetPendingIRQ,"ax",%progbits
 542              		.align	2
 543              		.global	HAL_NVIC_GetPendingIRQ
 544              		.thumb
 545              		.thumb_func
 547              	HAL_NVIC_GetPendingIRQ:
 548              	.LFB73:
 389:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Set interrupt pending */
 390:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_SetPendingIRQ(IRQn);
 391:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 392:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 393:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 394:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief Gets Pending Interrupt (reads the pending register in the NVIC 
 395:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         and returns the pending bit for the specified interrupt).
 396:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param IRQn External interrupt number
 397:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 398:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 399:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 400:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 401:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 402:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetPendingIRQ(IRQn_Type IRQn)
 403:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** { 
 549              		.loc 1 403 0
 550              		.cfi_startproc
 551              		@ args = 0, pretend = 0, frame = 0
 552              		@ frame_needed = 0, uses_anonymous_args = 0
 553              		@ link register save eliminated.
 554              	.LVL49:
 555              	.LBB80:
 556              	.LBB81:
1478:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 557              		.loc 2 1478 0
 558 0000 4309     		lsrs	r3, r0, #5
 559 0002 4033     		adds	r3, r3, #64
 560 0004 044A     		ldr	r2, .L42
 561 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 562 000a 00F01F00 		and	r0, r0, #31
 563              	.LVL50:
 564 000e 23FA00F0 		lsr	r0, r3, r0
 565              	.LVL51:
 566              	.LBE81:
 567              	.LBE80:
 404:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Return 1 if pending else 0 */
 405:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetPendingIRQ(IRQn);
 406:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 568              		.loc 1 406 0
 569 0012 00F00100 		and	r0, r0, #1
 570 0016 7047     		bx	lr
 571              	.L43:
 572              		.align	2
 573              	.L42:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 55


 574 0018 00E100E0 		.word	-536813312
 575              		.cfi_endproc
 576              	.LFE73:
 578              		.section	.text.HAL_NVIC_ClearPendingIRQ,"ax",%progbits
 579              		.align	2
 580              		.global	HAL_NVIC_ClearPendingIRQ
 581              		.thumb
 582              		.thumb_func
 584              	HAL_NVIC_ClearPendingIRQ:
 585              	.LFB74:
 407:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 408:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 409:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief Clears the pending bit of an external interrupt.
 410:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param IRQn External interrupt number
 411:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 412:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 413:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 414:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 415:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_NVIC_ClearPendingIRQ(IRQn_Type IRQn)
 416:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** { 
 586              		.loc 1 416 0
 587              		.cfi_startproc
 588              		@ args = 0, pretend = 0, frame = 0
 589              		@ frame_needed = 0, uses_anonymous_args = 0
 590              		@ link register save eliminated.
 591              	.LVL52:
 592              	.LBB82:
 593              	.LBB83:
1500:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 594              		.loc 2 1500 0
 595 0000 4309     		lsrs	r3, r0, #5
 596 0002 00F01F00 		and	r0, r0, #31
 597              	.LVL53:
 598 0006 0122     		movs	r2, #1
 599 0008 02FA00F0 		lsl	r0, r2, r0
 600 000c 6033     		adds	r3, r3, #96
 601 000e 024A     		ldr	r2, .L45
 602 0010 42F82300 		str	r0, [r2, r3, lsl #2]
 603              	.LVL54:
 604 0014 7047     		bx	lr
 605              	.L46:
 606 0016 00BF     		.align	2
 607              	.L45:
 608 0018 00E100E0 		.word	-536813312
 609              	.LBE83:
 610              	.LBE82:
 611              		.cfi_endproc
 612              	.LFE74:
 614              		.section	.text.HAL_NVIC_GetActive,"ax",%progbits
 615              		.align	2
 616              		.global	HAL_NVIC_GetActive
 617              		.thumb
 618              		.thumb_func
 620              	HAL_NVIC_GetActive:
 621              	.LFB75:
 417:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Clear pending interrupt */
 418:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   NVIC_ClearPendingIRQ(IRQn);
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 56


 419:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 420:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 421:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 422:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief Gets active interrupt ( reads the active register in NVIC and returns the active bit).
 423:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param IRQn External interrupt number
 424:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be an enumerator of IRQn_Type enumeration
 425:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         (For the complete STM32 Devices IRQ Channels list, please refer to the appropriate CMSI
 426:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval status: - 0  Interrupt status is not pending.
 427:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *                 - 1  Interrupt status is pending.
 428:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 429:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** uint32_t HAL_NVIC_GetActive(IRQn_Type IRQn)
 430:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** { 
 622              		.loc 1 430 0
 623              		.cfi_startproc
 624              		@ args = 0, pretend = 0, frame = 0
 625              		@ frame_needed = 0, uses_anonymous_args = 0
 626              		@ link register save eliminated.
 627              	.LVL55:
 628              	.LBB84:
 629              	.LBB85:
1513:./Drivers_V1.0.4/CMSIS/Include/core_cm3.h **** }
 630              		.loc 2 1513 0
 631 0000 4309     		lsrs	r3, r0, #5
 632 0002 8033     		adds	r3, r3, #128
 633 0004 044A     		ldr	r2, .L48
 634 0006 52F82330 		ldr	r3, [r2, r3, lsl #2]
 635 000a 00F01F00 		and	r0, r0, #31
 636              	.LVL56:
 637 000e 23FA00F0 		lsr	r0, r3, r0
 638              	.LVL57:
 639              	.LBE85:
 640              	.LBE84:
 431:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Return 1 if active else 0 */
 432:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   return NVIC_GetActive(IRQn);
 433:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 641              		.loc 1 433 0
 642 0012 00F00100 		and	r0, r0, #1
 643 0016 7047     		bx	lr
 644              	.L49:
 645              		.align	2
 646              	.L48:
 647 0018 00E100E0 		.word	-536813312
 648              		.cfi_endproc
 649              	.LFE75:
 651              		.section	.text.HAL_SYSTICK_CLKSourceConfig,"ax",%progbits
 652              		.align	2
 653              		.global	HAL_SYSTICK_CLKSourceConfig
 654              		.thumb
 655              		.thumb_func
 657              	HAL_SYSTICK_CLKSourceConfig:
 658              	.LFB76:
 434:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 435:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 436:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  Configures the SysTick clock source.
 437:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @param  CLKSource: specifies the SysTick clock source.
 438:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *         This parameter can be one of the following values:
 439:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK_DIV8: AHB clock divided by 8 selected as SysTick clock 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 57


 440:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   *             @arg SYSTICK_CLKSOURCE_HCLK: AHB clock selected as SysTick clock source.
 441:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 442:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 443:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_SYSTICK_CLKSourceConfig(uint32_t CLKSource)
 444:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 659              		.loc 1 444 0
 660              		.cfi_startproc
 661              		@ args = 0, pretend = 0, frame = 0
 662              		@ frame_needed = 0, uses_anonymous_args = 0
 663              		@ link register save eliminated.
 664              	.LVL58:
 445:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   /* Check the parameters */
 446:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   assert_param(IS_SYSTICK_CLK_SOURCE(CLKSource));
 447:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   if (CLKSource == SYSTICK_CLKSOURCE_HCLK)
 665              		.loc 1 447 0
 666 0000 0428     		cmp	r0, #4
 667 0002 05D1     		bne	.L51
 448:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 449:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     SysTick->CTRL |= SYSTICK_CLKSOURCE_HCLK;
 668              		.loc 1 449 0
 669 0004 054A     		ldr	r2, .L53
 670 0006 1368     		ldr	r3, [r2]
 671 0008 43F00403 		orr	r3, r3, #4
 672 000c 1360     		str	r3, [r2]
 673 000e 7047     		bx	lr
 674              	.L51:
 450:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 451:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   else
 452:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   {
 453:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****     SysTick->CTRL &= ~SYSTICK_CLKSOURCE_HCLK;
 675              		.loc 1 453 0
 676 0010 024A     		ldr	r2, .L53
 677 0012 1368     		ldr	r3, [r2]
 678 0014 23F00403 		bic	r3, r3, #4
 679 0018 1360     		str	r3, [r2]
 680 001a 7047     		bx	lr
 681              	.L54:
 682              		.align	2
 683              	.L53:
 684 001c 10E000E0 		.word	-536813552
 685              		.cfi_endproc
 686              	.LFE76:
 688              		.section	.text.HAL_SYSTICK_Callback,"ax",%progbits
 689              		.align	2
 690              		.weak	HAL_SYSTICK_Callback
 691              		.thumb
 692              		.thumb_func
 694              	HAL_SYSTICK_Callback:
 695              	.LFB78:
 454:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   }
 455:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 456:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 457:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 458:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  This function handles SYSTICK interrupt request.
 459:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 460:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 461:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** void HAL_SYSTICK_IRQHandler(void)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 58


 462:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 463:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 464:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 465:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** 
 466:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** /**
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @brief  SYSTICK callback.
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   * @retval None
 469:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   */
 470:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** __weak void HAL_SYSTICK_Callback(void)
 471:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** {
 696              		.loc 1 471 0
 697              		.cfi_startproc
 698              		@ args = 0, pretend = 0, frame = 0
 699              		@ frame_needed = 0, uses_anonymous_args = 0
 700              		@ link register save eliminated.
 701 0000 7047     		bx	lr
 702              		.cfi_endproc
 703              	.LFE78:
 705 0002 00BF     		.section	.text.HAL_SYSTICK_IRQHandler,"ax",%progbits
 706              		.align	2
 707              		.global	HAL_SYSTICK_IRQHandler
 708              		.thumb
 709              		.thumb_func
 711              	HAL_SYSTICK_IRQHandler:
 712              	.LFB77:
 462:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 713              		.loc 1 462 0
 714              		.cfi_startproc
 715              		@ args = 0, pretend = 0, frame = 0
 716              		@ frame_needed = 0, uses_anonymous_args = 0
 462:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c ****   HAL_SYSTICK_Callback();
 717              		.loc 1 462 0
 718 0000 08B5     		push	{r3, lr}
 719              	.LCFI4:
 720              		.cfi_def_cfa_offset 8
 721              		.cfi_offset 3, -8
 722              		.cfi_offset 14, -4
 463:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_cortex.c **** }
 723              		.loc 1 463 0
 724 0002 FFF7FEFF 		bl	HAL_SYSTICK_Callback
 725              	.LVL59:
 726 0006 08BD     		pop	{r3, pc}
 727              		.cfi_endproc
 728              	.LFE77:
 730              		.text
 731              	.Letext0:
 732              		.file 4 "./Drivers_V1.0.4/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 733              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 734              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s 			page 59


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_cortex.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:20     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:25     .text.HAL_NVIC_SetPriorityGrouping:0000000000000000 HAL_NVIC_SetPriorityGrouping
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:64     .text.HAL_NVIC_SetPriorityGrouping:0000000000000020 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:71     .text.HAL_NVIC_SetPriority:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:76     .text.HAL_NVIC_SetPriority:0000000000000000 HAL_NVIC_SetPriority
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:172    .text.HAL_NVIC_SetPriority:000000000000005c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:178    .text.HAL_NVIC_EnableIRQ:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:183    .text.HAL_NVIC_EnableIRQ:0000000000000000 HAL_NVIC_EnableIRQ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:206    .text.HAL_NVIC_EnableIRQ:0000000000000014 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:213    .text.HAL_NVIC_DisableIRQ:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:218    .text.HAL_NVIC_DisableIRQ:0000000000000000 HAL_NVIC_DisableIRQ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:242    .text.HAL_NVIC_DisableIRQ:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:249    .text.HAL_NVIC_SystemReset:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:254    .text.HAL_NVIC_SystemReset:0000000000000000 HAL_NVIC_SystemReset
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:309    .text.HAL_NVIC_SystemReset:000000000000001c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:319    .text.HAL_SYSTICK_Config:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:324    .text.HAL_SYSTICK_Config:0000000000000000 HAL_SYSTICK_Config
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:371    .text.HAL_SYSTICK_Config:0000000000000024 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:377    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:382    .text.HAL_NVIC_GetPriorityGrouping:0000000000000000 HAL_NVIC_GetPriorityGrouping
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:402    .text.HAL_NVIC_GetPriorityGrouping:000000000000000c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:407    .text.HAL_NVIC_GetPriority:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:412    .text.HAL_NVIC_GetPriority:0000000000000000 HAL_NVIC_GetPriority
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:501    .text.HAL_NVIC_GetPriority:0000000000000058 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:506    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:511    .text.HAL_NVIC_SetPendingIRQ:0000000000000000 HAL_NVIC_SetPendingIRQ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:535    .text.HAL_NVIC_SetPendingIRQ:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:542    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:547    .text.HAL_NVIC_GetPendingIRQ:0000000000000000 HAL_NVIC_GetPendingIRQ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:574    .text.HAL_NVIC_GetPendingIRQ:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:579    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:584    .text.HAL_NVIC_ClearPendingIRQ:0000000000000000 HAL_NVIC_ClearPendingIRQ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:608    .text.HAL_NVIC_ClearPendingIRQ:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:615    .text.HAL_NVIC_GetActive:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:620    .text.HAL_NVIC_GetActive:0000000000000000 HAL_NVIC_GetActive
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:647    .text.HAL_NVIC_GetActive:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:652    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:657    .text.HAL_SYSTICK_CLKSourceConfig:0000000000000000 HAL_SYSTICK_CLKSourceConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:684    .text.HAL_SYSTICK_CLKSourceConfig:000000000000001c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:689    .text.HAL_SYSTICK_Callback:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:694    .text.HAL_SYSTICK_Callback:0000000000000000 HAL_SYSTICK_Callback
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:706    .text.HAL_SYSTICK_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//cciLVblW.s:711    .text.HAL_SYSTICK_IRQHandler:0000000000000000 HAL_SYSTICK_IRQHandler
                     .debug_frame:0000000000000010 $d

NO UNDEFINED SYMBOLS
