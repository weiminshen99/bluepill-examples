ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_flash_ex.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.FLASH_MassErase,"ax",%progbits
  20              		.align	2
  21              		.thumb
  22              		.thumb_func
  24              	FLASH_MassErase:
  25              	.LFB70:
  26              		.file 1 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c"
   1:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
   2:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ******************************************************************************
   3:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @file    stm32f1xx_hal_flash_ex.c
   4:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @author  MCD Application Team
   5:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @version V1.0.4
   6:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @date    29-April-2016
   7:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief   Extended FLASH HAL module driver.
   8:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *    
   9:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *          This file provides firmware functions to manage the following 
  10:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *          functionalities of the FLASH peripheral:
  11:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *           + Extended Initialization/de-initialization functions
  12:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *           + Extended I/O operation functions
  13:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *           + Extended Peripheral Control functions 
  14:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         
  15:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @verbatim
  16:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
  17:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****                ##### Flash peripheral extended features  #####
  18:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
  19:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****            
  20:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****                       ##### How to use this driver #####
  21:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
  22:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   [..] This driver provides functions to configure and program the FLASH memory 
  23:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****        of all STM32F1xxx devices. It includes
  24:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****        
  25:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         (++) Set/Reset the write protection
  26:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         (++) Program the user Option Bytes
  27:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         (++) Get the Read protection Level
  28:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
  29:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @endverbatim
  30:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ******************************************************************************
  31:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @attention
  32:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 2


  33:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  34:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
  35:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * Redistribution and use in source and binary forms, with or without modification,
  36:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * are permitted provided that the following conditions are met:
  37:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  38:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer.
  39:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  40:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *      this list of conditions and the following disclaimer in the documentation
  41:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *      and/or other materials provided with the distribution.
  42:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  43:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *      may be used to endorse or promote products derived from this software
  44:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *      without specific prior written permission.
  45:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
  46:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  47:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  48:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  49:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  50:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  51:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  52:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  53:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  54:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  55:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  56:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
  57:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ******************************************************************************  
  58:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  59:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
  60:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Includes ------------------------------------------------------------------*/
  61:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #include "stm32f1xx_hal.h"
  62:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
  63:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup STM32F1xx_HAL_Driver
  64:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
  65:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  66:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #ifdef HAL_FLASH_MODULE_ENABLED
  67:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
  68:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup FLASH
  69:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
  70:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  71:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Variables
  72:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  * @{
  73:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  */
  74:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Variables used for Erase pages under interruption*/
  75:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** extern FLASH_ProcessTypeDef pFlash;
  76:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
  77:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
  78:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  79:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
  80:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
  81:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
  82:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  83:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
  84:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx FLASHEx
  85:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief FLASH HAL Extension module driver
  86:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
  87:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
  88:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
  89:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Private typedef -----------------------------------------------------------*/
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 3


  90:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Private define ------------------------------------------------------------*/
  91:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Constants FLASHEx Private Constants
  92:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  * @{
  93:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  */
  94:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #define FLASH_POSITION_IWDGSW_BIT        (uint32_t)POSITION_VAL(FLASH_OBR_IWDG_SW)
  95:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA0_BIT  (uint32_t)POSITION_VAL(FLASH_OBR_DATA0)
  96:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #define FLASH_POSITION_OB_USERDATA1_BIT  (uint32_t)POSITION_VAL(FLASH_OBR_DATA1)
  97:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
  98:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
  99:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 100:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 101:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Private macro -------------------------------------------------------------*/
 102:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Macros FLASHEx Private Macros
 103:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
 104:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 105:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 106:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
 107:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */ 
 108:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 109:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Private variables ---------------------------------------------------------*/
 110:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Private function prototypes -----------------------------------------------*/
 111:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Private_Functions FLASHEx Private Functions
 112:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  * @{
 113:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  */
 114:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Erase operations */
 115:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static void              FLASH_MassErase(uint32_t Banks);
 116:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 117:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Option bytes control */
 118:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage);
 119:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage);
 120:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel);
 121:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig);
 122:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data);
 123:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetWRP(void);
 124:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint32_t          FLASH_OB_GetRDP(void);
 125:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint8_t           FLASH_OB_GetUser(void);
 126:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 127:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 128:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
 129:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 130:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 131:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /* Exported functions ---------------------------------------------------------*/
 132:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions FLASHEx Exported Functions
 133:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
 134:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 135:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 136:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group1 FLASHEx Memory Erasing functions
 137:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  *  @brief   FLASH Memory Erasing functions
 138:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 139:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** @verbatim   
 140:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
 141:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****                 ##### FLASH Erasing Programming functions ##### 
 142:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
 143:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 144:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     [..] The FLASH Memory Erasing functions, includes the following functions:
 145:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase: return only when erase has been done
 146:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     (+) @ref HAL_FLASHEx_Erase_IT: end of erase is done when @ref HAL_FLASH_EndOfOperationCallback 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 4


 147:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         is called with parameter 0xFFFFFFFF
 148:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 149:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     [..] Any operation of erase should follow these steps:
 150:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Unlock() function to enable the flash control register and 
 151:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         program memory access.
 152:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     (#) Call the desired function to erase page.
 153:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     (#) Call the @ref HAL_FLASH_Lock() to disable the flash program memory access 
 154:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****        (recommended to protect the FLASH memory against possible unwanted operation).
 155:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 156:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** @endverbatim
 157:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
 158:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 159:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 160:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 161:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 162:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages
 163:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 164:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         must be called before.
 165:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 166:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 167:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param[in]  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 168:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 169:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 170:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param[out]  PageError pointer to variable  that
 171:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         contains the configuration information on faulty page in case of error
 172:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (0xFFFFFFFF means that all the pages have been correctly erased)
 173:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 174:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 175:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 176:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase(FLASH_EraseInitTypeDef *pEraseInit, uint32_t *PageError)
 177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 179:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t address = 0;
 180:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 181:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Process Locked */
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 183:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 184:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 185:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 186:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 187:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 188:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 189:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 190:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (pEraseInit->Banks == FLASH_BANK_BOTH)
 191:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 192:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Mass Erase requested for Bank1 and Bank2 */
 193:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 194:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if ((FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK) && \
 195:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           (FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK))
 196:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 197:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /*Mass erase to be done*/
 198:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         FLASH_MassErase(FLASH_BANK_BOTH);
 199:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 200:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 201:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         if ((FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK) && \
 202:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             (FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK))
 203:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 5


 204:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           status = HAL_OK;
 205:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         }
 206:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 207:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the MER Bit */
 208:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_MER);
 209:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR2, FLASH_CR2_MER);
 210:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 211:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 212:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     else if (pEraseInit->Banks == FLASH_BANK_2)
 213:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 214:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Mass Erase requested for Bank2 */
 215:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 216:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
 217:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 218:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /*Mass erase to be done*/
 219:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         FLASH_MassErase(FLASH_BANK_2);
 220:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 221:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 222:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE);
 223:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 224:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the MER Bit */
 225:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR2, FLASH_CR2_MER);
 226:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 227:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 228:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     else 
 229:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 231:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Mass Erase requested for Bank1 */
 232:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 233:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
 234:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 235:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /*Mass erase to be done*/
 236:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         FLASH_MassErase(FLASH_BANK_1);
 237:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 238:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 239:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 240:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 241:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* If the erase operation is completed, disable the MER Bit */
 242:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         CLEAR_BIT(FLASH->CR, FLASH_CR_MER);
 243:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 244:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 245:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 246:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else
 247:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 248:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Page Erase is requested */
 249:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Check the parameters */
 250:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 251:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 252:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 253:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 254:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Page Erase requested on address located on bank2 */
 255:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if(pEraseInit->PageAddress > FLASH_BANK1_END)
 256:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {   
 257:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 258:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
 259:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 260:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /*Initialization of PageError variable*/
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 6


 261:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         *PageError = 0xFFFFFFFF;
 262:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 263:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Erase by page by page to be done*/
 264:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         for(address = pEraseInit->PageAddress;
 265:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address < (pEraseInit->PageAddress + (pEraseInit->NbPages)*FLASH_PAGE_SIZE);
 266:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 267:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         {
 268:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           FLASH_PageErase(address);
 269:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 270:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 271:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperationBank2((uint32_t)FLASH_TIMEOUT_VALUE);
 272:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 273:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the PER Bit */
 274:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           CLEAR_BIT(FLASH->CR2, FLASH_CR2_PER);
 275:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 276:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           if (status != HAL_OK)
 277:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           {
 278:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             /* In case of error, stop erase procedure and return the faulty address */
 279:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             *PageError = address;
 280:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             break;
 281:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           }
 282:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         }
 283:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 284:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 285:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     else
 286:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 287:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****    {
 288:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Page Erase requested on address located on bank1 */
 289:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 290:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if (FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE) == HAL_OK)
 291:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 292:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /*Initialization of PageError variable*/
 293:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         *PageError = 0xFFFFFFFF;
 294:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 295:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Erase page by page to be done*/
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         for(address = pEraseInit->PageAddress;
 297:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 298:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 299:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         {
 300:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           FLASH_PageErase(address);
 301:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 302:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           /* Wait for last operation to be completed */
 303:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 304:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 305:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           /* If the erase operation is completed, disable the PER Bit */
 306:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           CLEAR_BIT(FLASH->CR, FLASH_CR_PER);
 307:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 308:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           if (status != HAL_OK)
 309:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           {
 310:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             /* In case of error, stop erase procedure and return the faulty address */
 311:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             *PageError = address;
 312:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             break;
 313:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           }
 314:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         }
 315:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 316:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 317:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 7


 318:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 319:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Process Unlocked */
 320:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 321:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 322:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 323:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 324:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 325:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 326:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Perform a mass erase or erase the specified FLASH memory pages with interrupt enabled
 327:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   To correctly run this function, the @ref HAL_FLASH_Unlock() function
 328:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         must be called before.
 329:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         Call the @ref HAL_FLASH_Lock() to disable the flash memory access 
 330:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (recommended to protect the FLASH memory against possible unwanted operation)
 331:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  pEraseInit pointer to an FLASH_EraseInitTypeDef structure that
 332:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         contains the configuration information for the erasing.
 333:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 334:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 335:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 336:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_Erase_IT(FLASH_EraseInitTypeDef *pEraseInit)
 337:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 338:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 339:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 340:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Process Locked */
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 342:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 343:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* If procedure already ongoing, reject the next one */
 344:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if (pFlash.ProcedureOnGoing != FLASH_PROC_NONE)
 345:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 346:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     return HAL_ERROR;
 347:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 348:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 349:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 350:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_TYPEERASE(pEraseInit->TypeErase));
 351:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 352:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation and Error source interrupts */
 353:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP | FLASH_IT_ERR);
 354:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 355:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 356:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Enable End of FLASH Operation and Error source interrupts */
 357:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_FLASH_ENABLE_IT(FLASH_IT_EOP_BANK2 | FLASH_IT_ERR_BANK2);
 358:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 359:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if (pEraseInit->TypeErase == FLASH_TYPEERASE_MASSERASE)
 361:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 362:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /*Mass erase to be done*/
 363:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_MASSERASE;
 364:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         FLASH_MassErase(pEraseInit->Banks);
 365:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 366:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else
 367:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 368:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Erase by page to be done*/
 369:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 370:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Check the parameters */
 371:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_PROGRAM_ADDRESS(pEraseInit->PageAddress));
 372:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     assert_param(IS_FLASH_NB_PAGES(pEraseInit->PageAddress, pEraseInit->NbPages));
 373:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 374:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ProcedureOnGoing = FLASH_PROC_PAGEERASE;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 8


 375:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.DataRemaining = pEraseInit->NbPages;
 376:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.Address = pEraseInit->PageAddress;
 377:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 378:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /*Erase 1st page and wait for IT*/
 379:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     FLASH_PageErase(pEraseInit->PageAddress);
 380:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 381:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 382:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 383:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 384:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 385:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 386:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
 387:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 388:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 389:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @defgroup FLASHEx_Exported_Functions_Group2 Option Bytes Programming functions
 390:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  *  @brief   Option Bytes Programming functions
 391:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 392:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** @verbatim   
 393:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================
 394:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****                 ##### Option Bytes Programming functions ##### 
 395:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   ==============================================================================  
 396:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     [..]
 397:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     This subsection provides a set of functions allowing to control the FLASH 
 398:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     option bytes operations.
 399:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 400:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** @endverbatim
 401:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
 402:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 403:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 404:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 405:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Erases the FLASH option bytes.
 406:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   This functions erases all option bytes except the Read protection (RDP).
 407:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 408:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 409:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 410:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (system reset will occur)
 411:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status
 412:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 413:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 414:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBErase(void)
 415:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 416:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint8_t rdptmp = OB_RDP_LEVEL_0;
 417:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 418:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 419:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Get the actual read protection Option Byte value */
 420:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   rdptmp = FLASH_OB_GetRDP();
 421:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 422:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 423:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 424:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 425:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 426:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 427:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
 428:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 429:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 430:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 431:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 9


 432:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 433:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 434:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 435:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 436:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 437:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 438:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 439:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 440:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if(status == HAL_OK)
 441:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 442:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Restore the last read protection Option Byte value */
 443:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       status = FLASH_OB_RDP_LevelConfig(rdptmp);
 444:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 445:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 446:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 447:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Return the erase status */
 448:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 449:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 450:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 451:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 452:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Program option bytes
 453:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 454:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 455:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 456:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (system reset will occur)
 457:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 458:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 459:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 460:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 461:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL_StatusTypeDef HAL Status
 462:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 463:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** HAL_StatusTypeDef HAL_FLASHEx_OBProgram(FLASH_OBProgramInitTypeDef *pOBInit)
 464:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 465:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 466:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Process Locked */
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_LOCK(&pFlash);
 469:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 470:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 471:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OPTIONBYTE(pOBInit->OptionType));
 472:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 473:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Write protection configuration */
 474:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_WRP) == OPTIONBYTE_WRP)
 475:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 476:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     assert_param(IS_WRPSTATE(pOBInit->WRPState));
 477:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (pOBInit->WRPState == OB_WRPSTATE_ENABLE)
 478:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 479:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Enable of Write protection on the selected page */
 480:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       status = FLASH_OB_EnableWRP(pOBInit->WRPPage);
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 482:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     else
 483:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 484:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Disable of Write protection on the selected page */
 485:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       status = FLASH_OB_DisableWRP(pOBInit->WRPPage);
 486:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 487:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 488:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 10


 489:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Process Unlocked */
 490:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 491:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 492:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 493:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 494:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 495:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Read protection configuration */
 496:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_RDP) == OPTIONBYTE_RDP)
 497:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 498:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_OB_RDP_LevelConfig(pOBInit->RDPLevel);
 499:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 500:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 501:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Process Unlocked */
 502:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 503:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 504:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 505:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 506:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 507:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* USER configuration */
 508:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_USER) == OPTIONBYTE_USER)
 509:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 510:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_OB_UserConfig(pOBInit->USERConfig);
 511:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 512:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 513:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Process Unlocked */
 514:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 515:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 516:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 517:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 518:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 519:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* DATA configuration*/
 520:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if((pOBInit->OptionType & OPTIONBYTE_DATA) == OPTIONBYTE_DATA)
 521:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 522:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_OB_ProgramData(pOBInit->DATAAddress, pOBInit->DATAData);
 523:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 524:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 525:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Process Unlocked */
 526:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       __HAL_UNLOCK(&pFlash);
 527:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 528:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 529:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 530:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 531:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Process Unlocked */
 532:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   __HAL_UNLOCK(&pFlash);
 533:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 534:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 535:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 536:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 537:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 538:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Get the Option byte configuration
 539:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  pOBInit pointer to an FLASH_OBInitStruct structure that
 540:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         contains the configuration information for the programming.
 541:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 542:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval None
 543:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 544:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** void HAL_FLASHEx_OBGetConfig(FLASH_OBProgramInitTypeDef *pOBInit)
 545:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 11


 546:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER;
 547:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 548:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /*Get WRP*/
 549:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pOBInit->WRPPage = FLASH_OB_GetWRP();
 550:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 551:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /*Get RDP Level*/
 552:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pOBInit->RDPLevel = FLASH_OB_GetRDP();
 553:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 554:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /*Get USER*/
 555:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pOBInit->USERConfig = FLASH_OB_GetUser();
 556:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 557:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 558:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 559:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Get the Option byte user data
 560:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  DATAAdress Address of the option byte DATA
 561:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 562:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA0
 563:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_DATA_ADDRESS_DATA1
 564:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval Value programmed in USER data
 565:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 566:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** uint32_t HAL_FLASHEx_OBGetUserData(uint32_t DATAAdress)
 567:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 568:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t value = 0;
 569:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 570:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if (DATAAdress == OB_DATA_ADDRESS_DATA0)
 571:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 572:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data0 */
 573:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA0) >> FLASH_POSITION_OB_USERDATA0_BIT;
 574:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 575:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else
 576:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 577:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Get value programmed in OB USER Data1 */
 578:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     value = READ_BIT(FLASH->OBR, FLASH_OBR_DATA1) >> FLASH_POSITION_OB_USERDATA1_BIT;
 579:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 580:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 581:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return value;
 582:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 583:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 584:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 585:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
 586:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 587:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 588:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 589:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
 590:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 591:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 592:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup FLASHEx_Private_Functions
 593:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  * @{
 594:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  */
 595:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 596:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 597:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Full erase of FLASH memory Bank 
 598:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  Banks Banks to be erased
 599:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *          This parameter can be one of the following values:
 600:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref FLASH_BANK_1 Bank1 to be erased
 601:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @if STM32F101xG
 602:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref FLASH_BANK_2 Bank2 to be erased
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 12


 603:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref FLASH_BANK_BOTH Bank1 and Bank2 to be erased
 604:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @endif
 605:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @if STM32F103xG
 606:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref FLASH_BANK_2 Bank2 to be erased
 607:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref FLASH_BANK_BOTH Bank1 and Bank2 to be erased
 608:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   @endif
 609:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *
 610:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval None
 611:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 612:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static void FLASH_MassErase(uint32_t Banks)
 613:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
  27              		.loc 1 613 0
  28              		.cfi_startproc
  29              		@ args = 0, pretend = 0, frame = 0
  30              		@ frame_needed = 0, uses_anonymous_args = 0
  31              		@ link register save eliminated.
  32              	.LVL0:
 614:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 615:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_FLASH_BANK(Banks));
 616:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 617:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Clean the error context */
 618:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
  33              		.loc 1 618 0
  34 0000 0022     		movs	r2, #0
  35 0002 064B     		ldr	r3, .L2
  36 0004 DA61     		str	r2, [r3, #28]
 619:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 620:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 621:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(Banks == FLASH_BANK_BOTH)
 622:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 623:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* bank1 & bank2 will be erased*/
 624:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER);
 625:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_MER);
 626:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 627:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_STRT);
 628:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 629:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else if(Banks == FLASH_BANK_2)
 630:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 631:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /*Only bank2 will be erased*/
 632:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_MER);
 633:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_STRT);
 634:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 635:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else
 636:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 637:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 638:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Only bank1 will be erased*/
 639:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_MER);
  37              		.loc 1 639 0
  38 0006 064B     		ldr	r3, .L2+4
  39 0008 1A69     		ldr	r2, [r3, #16]
  40 000a 42F00402 		orr	r2, r2, #4
  41 000e 1A61     		str	r2, [r3, #16]
 640:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
  42              		.loc 1 640 0
  43 0010 1A69     		ldr	r2, [r3, #16]
  44 0012 42F04002 		orr	r2, r2, #64
  45 0016 1A61     		str	r2, [r3, #16]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 13


  46 0018 7047     		bx	lr
  47              	.L3:
  48 001a 00BF     		.align	2
  49              	.L2:
  50 001c 00000000 		.word	pFlash
  51 0020 00200240 		.word	1073881088
  52              		.cfi_endproc
  53              	.LFE70:
  55              		.section	.text.FLASH_OB_GetWRP,"ax",%progbits
  56              		.align	2
  57              		.thumb
  58              		.thumb_func
  60              	FLASH_OB_GetWRP:
  61              	.LFB76:
 641:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 642:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 643:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 644:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 645:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 646:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 647:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Enable the write protection of the desired pages
 648:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 649:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 650:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if
 651:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 652:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * 
 653:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write protected.
 654:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 655:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status 
 656:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 657:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_EnableWRP(uint32_t WriteProtectPage)
 658:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 659:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 660:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFF;
 661:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP1_WRP1)
 662:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFF;
 663:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP1_WRP1 */
 664:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP2_WRP2)
 665:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFF;
 666:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP2_WRP2 */
 667:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP3_WRP3)
 668:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFF;
 669:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP3_WRP3 */
 670:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 671:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 672:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 673:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 674:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be protected ******/
 675:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WriteProtectPage = (uint32_t)(~((~FLASH_OB_GetWRP()) | WriteProtectPage));
 676:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 677:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 678:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 679:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES0TO31MASK)
 680:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
 681:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 682:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 683:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 14


 684:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8);
 685:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES32TO63MASK)
 686:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8);
 687:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 688:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  
 689:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES64TO95MASK)
 690:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES64TO95MASK) >> 16);
 691:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES64TO95MASK */
 692:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 693:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16);
 694:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
 695:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 696:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES96TO127MASK)
 697:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES96TO127MASK) >> 24); 
 698:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 699:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO255MASK) >> 24); 
 700:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO511MASK)
 701:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO511MASK) >> 24); 
 702:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO127MASK)
 703:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24); 
 704:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES96TO127MASK */
 705:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 706:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 707:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 708:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 709:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 710:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 711:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
 712:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 713:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 714:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 715:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 716:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 717:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 718:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Enable write protection */
 719:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 720:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 721:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP0_WRP0)
 722:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFF)
 723:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 724:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP0 &= WRP0_Data;
 725:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 726:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 727:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 728:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 729:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP0_WRP0 */
 730:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 731:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP1_WRP1)
 732:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFF))
 733:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 734:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP1 &= WRP1_Data;
 735:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 736:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 737:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 738:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 739:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP1_WRP1 */
 740:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 15


 741:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP2_WRP2)
 742:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFF))
 743:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 744:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP2 &= WRP2_Data;
 745:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 746:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 747:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 748:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 749:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP2_WRP2 */
 750:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 751:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP3_WRP3)
 752:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFF))
 753:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 754:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP3 &= WRP3_Data;
 755:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 756:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 757:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 758:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 759:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP3_WRP3 */
 760:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 761:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 762:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 763:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 764:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 765:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 766:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 767:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 768:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 769:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 770:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Disable the write protection of the desired pages
 771:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   An option byte erase is done automatically in this function. 
 772:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   When the memory read protection level is selected (RDP level = 1), 
 773:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         it is not possible to program or erase the flash page i if   
 774:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         debug features are connected or boot code is executed in RAM, even if nWRPi = 1 
 775:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * 
 776:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  WriteProtectPage specifies the page(s) to be write unprotected.
 777:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series 
 778:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status 
 779:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 780:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_DisableWRP(uint32_t WriteProtectPage)
 781:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 782:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 783:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP0_Data = 0xFFFF;
 784:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP1_WRP1)
 785:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP1_Data = 0xFFFF;
 786:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP1_WRP1 */
 787:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP2_WRP2)
 788:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP2_Data = 0xFFFF;
 789:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP2_WRP2 */
 790:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP3_WRP3)
 791:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint16_t WRP3_Data = 0xFFFF;
 792:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP3_WRP3 */
 793:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 794:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 795:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_WRP(WriteProtectPage));
 796:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 797:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Get current write protected pages and the new pages to be unprotected ******/
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 16


 798:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WriteProtectPage = (FLASH_OB_GetWRP() | WriteProtectPage);
 799:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 800:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES0TO15MASK)
 801:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO15MASK);
 802:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES0TO31MASK)
 803:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP0_Data = (uint16_t)(WriteProtectPage & OB_WRP_PAGES0TO31MASK);
 804:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 805:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 806:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES16TO31MASK)
 807:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES16TO31MASK) >> 8);
 808:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES32TO63MASK)
 809:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP1_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO63MASK) >> 8);
 810:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 811:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  
 812:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES64TO95MASK)
 813:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES64TO95MASK) >> 16);
 814:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES64TO95MASK */
 815:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES32TO47MASK)
 816:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP2_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES32TO47MASK) >> 16);
 817:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO47MASK */
 818:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 819:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(OB_WRP_PAGES96TO127MASK)
 820:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES96TO127MASK) >> 24); 
 821:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 822:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO255MASK) >> 24); 
 823:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO511MASK)
 824:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO511MASK) >> 24); 
 825:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO127MASK)
 826:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   WRP3_Data = (uint16_t)((WriteProtectPage & OB_WRP_PAGES48TO127MASK) >> 24); 
 827:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES96TO127MASK */
 828:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 829:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 830:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 831:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 832:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 833:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 834:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 835:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
 836:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 837:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 838:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* To be able to write again option byte, need to perform a option byte erase */
 839:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = HAL_FLASHEx_OBErase();
 840:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 841:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 842:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 843:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 844:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP0_WRP0)
 845:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if(WRP0_Data != 0xFF)
 846:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 847:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP0 |= WRP0_Data;
 848:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 849:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 850:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 851:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 852:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP0_WRP0 */
 853:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 854:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP1_WRP1)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 17


 855:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP1_Data != 0xFF))
 856:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 857:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP1 |= WRP1_Data;
 858:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 859:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 860:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 861:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 862:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP1_WRP1 */
 863:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 864:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP2_WRP2)
 865:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP2_Data != 0xFF))
 866:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 867:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP2 |= WRP2_Data;
 868:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 869:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 870:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 871:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 872:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP2_WRP2 */
 873:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 874:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_WRP3_WRP3)
 875:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       if((status == HAL_OK) && (WRP3_Data != 0xFF))
 876:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 877:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         OB->WRP3 |= WRP3_Data;
 878:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 879:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         /* Wait for last operation to be completed */
 880:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 881:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 882:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_WRP3_WRP3 */
 883:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 884:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 885:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 886:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 887:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 888:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 889:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 890:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 891:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 892:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Set the read protection level.
 893:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  ReadProtectLevel specifies the read protection level.
 894:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
 895:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
 896:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
 897:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status
 898:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 899:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_RDP_LevelConfig(uint8_t ReadProtectLevel)
 900:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 901:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 902:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 903:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 904:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_RDP_LEVEL(ReadProtectLevel));
 905:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 906:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 907:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 908:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 909:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 910:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 911:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 18


 912:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 913:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 914:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* If the previous operation is completed, proceed to erase the option bytes */
 915:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTER);
 916:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 917:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 918:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 919:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 920:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 921:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* If the erase operation is completed, disable the OPTER Bit */
 922:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTER);
 923:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 924:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if(status == HAL_OK)
 925:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 926:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Enable the Option Bytes Programming operation */
 927:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       SET_BIT(FLASH->CR, FLASH_CR_OPTPG);
 928:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 929:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       WRITE_REG(OB->RDP, ReadProtectLevel);
 930:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 931:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* Wait for last operation to be completed */
 932:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE); 
 933:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 934:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       /* if the program operation is completed, disable the OPTPG Bit */
 935:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 936:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 937:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 938:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 939:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
 940:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 941:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 942:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 943:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Program the FLASH User Option Byte.    
 944:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 945:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  UserConfig The FLASH User Option Bytes values FLASH_OBR_IWDG_SW(Bit2), 
 946:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         FLASH_OBR_nRST_STOP(Bit3),FLASH_OBR_nRST_STDBY(Bit4).
 947:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         And BFBF2(Bit5) for STM32F101xG and STM32F103xG . 
 948:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status
 949:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
 950:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_UserConfig(uint8_t UserConfig)
 951:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 952:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 953:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 954:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
 955:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_IWDG_SOURCE((UserConfig&OB_IWDG_SW)));
 956:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_STOP_SOURCE((UserConfig&OB_STOP_NO_RST)));
 957:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_STDBY_SOURCE((UserConfig&OB_STDBY_NO_RST)));
 958:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 959:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_BOOT1((UserConfig&OB_BOOT1_SET)));
 960:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 961:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 962:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
 963:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 964:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 965:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
 966:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {     
 967:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
 968:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 19


 969:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 970:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Enable the Option Bytes Programming operation */
 971:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
 972:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  
 973:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
 974:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     OB->USER = (UserConfig | 0xF0);
 975:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #else
 976:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     OB->USER = (UserConfig | 0x88);
 977:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 978:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 979:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
 980:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
 981:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 982:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* if the program operation is completed, disable the OPTPG Bit */
 983:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
 984:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 985:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 986:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status; 
 987:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 988:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 989:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
 990:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Programs a half word at a specified Option Byte Data address.
 991:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @note   The function @ref HAL_FLASH_Unlock() should be called before to unlock the FLASH interf
 992:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Unlock() should be called before to unlock the options b
 993:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The function @ref HAL_FLASH_OB_Launch() should be called after to force the reload of t
 994:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         (system reset will occur)
 995:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         Programming of the OB should be performed only after an erase (otherwise PGERR occurs)
 996:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  Address specifies the address to be programmed.
 997:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         This parameter can be 0x1FFFF804 or 0x1FFFF806. 
 998:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  Data specifies the data to be programmed.
 999:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval HAL status
1000:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1001:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static HAL_StatusTypeDef FLASH_OB_ProgramData(uint32_t Address, uint8_t Data)
1002:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
1003:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
1004:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
1005:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Check the parameters */
1006:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   assert_param(IS_OB_DATA_ADDRESS(Address));
1007:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
1008:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Wait for last operation to be completed */
1009:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1010:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
1011:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(status == HAL_OK)
1012:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
1013:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Clean the error context */
1014:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
1015:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1016:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Enables the Option Bytes Programming operation */
1017:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_OPTPG); 
1018:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     *(__IO uint16_t*)Address = Data;
1019:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
1020:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Wait for last operation to be completed */
1021:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     status = FLASH_WaitForLastOperation((uint32_t)FLASH_TIMEOUT_VALUE);
1022:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
1023:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* If the program operation is completed, disable the OPTPG Bit */
1024:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     CLEAR_BIT(FLASH->CR, FLASH_CR_OPTPG);
1025:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 20


1026:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Return the Option Byte Data Program Status */
1027:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return status;
1028:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
1029:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1030:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1031:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Return the FLASH Write Protection Option Bytes value.
1032:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval The FLASH Write Protection Option Bytes value
1033:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1034:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetWRP(void)
1035:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
  62              		.loc 1 1035 0
  63              		.cfi_startproc
  64              		@ args = 0, pretend = 0, frame = 0
  65              		@ frame_needed = 0, uses_anonymous_args = 0
  66              		@ link register save eliminated.
1036:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Return the FLASH write protection Register value */
1037:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return (uint32_t)(READ_REG(FLASH->WRPR));
  67              		.loc 1 1037 0
  68 0000 014B     		ldr	r3, .L5
  69 0002 186A     		ldr	r0, [r3, #32]
1038:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
  70              		.loc 1 1038 0
  71 0004 7047     		bx	lr
  72              	.L6:
  73 0006 00BF     		.align	2
  74              	.L5:
  75 0008 00200240 		.word	1073881088
  76              		.cfi_endproc
  77              	.LFE76:
  79              		.section	.text.FLASH_OB_GetRDP,"ax",%progbits
  80              		.align	2
  81              		.thumb
  82              		.thumb_func
  84              	FLASH_OB_GetRDP:
  85              	.LFB77:
1039:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1040:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1041:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Returns the FLASH Read Protection level.
1042:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval FLASH ReadOut Protection Status:
1043:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         This parameter can be one of the following values:
1044:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_0 No protection
1045:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *            @arg @ref OB_RDP_LEVEL_1 Read protection of the memory
1046:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1047:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint32_t FLASH_OB_GetRDP(void)
1048:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
  86              		.loc 1 1048 0
  87              		.cfi_startproc
  88              		@ args = 0, pretend = 0, frame = 0
  89              		@ frame_needed = 0, uses_anonymous_args = 0
  90              		@ link register save eliminated.
  91              	.LVL1:
1049:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t readstatus = OB_RDP_LEVEL_0;
1050:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t tmp_reg = 0;
1051:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
1052:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Read RDP level bits */
1053:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   tmp_reg = READ_BIT(FLASH->OBR, FLASH_OBR_RDPRT);
  92              		.loc 1 1053 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 21


  93 0000 044B     		ldr	r3, .L10
  94 0002 DB69     		ldr	r3, [r3, #28]
  95 0004 03F00203 		and	r3, r3, #2
  96              	.LVL2:
1054:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1055:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if (tmp_reg == FLASH_OBR_RDPRT)
  97              		.loc 1 1055 0
  98 0008 0BB1     		cbz	r3, .L9
1056:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
1057:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_1;
  99              		.loc 1 1057 0
 100 000a 0020     		movs	r0, #0
 101 000c 7047     		bx	lr
 102              	.L9:
1058:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
1059:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else 
1060:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
1061:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     readstatus = OB_RDP_LEVEL_0;
 103              		.loc 1 1061 0
 104 000e A520     		movs	r0, #165
 105              	.LVL3:
1062:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
1063:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1064:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return readstatus;
1065:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 106              		.loc 1 1065 0
 107 0010 7047     		bx	lr
 108              	.L11:
 109 0012 00BF     		.align	2
 110              	.L10:
 111 0014 00200240 		.word	1073881088
 112              		.cfi_endproc
 113              	.LFE77:
 115              		.section	.text.FLASH_OB_RDP_LevelConfig,"ax",%progbits
 116              		.align	2
 117              		.thumb
 118              		.thumb_func
 120              	FLASH_OB_RDP_LevelConfig:
 121              	.LFB73:
 900:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 122              		.loc 1 900 0
 123              		.cfi_startproc
 124              		@ args = 0, pretend = 0, frame = 0
 125              		@ frame_needed = 0, uses_anonymous_args = 0
 126              	.LVL4:
 127 0000 38B5     		push	{r3, r4, r5, lr}
 128              	.LCFI0:
 129              		.cfi_def_cfa_offset 16
 130              		.cfi_offset 3, -16
 131              		.cfi_offset 4, -12
 132              		.cfi_offset 5, -8
 133              		.cfi_offset 14, -4
 134 0002 0546     		mov	r5, r0
 135              	.LVL5:
 907:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 136              		.loc 1 907 0
 137 0004 4CF25030 		movw	r0, #50000
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 22


 138              	.LVL6:
 139 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 140              	.LVL7:
 909:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 141              		.loc 1 909 0
 142 000c 0346     		mov	r3, r0
 143 000e 28BB     		cbnz	r0, .L13
 912:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 144              		.loc 1 912 0
 145 0010 0022     		movs	r2, #0
 146 0012 134B     		ldr	r3, .L15
 147 0014 DA61     		str	r2, [r3, #28]
 915:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 148              		.loc 1 915 0
 149 0016 134C     		ldr	r4, .L15+4
 150 0018 2369     		ldr	r3, [r4, #16]
 151 001a 43F02003 		orr	r3, r3, #32
 152 001e 2361     		str	r3, [r4, #16]
 916:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 153              		.loc 1 916 0
 154 0020 2369     		ldr	r3, [r4, #16]
 155 0022 43F04003 		orr	r3, r3, #64
 156 0026 2361     		str	r3, [r4, #16]
 919:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 157              		.loc 1 919 0
 158 0028 4CF25030 		movw	r0, #50000
 159              	.LVL8:
 160 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 161              	.LVL9:
 922:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 162              		.loc 1 922 0
 163 0030 2369     		ldr	r3, [r4, #16]
 164 0032 23F02003 		bic	r3, r3, #32
 165 0036 2361     		str	r3, [r4, #16]
 924:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 166              		.loc 1 924 0
 167 0038 0346     		mov	r3, r0
 168 003a 78B9     		cbnz	r0, .L13
 927:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 169              		.loc 1 927 0
 170 003c 2369     		ldr	r3, [r4, #16]
 171 003e 43F01003 		orr	r3, r3, #16
 172 0042 2361     		str	r3, [r4, #16]
 929:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 173              		.loc 1 929 0
 174 0044 ADB2     		uxth	r5, r5
 175 0046 084B     		ldr	r3, .L15+8
 176 0048 1D80     		strh	r5, [r3]	@ movhi
 932:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       
 177              		.loc 1 932 0
 178 004a 4CF25030 		movw	r0, #50000
 179              	.LVL10:
 180 004e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 181              	.LVL11:
 182 0052 0346     		mov	r3, r0
 183              	.LVL12:
 935:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 23


 184              		.loc 1 935 0
 185 0054 2269     		ldr	r2, [r4, #16]
 186 0056 22F01002 		bic	r2, r2, #16
 187 005a 2261     		str	r2, [r4, #16]
 188              	.LVL13:
 189              	.L13:
 940:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 190              		.loc 1 940 0
 191 005c 1846     		mov	r0, r3
 192 005e 38BD     		pop	{r3, r4, r5, pc}
 193              	.LVL14:
 194              	.L16:
 195              		.align	2
 196              	.L15:
 197 0060 00000000 		.word	pFlash
 198 0064 00200240 		.word	1073881088
 199 0068 00F8FF1F 		.word	536868864
 200              		.cfi_endproc
 201              	.LFE73:
 203              		.section	.text.FLASH_OB_UserConfig,"ax",%progbits
 204              		.align	2
 205              		.thumb
 206              		.thumb_func
 208              	FLASH_OB_UserConfig:
 209              	.LFB74:
 951:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 210              		.loc 1 951 0
 211              		.cfi_startproc
 212              		@ args = 0, pretend = 0, frame = 0
 213              		@ frame_needed = 0, uses_anonymous_args = 0
 214              	.LVL15:
 215 0000 38B5     		push	{r3, r4, r5, lr}
 216              	.LCFI1:
 217              		.cfi_def_cfa_offset 16
 218              		.cfi_offset 3, -16
 219              		.cfi_offset 4, -12
 220              		.cfi_offset 5, -8
 221              		.cfi_offset 14, -4
 222 0002 0446     		mov	r4, r0
 223              	.LVL16:
 963:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 224              		.loc 1 963 0
 225 0004 4CF25030 		movw	r0, #50000
 226              	.LVL17:
 227 0008 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 228              	.LVL18:
 965:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {     
 229              		.loc 1 965 0
 230 000c 0346     		mov	r3, r0
 231 000e A0B9     		cbnz	r0, .L18
 968:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 232              		.loc 1 968 0
 233 0010 0022     		movs	r2, #0
 234 0012 0B4B     		ldr	r3, .L20
 235 0014 DA61     		str	r2, [r3, #28]
 971:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  
 236              		.loc 1 971 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 24


 237 0016 0B4D     		ldr	r5, .L20+4
 238 0018 2B69     		ldr	r3, [r5, #16]
 239 001a 43F01003 		orr	r3, r3, #16
 240 001e 2B61     		str	r3, [r5, #16]
 976:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
 241              		.loc 1 976 0
 242 0020 44F08804 		orr	r4, r4, #136
 243 0024 084B     		ldr	r3, .L20+8
 244 0026 5C80     		strh	r4, [r3, #2]	@ movhi
 980:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 245              		.loc 1 980 0
 246 0028 4CF25030 		movw	r0, #50000
 247              	.LVL19:
 248 002c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 249              	.LVL20:
 250 0030 0346     		mov	r3, r0
 251              	.LVL21:
 983:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 252              		.loc 1 983 0
 253 0032 2A69     		ldr	r2, [r5, #16]
 254 0034 22F01002 		bic	r2, r2, #16
 255 0038 2A61     		str	r2, [r5, #16]
 256              	.LVL22:
 257              	.L18:
 987:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 258              		.loc 1 987 0
 259 003a 1846     		mov	r0, r3
 260 003c 38BD     		pop	{r3, r4, r5, pc}
 261              	.LVL23:
 262              	.L21:
 263 003e 00BF     		.align	2
 264              	.L20:
 265 0040 00000000 		.word	pFlash
 266 0044 00200240 		.word	1073881088
 267 0048 00F8FF1F 		.word	536868864
 268              		.cfi_endproc
 269              	.LFE74:
 271              		.section	.text.FLASH_OB_ProgramData,"ax",%progbits
 272              		.align	2
 273              		.thumb
 274              		.thumb_func
 276              	FLASH_OB_ProgramData:
 277              	.LFB75:
1002:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 278              		.loc 1 1002 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 0
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              	.LVL24:
 283 0000 70B5     		push	{r4, r5, r6, lr}
 284              	.LCFI2:
 285              		.cfi_def_cfa_offset 16
 286              		.cfi_offset 4, -16
 287              		.cfi_offset 5, -12
 288              		.cfi_offset 6, -8
 289              		.cfi_offset 14, -4
 290 0002 0646     		mov	r6, r0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 25


 291 0004 0C46     		mov	r4, r1
 292              	.LVL25:
1009:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 293              		.loc 1 1009 0
 294 0006 4CF25030 		movw	r0, #50000
 295              	.LVL26:
 296 000a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 297              	.LVL27:
1011:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 298              		.loc 1 1011 0
 299 000e 0346     		mov	r3, r0
 300 0010 90B9     		cbnz	r0, .L23
1014:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 301              		.loc 1 1014 0
 302 0012 0022     		movs	r2, #0
 303 0014 094B     		ldr	r3, .L25
 304 0016 DA61     		str	r2, [r3, #28]
1017:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     *(__IO uint16_t*)Address = Data;
 305              		.loc 1 1017 0
 306 0018 094D     		ldr	r5, .L25+4
 307 001a 2B69     		ldr	r3, [r5, #16]
 308 001c 43F01003 		orr	r3, r3, #16
 309 0020 2B61     		str	r3, [r5, #16]
1018:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 310              		.loc 1 1018 0
 311 0022 A4B2     		uxth	r4, r4
 312 0024 3480     		strh	r4, [r6]	@ movhi
1021:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     
 313              		.loc 1 1021 0
 314 0026 4CF25030 		movw	r0, #50000
 315              	.LVL28:
 316 002a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 317              	.LVL29:
 318 002e 0346     		mov	r3, r0
 319              	.LVL30:
1024:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 320              		.loc 1 1024 0
 321 0030 2A69     		ldr	r2, [r5, #16]
 322 0032 22F01002 		bic	r2, r2, #16
 323 0036 2A61     		str	r2, [r5, #16]
 324              	.LVL31:
 325              	.L23:
1028:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 326              		.loc 1 1028 0
 327 0038 1846     		mov	r0, r3
 328 003a 70BD     		pop	{r4, r5, r6, pc}
 329              	.LVL32:
 330              	.L26:
 331              		.align	2
 332              	.L25:
 333 003c 00000000 		.word	pFlash
 334 0040 00200240 		.word	1073881088
 335              		.cfi_endproc
 336              	.LFE75:
 338              		.section	.text.FLASH_OB_GetUser,"ax",%progbits
 339              		.align	2
 340              		.thumb
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 26


 341              		.thumb_func
 343              	FLASH_OB_GetUser:
 344              	.LFB78:
1066:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1067:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1068:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Return the FLASH User Option Byte value.
1069:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval The FLASH User Option Bytes values: FLASH_OBR_IWDG_SW(Bit2), 
1070:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         FLASH_OBR_nRST_STOP(Bit3),FLASH_OBR_nRST_STDBY(Bit4).
1071:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         And FLASH_OBR_BFB2(Bit5) for STM32F101xG and STM32F103xG . 
1072:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1073:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** static uint8_t FLASH_OB_GetUser(void)
1074:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 345              		.loc 1 1074 0
 346              		.cfi_startproc
 347              		@ args = 0, pretend = 0, frame = 0
 348              		@ frame_needed = 0, uses_anonymous_args = 0
 349              		@ link register save eliminated.
1075:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Return the User Option Byte */
1076:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   return (uint8_t)((READ_REG(FLASH->OBR) & FLASH_OBR_USER) >> FLASH_POSITION_IWDGSW_BIT);
 350              		.loc 1 1076 0
 351 0000 064B     		ldr	r3, .L28
 352 0002 D869     		ldr	r0, [r3, #28]
 353 0004 00F01C03 		and	r3, r0, #28
 354              	.LVL33:
 355              	.LBB8:
 356              	.LBB9:
 357              		.file 2 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
   9:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    *
  21:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 27


  31:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  35:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  38:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
  45:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  46:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  47:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
  51:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  52:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  53:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  54:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  58:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  60:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  62:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  63:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  64:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  65:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  69:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  71:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  73:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  74:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  75:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  76:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  80:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  82:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  84:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 28


  88:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 105:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 115:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 119:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 121:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 123:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 126:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 127:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 128:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 129:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 132:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 134:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 136:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 138:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 141:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 142:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 143:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 144:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 29


 145:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 148:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 150:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 152:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 155:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 156:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 157:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 158:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 162:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 164:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 186:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 188:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 190:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 192:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 193:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 194:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 195:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 199:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 201:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 30


 202:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 203:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 206:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 207:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 208:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 209:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 213:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 215:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 217:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 218:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 219:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 221:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 222:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 226:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 228:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 230:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 231:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 232:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 233:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 237:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 239:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 241:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 242:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 243:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 244:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 248:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 250:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 252:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 255:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 256:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 257:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 258:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 31


 259:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 262:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 264:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 266:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 267:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 268:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 269:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 274:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 276:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 278:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 289:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 292:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 293:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 294:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 295:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 299:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 301:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 303:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 306:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 307:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 309:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 310:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 314:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 32


 316:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 319:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 325:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 327:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 328:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 329:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 330:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 331:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 335:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 337:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 343:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 344:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 347:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 348:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 349:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 351:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 352:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
 356:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** */
 357:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 365:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 368:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 369:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 370:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 33


 373:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 375:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 377:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 378:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 379:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 380:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 383:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 385:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 387:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 388:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 389:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 390:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 394:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 396:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 398:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 399:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 400:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 401:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 404:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 406:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 408:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 409:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 410:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 411:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 416:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 418:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 420:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 421:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 422:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 423:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 427:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 429:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 34


 430:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 431:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 432:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 433:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 434:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 438:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 440:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 442:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 443:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 444:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 445:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
 447:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 450:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 452:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 455:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 457:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 460:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 464:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 477:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 479:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 35


 487:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 489:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 491:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 494:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 495:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 496:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 497:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 498:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 504:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 506:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 508:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 509:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 517:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 520:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 521:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 526:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 528:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 530:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
 358              		.loc 2 531 0
 359 0008 0420     		movs	r0, #4
 360              		.syntax unified
 361              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 362 000a 90FAA0F0 		rbit r0, r0
 363              	@ 0 "" 2
 364              	.LVL34:
 365              		.thumb
 366              		.syntax unified
 367              	.LBE9:
 368              	.LBE8:
 369              		.loc 1 1076 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 36


 370 000e B0FA80F0 		clz	r0, r0
 371 0012 23FA00F0 		lsr	r0, r3, r0
1077:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 372              		.loc 1 1077 0
 373 0016 C0B2     		uxtb	r0, r0
 374 0018 7047     		bx	lr
 375              	.L29:
 376 001a 00BF     		.align	2
 377              	.L28:
 378 001c 00200240 		.word	1073881088
 379              		.cfi_endproc
 380              	.LFE78:
 382              		.section	.text.HAL_FLASHEx_OBErase,"ax",%progbits
 383              		.align	2
 384              		.global	HAL_FLASHEx_OBErase
 385              		.thumb
 386              		.thumb_func
 388              	HAL_FLASHEx_OBErase:
 389              	.LFB66:
 415:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint8_t rdptmp = OB_RDP_LEVEL_0;
 390              		.loc 1 415 0
 391              		.cfi_startproc
 392              		@ args = 0, pretend = 0, frame = 0
 393              		@ frame_needed = 0, uses_anonymous_args = 0
 394 0000 38B5     		push	{r3, r4, r5, lr}
 395              	.LCFI3:
 396              		.cfi_def_cfa_offset 16
 397              		.cfi_offset 3, -16
 398              		.cfi_offset 4, -12
 399              		.cfi_offset 5, -8
 400              		.cfi_offset 14, -4
 401              	.LVL35:
 420:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 402              		.loc 1 420 0
 403 0002 FFF7FEFF 		bl	FLASH_OB_GetRDP
 404              	.LVL36:
 405 0006 C5B2     		uxtb	r5, r0
 406              	.LVL37:
 423:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 407              		.loc 1 423 0
 408 0008 4CF25030 		movw	r0, #50000
 409 000c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 410              	.LVL38:
 425:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 411              		.loc 1 425 0
 412 0010 0346     		mov	r3, r0
 413 0012 C8B9     		cbnz	r0, .L31
 428:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 414              		.loc 1 428 0
 415 0014 0022     		movs	r2, #0
 416 0016 0D4B     		ldr	r3, .L33
 417 0018 DA61     		str	r2, [r3, #28]
 431:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 418              		.loc 1 431 0
 419 001a 0D4C     		ldr	r4, .L33+4
 420 001c 2369     		ldr	r3, [r4, #16]
 421 001e 43F02003 		orr	r3, r3, #32
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 37


 422 0022 2361     		str	r3, [r4, #16]
 432:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 423              		.loc 1 432 0
 424 0024 2369     		ldr	r3, [r4, #16]
 425 0026 43F04003 		orr	r3, r3, #64
 426 002a 2361     		str	r3, [r4, #16]
 435:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 427              		.loc 1 435 0
 428 002c 4CF25030 		movw	r0, #50000
 429              	.LVL39:
 430 0030 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 431              	.LVL40:
 438:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 432              		.loc 1 438 0
 433 0034 2369     		ldr	r3, [r4, #16]
 434 0036 23F02003 		bic	r3, r3, #32
 435 003a 2361     		str	r3, [r4, #16]
 440:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 436              		.loc 1 440 0
 437 003c 0346     		mov	r3, r0
 438 003e 18B9     		cbnz	r0, .L31
 443:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 439              		.loc 1 443 0
 440 0040 2846     		mov	r0, r5
 441              	.LVL41:
 442 0042 FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 443              	.LVL42:
 444 0046 0346     		mov	r3, r0
 445              	.LVL43:
 446              	.L31:
 449:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 447              		.loc 1 449 0
 448 0048 1846     		mov	r0, r3
 449 004a 38BD     		pop	{r3, r4, r5, pc}
 450              	.LVL44:
 451              	.L34:
 452              		.align	2
 453              	.L33:
 454 004c 00000000 		.word	pFlash
 455 0050 00200240 		.word	1073881088
 456              		.cfi_endproc
 457              	.LFE66:
 459              		.section	.text.FLASH_OB_EnableWRP,"ax",%progbits
 460              		.align	2
 461              		.thumb
 462              		.thumb_func
 464              	FLASH_OB_EnableWRP:
 465              	.LFB71:
 658:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 466              		.loc 1 658 0
 467              		.cfi_startproc
 468              		@ args = 0, pretend = 0, frame = 0
 469              		@ frame_needed = 0, uses_anonymous_args = 0
 470              	.LVL45:
 471 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 472              	.LCFI4:
 473              		.cfi_def_cfa_offset 24
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 38


 474              		.cfi_offset 3, -24
 475              		.cfi_offset 4, -20
 476              		.cfi_offset 5, -16
 477              		.cfi_offset 6, -12
 478              		.cfi_offset 7, -8
 479              		.cfi_offset 14, -4
 480 0002 0446     		mov	r4, r0
 481              	.LVL46:
 675:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   
 482              		.loc 1 675 0
 483 0004 FFF7FEFF 		bl	FLASH_OB_GetWRP
 484              	.LVL47:
 485 0008 20EA0400 		bic	r0, r0, r4
 486              	.LVL48:
 680:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 487              		.loc 1 680 0
 488 000c C5B2     		uxtb	r5, r0
 489              	.LVL49:
 686:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 490              		.loc 1 686 0
 491 000e C0F30727 		ubfx	r7, r0, #8, #8
 492              	.LVL50:
 690:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES64TO95MASK */
 493              		.loc 1 690 0
 494 0012 C0F30746 		ubfx	r6, r0, #16, #8
 495              	.LVL51:
 697:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 496              		.loc 1 697 0
 497 0016 040E     		lsrs	r4, r0, #24
 498              	.LVL52:
 707:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 499              		.loc 1 707 0
 500 0018 4CF25030 		movw	r0, #50000
 501              	.LVL53:
 502 001c FFF7FEFF 		bl	FLASH_WaitForLastOperation
 503              	.LVL54:
 709:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 504              		.loc 1 709 0
 505 0020 0346     		mov	r3, r0
 506 0022 0028     		cmp	r0, #0
 507 0024 40D1     		bne	.L36
 712:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 508              		.loc 1 712 0
 509 0026 0022     		movs	r2, #0
 510 0028 204B     		ldr	r3, .L42
 511 002a DA61     		str	r2, [r3, #28]
 715:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 512              		.loc 1 715 0
 513 002c FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 514              	.LVL55:
 716:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 515              		.loc 1 716 0
 516 0030 0346     		mov	r3, r0
 517 0032 0028     		cmp	r0, #0
 518 0034 38D1     		bne	.L36
 719:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 519              		.loc 1 719 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 39


 520 0036 1E49     		ldr	r1, .L42+4
 521 0038 0A69     		ldr	r2, [r1, #16]
 522 003a 42F01002 		orr	r2, r2, #16
 523 003e 0A61     		str	r2, [r1, #16]
 722:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 524              		.loc 1 722 0
 525 0040 FF2D     		cmp	r5, #255
 526 0042 08D0     		beq	.L37
 724:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 527              		.loc 1 724 0
 528 0044 1B4A     		ldr	r2, .L42+8
 529 0046 1389     		ldrh	r3, [r2, #8]
 530 0048 1D40     		ands	r5, r5, r3
 531              	.LVL56:
 532 004a 1581     		strh	r5, [r2, #8]	@ movhi
 727:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 533              		.loc 1 727 0
 534 004c 4CF25030 		movw	r0, #50000
 535              	.LVL57:
 536 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 537              	.LVL58:
 538 0054 0346     		mov	r3, r0
 539              	.LVL59:
 540              	.L37:
 732:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 541              		.loc 1 732 0
 542 0056 53B9     		cbnz	r3, .L38
 732:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 543              		.loc 1 732 0 is_stmt 0 discriminator 1
 544 0058 FF2F     		cmp	r7, #255
 545 005a 08D0     		beq	.L38
 734:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 546              		.loc 1 734 0 is_stmt 1
 547 005c 154A     		ldr	r2, .L42+8
 548 005e 5389     		ldrh	r3, [r2, #10]
 549              	.LVL60:
 550 0060 1F40     		ands	r7, r7, r3
 551              	.LVL61:
 552 0062 5781     		strh	r7, [r2, #10]	@ movhi
 737:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 553              		.loc 1 737 0
 554 0064 4CF25030 		movw	r0, #50000
 555 0068 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 556              	.LVL62:
 557 006c 0346     		mov	r3, r0
 558              	.LVL63:
 559              	.L38:
 742:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 560              		.loc 1 742 0
 561 006e 53B9     		cbnz	r3, .L39
 742:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 562              		.loc 1 742 0 is_stmt 0 discriminator 1
 563 0070 FF2E     		cmp	r6, #255
 564 0072 08D0     		beq	.L39
 744:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 565              		.loc 1 744 0 is_stmt 1
 566 0074 0F4A     		ldr	r2, .L42+8
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 40


 567 0076 9389     		ldrh	r3, [r2, #12]
 568              	.LVL64:
 569 0078 1E40     		ands	r6, r6, r3
 570              	.LVL65:
 571 007a 9681     		strh	r6, [r2, #12]	@ movhi
 747:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 572              		.loc 1 747 0
 573 007c 4CF25030 		movw	r0, #50000
 574 0080 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 575              	.LVL66:
 576 0084 0346     		mov	r3, r0
 577              	.LVL67:
 578              	.L39:
 752:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 579              		.loc 1 752 0
 580 0086 53B9     		cbnz	r3, .L40
 752:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 581              		.loc 1 752 0 is_stmt 0 discriminator 1
 582 0088 FF2C     		cmp	r4, #255
 583 008a 08D0     		beq	.L40
 754:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 584              		.loc 1 754 0 is_stmt 1
 585 008c 094B     		ldr	r3, .L42+8
 586              	.LVL68:
 587 008e D889     		ldrh	r0, [r3, #14]
 588 0090 2040     		ands	r0, r0, r4
 589 0092 D881     		strh	r0, [r3, #14]	@ movhi
 757:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 590              		.loc 1 757 0
 591 0094 4CF25030 		movw	r0, #50000
 592 0098 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 593              	.LVL69:
 594 009c 0346     		mov	r3, r0
 595              	.LVL70:
 596              	.L40:
 762:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 597              		.loc 1 762 0
 598 009e 0449     		ldr	r1, .L42+4
 599 00a0 0A69     		ldr	r2, [r1, #16]
 600 00a2 22F01002 		bic	r2, r2, #16
 601 00a6 0A61     		str	r2, [r1, #16]
 602              	.LVL71:
 603              	.L36:
 767:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 604              		.loc 1 767 0
 605 00a8 1846     		mov	r0, r3
 606 00aa F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 607              	.LVL72:
 608              	.L43:
 609              		.align	2
 610              	.L42:
 611 00ac 00000000 		.word	pFlash
 612 00b0 00200240 		.word	1073881088
 613 00b4 00F8FF1F 		.word	536868864
 614              		.cfi_endproc
 615              	.LFE71:
 617              		.section	.text.FLASH_OB_DisableWRP,"ax",%progbits
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 41


 618              		.align	2
 619              		.thumb
 620              		.thumb_func
 622              	FLASH_OB_DisableWRP:
 623              	.LFB72:
 781:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 624              		.loc 1 781 0
 625              		.cfi_startproc
 626              		@ args = 0, pretend = 0, frame = 0
 627              		@ frame_needed = 0, uses_anonymous_args = 0
 628              	.LVL73:
 629 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 630              	.LCFI5:
 631              		.cfi_def_cfa_offset 24
 632              		.cfi_offset 3, -24
 633              		.cfi_offset 4, -20
 634              		.cfi_offset 5, -16
 635              		.cfi_offset 6, -12
 636              		.cfi_offset 7, -8
 637              		.cfi_offset 14, -4
 638 0002 0446     		mov	r4, r0
 639              	.LVL74:
 798:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 640              		.loc 1 798 0
 641 0004 FFF7FEFF 		bl	FLASH_OB_GetWRP
 642              	.LVL75:
 643 0008 2043     		orrs	r0, r0, r4
 644              	.LVL76:
 803:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES0TO31MASK */
 645              		.loc 1 803 0
 646 000a C5B2     		uxtb	r5, r0
 647              	.LVL77:
 809:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES32TO63MASK */
 648              		.loc 1 809 0
 649 000c C0F30727 		ubfx	r7, r0, #8, #8
 650              	.LVL78:
 813:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* OB_WRP_PAGES64TO95MASK */
 651              		.loc 1 813 0
 652 0010 C0F30746 		ubfx	r6, r0, #16, #8
 653              	.LVL79:
 820:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #elif defined(OB_WRP_PAGES48TO255MASK)
 654              		.loc 1 820 0
 655 0014 040E     		lsrs	r4, r0, #24
 656              	.LVL80:
 831:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 657              		.loc 1 831 0
 658 0016 4CF25030 		movw	r0, #50000
 659              	.LVL81:
 660 001a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 661              	.LVL82:
 833:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
 662              		.loc 1 833 0
 663 001e 0346     		mov	r3, r0
 664 0020 0028     		cmp	r0, #0
 665 0022 44D1     		bne	.L45
 836:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 666              		.loc 1 836 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 42


 667 0024 0022     		movs	r2, #0
 668 0026 234B     		ldr	r3, .L51
 669 0028 DA61     		str	r2, [r3, #28]
 839:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status == HAL_OK)  
 670              		.loc 1 839 0
 671 002a FFF7FEFF 		bl	HAL_FLASHEx_OBErase
 672              	.LVL83:
 840:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 673              		.loc 1 840 0
 674 002e 0346     		mov	r3, r0
 675 0030 0028     		cmp	r0, #0
 676 0032 3CD1     		bne	.L45
 842:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 677              		.loc 1 842 0
 678 0034 2049     		ldr	r1, .L51+4
 679 0036 0A69     		ldr	r2, [r1, #16]
 680 0038 42F01002 		orr	r2, r2, #16
 681 003c 0A61     		str	r2, [r1, #16]
 845:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 682              		.loc 1 845 0
 683 003e FF2D     		cmp	r5, #255
 684 0040 09D0     		beq	.L46
 847:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 685              		.loc 1 847 0
 686 0042 1E4A     		ldr	r2, .L51+8
 687 0044 1389     		ldrh	r3, [r2, #8]
 688 0046 9BB2     		uxth	r3, r3
 689 0048 1D43     		orrs	r5, r5, r3
 690              	.LVL84:
 691 004a 1581     		strh	r5, [r2, #8]	@ movhi
 850:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 692              		.loc 1 850 0
 693 004c 4CF25030 		movw	r0, #50000
 694              	.LVL85:
 695 0050 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 696              	.LVL86:
 697 0054 0346     		mov	r3, r0
 698              	.LVL87:
 699              	.L46:
 855:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 700              		.loc 1 855 0
 701 0056 5BB9     		cbnz	r3, .L47
 855:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 702              		.loc 1 855 0 is_stmt 0 discriminator 1
 703 0058 FF2F     		cmp	r7, #255
 704 005a 09D0     		beq	.L47
 857:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 705              		.loc 1 857 0 is_stmt 1
 706 005c 174A     		ldr	r2, .L51+8
 707 005e 5389     		ldrh	r3, [r2, #10]
 708              	.LVL88:
 709 0060 9BB2     		uxth	r3, r3
 710 0062 1F43     		orrs	r7, r7, r3
 711              	.LVL89:
 712 0064 5781     		strh	r7, [r2, #10]	@ movhi
 860:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 713              		.loc 1 860 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 43


 714 0066 4CF25030 		movw	r0, #50000
 715 006a FFF7FEFF 		bl	FLASH_WaitForLastOperation
 716              	.LVL90:
 717 006e 0346     		mov	r3, r0
 718              	.LVL91:
 719              	.L47:
 865:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 720              		.loc 1 865 0
 721 0070 5BB9     		cbnz	r3, .L48
 865:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 722              		.loc 1 865 0 is_stmt 0 discriminator 1
 723 0072 FF2E     		cmp	r6, #255
 724 0074 09D0     		beq	.L48
 867:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 725              		.loc 1 867 0 is_stmt 1
 726 0076 114A     		ldr	r2, .L51+8
 727 0078 9389     		ldrh	r3, [r2, #12]
 728              	.LVL92:
 729 007a 9BB2     		uxth	r3, r3
 730 007c 1E43     		orrs	r6, r6, r3
 731              	.LVL93:
 732 007e 9681     		strh	r6, [r2, #12]	@ movhi
 870:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 733              		.loc 1 870 0
 734 0080 4CF25030 		movw	r0, #50000
 735 0084 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 736              	.LVL94:
 737 0088 0346     		mov	r3, r0
 738              	.LVL95:
 739              	.L48:
 875:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 740              		.loc 1 875 0
 741 008a 5BB9     		cbnz	r3, .L49
 875:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 742              		.loc 1 875 0 is_stmt 0 discriminator 1
 743 008c FF2C     		cmp	r4, #255
 744 008e 09D0     		beq	.L49
 877:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 745              		.loc 1 877 0 is_stmt 1
 746 0090 0A4B     		ldr	r3, .L51+8
 747              	.LVL96:
 748 0092 D889     		ldrh	r0, [r3, #14]
 749 0094 80B2     		uxth	r0, r0
 750 0096 2043     		orrs	r0, r0, r4
 751 0098 D881     		strh	r0, [r3, #14]	@ movhi
 880:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 752              		.loc 1 880 0
 753 009a 4CF25030 		movw	r0, #50000
 754 009e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 755              	.LVL97:
 756 00a2 0346     		mov	r3, r0
 757              	.LVL98:
 758              	.L49:
 885:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 759              		.loc 1 885 0
 760 00a4 0449     		ldr	r1, .L51+4
 761 00a6 0A69     		ldr	r2, [r1, #16]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 44


 762 00a8 22F01002 		bic	r2, r2, #16
 763 00ac 0A61     		str	r2, [r1, #16]
 764              	.LVL99:
 765              	.L45:
 889:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 766              		.loc 1 889 0
 767 00ae 1846     		mov	r0, r3
 768 00b0 F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 769              	.LVL100:
 770              	.L52:
 771 00b2 00BF     		.align	2
 772              	.L51:
 773 00b4 00000000 		.word	pFlash
 774 00b8 00200240 		.word	1073881088
 775 00bc 00F8FF1F 		.word	536868864
 776              		.cfi_endproc
 777              	.LFE72:
 779              		.section	.text.HAL_FLASHEx_OBProgram,"ax",%progbits
 780              		.align	2
 781              		.global	HAL_FLASHEx_OBProgram
 782              		.thumb
 783              		.thumb_func
 785              	HAL_FLASHEx_OBProgram:
 786              	.LFB67:
 464:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 787              		.loc 1 464 0
 788              		.cfi_startproc
 789              		@ args = 0, pretend = 0, frame = 0
 790              		@ frame_needed = 0, uses_anonymous_args = 0
 791              	.LVL101:
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 792              		.loc 1 468 0
 793 0000 274B     		ldr	r3, .L65
 794 0002 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 795 0004 012B     		cmp	r3, #1
 796 0006 48D0     		beq	.L61
 464:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 797              		.loc 1 464 0 discriminator 2
 798 0008 10B5     		push	{r4, lr}
 799              	.LCFI6:
 800              		.cfi_def_cfa_offset 8
 801              		.cfi_offset 4, -8
 802              		.cfi_offset 14, -4
 803 000a 0446     		mov	r4, r0
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 804              		.loc 1 468 0 discriminator 2
 805 000c 0122     		movs	r2, #1
 806 000e 244B     		ldr	r3, .L65
 807 0010 1A76     		strb	r2, [r3, #24]
 474:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 808              		.loc 1 474 0 discriminator 2
 809 0012 0368     		ldr	r3, [r0]
 810 0014 13F0010F 		tst	r3, #1
 811 0018 11D0     		beq	.L62
 477:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 812              		.loc 1 477 0
 813 001a 4368     		ldr	r3, [r0, #4]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 45


 814 001c 9342     		cmp	r3, r2
 815 001e 04D1     		bne	.L56
 480:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 816              		.loc 1 480 0
 817 0020 8068     		ldr	r0, [r0, #8]
 818              	.LVL102:
 819 0022 FFF7FEFF 		bl	FLASH_OB_EnableWRP
 820              	.LVL103:
 821 0026 0346     		mov	r3, r0
 822              	.LVL104:
 823 0028 03E0     		b	.L57
 824              	.LVL105:
 825              	.L56:
 485:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 826              		.loc 1 485 0
 827 002a 8068     		ldr	r0, [r0, #8]
 828              	.LVL106:
 829 002c FFF7FEFF 		bl	FLASH_OB_DisableWRP
 830              	.LVL107:
 831 0030 0346     		mov	r3, r0
 832              	.LVL108:
 833              	.L57:
 487:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 834              		.loc 1 487 0
 835 0032 2BB1     		cbz	r3, .L55
 490:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 836              		.loc 1 490 0
 837 0034 0021     		movs	r1, #0
 838 0036 1A4A     		ldr	r2, .L65
 839 0038 1176     		strb	r1, [r2, #24]
 491:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 840              		.loc 1 491 0
 841 003a 1846     		mov	r0, r3
 842 003c 10BD     		pop	{r4, pc}
 843              	.LVL109:
 844              	.L62:
 465:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 845              		.loc 1 465 0
 846 003e 0123     		movs	r3, #1
 847              	.LVL110:
 848              	.L55:
 496:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 849              		.loc 1 496 0
 850 0040 2268     		ldr	r2, [r4]
 851 0042 12F0020F 		tst	r2, #2
 852 0046 08D0     		beq	.L58
 498:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 853              		.loc 1 498 0
 854 0048 207C     		ldrb	r0, [r4, #16]	@ zero_extendqisi2
 855 004a FFF7FEFF 		bl	FLASH_OB_RDP_LevelConfig
 856              	.LVL111:
 499:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 857              		.loc 1 499 0
 858 004e 0346     		mov	r3, r0
 859 0050 18B1     		cbz	r0, .L58
 502:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 860              		.loc 1 502 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 46


 861 0052 0021     		movs	r1, #0
 862 0054 124A     		ldr	r2, .L65
 863 0056 1176     		strb	r1, [r2, #24]
 503:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 864              		.loc 1 503 0
 865 0058 10BD     		pop	{r4, pc}
 866              	.LVL112:
 867              	.L58:
 508:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 868              		.loc 1 508 0
 869 005a 2268     		ldr	r2, [r4]
 870 005c 12F0040F 		tst	r2, #4
 871 0060 08D0     		beq	.L59
 510:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 872              		.loc 1 510 0
 873 0062 607C     		ldrb	r0, [r4, #17]	@ zero_extendqisi2
 874 0064 FFF7FEFF 		bl	FLASH_OB_UserConfig
 875              	.LVL113:
 511:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 876              		.loc 1 511 0
 877 0068 0346     		mov	r3, r0
 878 006a 18B1     		cbz	r0, .L59
 514:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 879              		.loc 1 514 0
 880 006c 0021     		movs	r1, #0
 881 006e 0C4A     		ldr	r2, .L65
 882 0070 1176     		strb	r1, [r2, #24]
 515:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 883              		.loc 1 515 0
 884 0072 10BD     		pop	{r4, pc}
 885              	.LVL114:
 886              	.L59:
 520:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 887              		.loc 1 520 0
 888 0074 2268     		ldr	r2, [r4]
 889 0076 12F0080F 		tst	r2, #8
 890 007a 09D0     		beq	.L60
 522:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     if (status != HAL_OK)
 891              		.loc 1 522 0
 892 007c 217E     		ldrb	r1, [r4, #24]	@ zero_extendqisi2
 893 007e 6069     		ldr	r0, [r4, #20]
 894 0080 FFF7FEFF 		bl	FLASH_OB_ProgramData
 895              	.LVL115:
 523:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     {
 896              		.loc 1 523 0
 897 0084 0346     		mov	r3, r0
 898 0086 18B1     		cbz	r0, .L60
 526:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       return status;
 899              		.loc 1 526 0
 900 0088 0021     		movs	r1, #0
 901 008a 054A     		ldr	r2, .L65
 902 008c 1176     		strb	r1, [r2, #24]
 527:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     }
 903              		.loc 1 527 0
 904 008e 10BD     		pop	{r4, pc}
 905              	.LVL116:
 906              	.L60:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 47


 532:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 907              		.loc 1 532 0
 908 0090 0021     		movs	r1, #0
 909 0092 034A     		ldr	r2, .L65
 910 0094 1176     		strb	r1, [r2, #24]
 534:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 911              		.loc 1 534 0
 912 0096 1846     		mov	r0, r3
 913 0098 10BD     		pop	{r4, pc}
 914              	.LVL117:
 915              	.L61:
 916              	.LCFI7:
 917              		.cfi_def_cfa_offset 0
 918              		.cfi_restore 4
 919              		.cfi_restore 14
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 920              		.loc 1 468 0
 921 009a 0220     		movs	r0, #2
 922              	.LVL118:
 923 009c 7047     		bx	lr
 924              	.L66:
 925 009e 00BF     		.align	2
 926              	.L65:
 927 00a0 00000000 		.word	pFlash
 928              		.cfi_endproc
 929              	.LFE67:
 931              		.section	.text.HAL_FLASHEx_OBGetConfig,"ax",%progbits
 932              		.align	2
 933              		.global	HAL_FLASHEx_OBGetConfig
 934              		.thumb
 935              		.thumb_func
 937              	HAL_FLASHEx_OBGetConfig:
 938              	.LFB68:
 545:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pOBInit->OptionType = OPTIONBYTE_WRP | OPTIONBYTE_RDP | OPTIONBYTE_USER;
 939              		.loc 1 545 0
 940              		.cfi_startproc
 941              		@ args = 0, pretend = 0, frame = 0
 942              		@ frame_needed = 0, uses_anonymous_args = 0
 943              	.LVL119:
 944 0000 10B5     		push	{r4, lr}
 945              	.LCFI8:
 946              		.cfi_def_cfa_offset 8
 947              		.cfi_offset 4, -8
 948              		.cfi_offset 14, -4
 949 0002 0446     		mov	r4, r0
 546:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 950              		.loc 1 546 0
 951 0004 0723     		movs	r3, #7
 952 0006 0360     		str	r3, [r0]
 549:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 953              		.loc 1 549 0
 954 0008 FFF7FEFF 		bl	FLASH_OB_GetWRP
 955              	.LVL120:
 956 000c A060     		str	r0, [r4, #8]
 552:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 957              		.loc 1 552 0
 958 000e FFF7FEFF 		bl	FLASH_OB_GetRDP
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 48


 959              	.LVL121:
 960 0012 2074     		strb	r0, [r4, #16]
 555:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 961              		.loc 1 555 0
 962 0014 FFF7FEFF 		bl	FLASH_OB_GetUser
 963              	.LVL122:
 964 0018 6074     		strb	r0, [r4, #17]
 965 001a 10BD     		pop	{r4, pc}
 966              		.cfi_endproc
 967              	.LFE68:
 969              		.section	.text.HAL_FLASHEx_OBGetUserData,"ax",%progbits
 970              		.align	2
 971              		.global	HAL_FLASHEx_OBGetUserData
 972              		.thumb
 973              		.thumb_func
 975              	HAL_FLASHEx_OBGetUserData:
 976              	.LFB69:
 567:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t value = 0;
 977              		.loc 1 567 0
 978              		.cfi_startproc
 979              		@ args = 0, pretend = 0, frame = 0
 980              		@ frame_needed = 0, uses_anonymous_args = 0
 981              		@ link register save eliminated.
 982              	.LVL123:
 570:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 983              		.loc 1 570 0
 984 0000 0E4B     		ldr	r3, .L72
 985 0002 9842     		cmp	r0, r3
 986 0004 0CD1     		bne	.L70
 573:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 987              		.loc 1 573 0
 988 0006 0E4B     		ldr	r3, .L72+4
 989 0008 D869     		ldr	r0, [r3, #28]
 990              	.LVL124:
 991 000a 00F47F33 		and	r3, r0, #261120
 992              	.LVL125:
 993              	.LBB10:
 994              	.LBB11:
 995              		.loc 2 531 0
 996 000e 4FF47F30 		mov	r0, #261120
 997              		.syntax unified
 998              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 999 0012 90FAA0F0 		rbit r0, r0
 1000              	@ 0 "" 2
 1001              	.LVL126:
 1002              		.thumb
 1003              		.syntax unified
 1004              	.LBE11:
 1005              	.LBE10:
 573:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1006              		.loc 1 573 0
 1007 0016 B0FA80F0 		clz	r0, r0
 1008 001a 23FA00F0 		lsr	r0, r3, r0
 1009              	.LVL127:
 1010 001e 7047     		bx	lr
 1011              	.LVL128:
 1012              	.L70:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 49


 578:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1013              		.loc 1 578 0
 1014 0020 074B     		ldr	r3, .L72+4
 1015 0022 D869     		ldr	r0, [r3, #28]
 1016              	.LVL129:
 1017 0024 00F07F73 		and	r3, r0, #66846720
 1018              	.LVL130:
 1019              	.LBB12:
 1020              	.LBB13:
 1021              		.loc 2 531 0
 1022 0028 4FF07F70 		mov	r0, #66846720
 1023              		.syntax unified
 1024              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1025 002c 90FAA0F0 		rbit r0, r0
 1026              	@ 0 "" 2
 1027              	.LVL131:
 1028              		.thumb
 1029              		.syntax unified
 1030              	.LBE13:
 1031              	.LBE12:
 578:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1032              		.loc 1 578 0
 1033 0030 B0FA80F0 		clz	r0, r0
 1034 0034 23FA00F0 		lsr	r0, r3, r0
 1035              	.LVL132:
 582:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1036              		.loc 1 582 0
 1037 0038 7047     		bx	lr
 1038              	.L73:
 1039 003a 00BF     		.align	2
 1040              	.L72:
 1041 003c 04F8FF1F 		.word	536868868
 1042 0040 00200240 		.word	1073881088
 1043              		.cfi_endproc
 1044              	.LFE69:
 1046              		.section	.text.FLASH_PageErase,"ax",%progbits
 1047              		.align	2
 1048              		.global	FLASH_PageErase
 1049              		.thumb
 1050              		.thumb_func
 1052              	FLASH_PageErase:
 1053              	.LFB79:
1078:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1079:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1080:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
1081:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1082:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1083:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1084:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @}
1085:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1086:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1087:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup FLASH
1088:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @{
1089:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1090:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1091:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /** @addtogroup FLASH_Private_Functions
1092:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  * @{
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 50


1093:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****  */
1094:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1095:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** /**
1096:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @brief  Erase the specified FLASH memory page
1097:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @param  PageAddress FLASH page to erase
1098:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   *         The value of this parameter depend on device used within the same series      
1099:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * 
1100:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   * @retval None
1101:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   */
1102:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** void FLASH_PageErase(uint32_t PageAddress)
1103:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** {
 1054              		.loc 1 1103 0
 1055              		.cfi_startproc
 1056              		@ args = 0, pretend = 0, frame = 0
 1057              		@ frame_needed = 0, uses_anonymous_args = 0
 1058              		@ link register save eliminated.
 1059              	.LVL133:
1104:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   /* Clean the error context */
1105:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   pFlash.ErrorCode = HAL_FLASH_ERROR_NONE;
 1060              		.loc 1 1105 0
 1061 0000 0022     		movs	r2, #0
 1062 0002 064B     		ldr	r3, .L75
 1063 0004 DA61     		str	r2, [r3, #28]
1106:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
1107:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #if defined(FLASH_BANK2_END)
1108:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   if(PageAddress > FLASH_BANK1_END)
1109:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   { 
1110:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Proceed to erase the page */
1111:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_PER);
1112:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     WRITE_REG(FLASH->AR2, PageAddress);
1113:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR2, FLASH_CR2_STRT);
1114:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
1115:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   else
1116:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
1117:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** #endif /* FLASH_BANK2_END */
1118:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     /* Proceed to erase the page */
1119:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_PER);
 1064              		.loc 1 1119 0
 1065 0006 064B     		ldr	r3, .L75+4
 1066 0008 1A69     		ldr	r2, [r3, #16]
 1067 000a 42F00202 		orr	r2, r2, #2
 1068 000e 1A61     		str	r2, [r3, #16]
1120:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     WRITE_REG(FLASH->AR, PageAddress);
 1069              		.loc 1 1120 0
 1070 0010 5861     		str	r0, [r3, #20]
1121:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     SET_BIT(FLASH->CR, FLASH_CR_STRT);
 1071              		.loc 1 1121 0
 1072 0012 1A69     		ldr	r2, [r3, #16]
 1073 0014 42F04002 		orr	r2, r2, #64
 1074 0018 1A61     		str	r2, [r3, #16]
 1075 001a 7047     		bx	lr
 1076              	.L76:
 1077              		.align	2
 1078              	.L75:
 1079 001c 00000000 		.word	pFlash
 1080 0020 00200240 		.word	1073881088
 1081              		.cfi_endproc
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 51


 1082              	.LFE79:
 1084              		.section	.text.HAL_FLASHEx_Erase,"ax",%progbits
 1085              		.align	2
 1086              		.global	HAL_FLASHEx_Erase
 1087              		.thumb
 1088              		.thumb_func
 1090              	HAL_FLASHEx_Erase:
 1091              	.LFB64:
 177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1092              		.loc 1 177 0
 1093              		.cfi_startproc
 1094              		@ args = 0, pretend = 0, frame = 0
 1095              		@ frame_needed = 0, uses_anonymous_args = 0
 1096              	.LVL134:
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1097              		.loc 1 182 0
 1098 0000 264B     		ldr	r3, .L89
 1099 0002 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1100 0004 012B     		cmp	r3, #1
 1101 0006 47D0     		beq	.L84
 177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_ERROR;
 1102              		.loc 1 177 0 discriminator 2
 1103 0008 70B5     		push	{r4, r5, r6, lr}
 1104              	.LCFI9:
 1105              		.cfi_def_cfa_offset 16
 1106              		.cfi_offset 4, -16
 1107              		.cfi_offset 5, -12
 1108              		.cfi_offset 6, -8
 1109              		.cfi_offset 14, -4
 1110 000a 0E46     		mov	r6, r1
 1111 000c 0546     		mov	r5, r0
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1112              		.loc 1 182 0 discriminator 2
 1113 000e 0122     		movs	r2, #1
 1114 0010 224B     		ldr	r3, .L89
 1115 0012 1A76     		strb	r2, [r3, #24]
 187:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 1116              		.loc 1 187 0 discriminator 2
 1117 0014 0368     		ldr	r3, [r0]
 1118 0016 022B     		cmp	r3, #2
 1119 0018 12D1     		bne	.L79
 233:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 1120              		.loc 1 233 0
 1121 001a 4CF25030 		movw	r0, #50000
 1122              	.LVL135:
 1123 001e FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1124              	.LVL136:
 1125 0022 88BB     		cbnz	r0, .L85
 236:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 1126              		.loc 1 236 0
 1127 0024 0120     		movs	r0, #1
 1128 0026 FFF7FEFF 		bl	FLASH_MassErase
 1129              	.LVL137:
 239:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 1130              		.loc 1 239 0
 1131 002a 4CF25030 		movw	r0, #50000
 1132 002e FFF7FEFF 		bl	FLASH_WaitForLastOperation
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 52


 1133              	.LVL138:
 1134 0032 0246     		mov	r2, r0
 1135              	.LVL139:
 242:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       }
 1136              		.loc 1 242 0
 1137 0034 1A49     		ldr	r1, .L89+4
 1138 0036 0B69     		ldr	r3, [r1, #16]
 1139 0038 23F00403 		bic	r3, r3, #4
 1140 003c 0B61     		str	r3, [r1, #16]
 1141 003e 26E0     		b	.L80
 1142              	.LVL140:
 1143              	.L79:
 290:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****       {
 1144              		.loc 1 290 0
 1145 0040 4CF25030 		movw	r0, #50000
 1146              	.LVL141:
 1147 0044 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1148              	.LVL142:
 1149 0048 00BB     		cbnz	r0, .L86
 293:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         
 1150              		.loc 1 293 0
 1151 004a 4FF0FF33 		mov	r3, #-1
 1152 004e 3360     		str	r3, [r6]
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 1153              		.loc 1 296 0
 1154 0050 AC68     		ldr	r4, [r5, #8]
 1155              	.LVL143:
 178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t address = 0;
 1156              		.loc 1 178 0
 1157 0052 0122     		movs	r2, #1
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 1158              		.loc 1 296 0
 1159 0054 11E0     		b	.L81
 1160              	.LVL144:
 1161              	.L83:
 300:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 1162              		.loc 1 300 0
 1163 0056 2046     		mov	r0, r4
 1164 0058 FFF7FEFF 		bl	FLASH_PageErase
 1165              	.LVL145:
 303:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 1166              		.loc 1 303 0
 1167 005c 4CF25030 		movw	r0, #50000
 1168 0060 FFF7FEFF 		bl	FLASH_WaitForLastOperation
 1169              	.LVL146:
 306:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           
 1170              		.loc 1 306 0
 1171 0064 0E4A     		ldr	r2, .L89+4
 1172 0066 1369     		ldr	r3, [r2, #16]
 1173 0068 23F00203 		bic	r3, r3, #2
 1174 006c 1361     		str	r3, [r2, #16]
 308:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           {
 1175              		.loc 1 308 0
 1176 006e 0246     		mov	r2, r0
 1177 0070 08B1     		cbz	r0, .L82
 311:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             break;
 1178              		.loc 1 311 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 53


 1179 0072 3460     		str	r4, [r6]
 312:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****           }
 1180              		.loc 1 312 0
 1181 0074 0BE0     		b	.L80
 1182              	.L82:
 298:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         {
 1183              		.loc 1 298 0
 1184 0076 04F58064 		add	r4, r4, #1024
 1185              	.LVL147:
 1186              	.L81:
 297:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address += FLASH_PAGE_SIZE)
 1187              		.loc 1 297 0 discriminator 1
 1188 007a E968     		ldr	r1, [r5, #12]
 1189 007c AB68     		ldr	r3, [r5, #8]
 1190 007e 03EB8123 		add	r3, r3, r1, lsl #10
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****             address < ((pEraseInit->NbPages * FLASH_PAGE_SIZE) + pEraseInit->PageAddress);
 1191              		.loc 1 296 0 discriminator 1
 1192 0082 9C42     		cmp	r4, r3
 1193 0084 E7D3     		bcc	.L83
 1194 0086 02E0     		b	.L80
 1195              	.LVL148:
 1196              	.L85:
 178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   uint32_t address = 0;
 1197              		.loc 1 178 0
 1198 0088 0122     		movs	r2, #1
 1199 008a 00E0     		b	.L80
 1200              	.L86:
 1201 008c 0122     		movs	r2, #1
 1202              	.LVL149:
 1203              	.L80:
 320:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1204              		.loc 1 320 0
 1205 008e 0021     		movs	r1, #0
 1206 0090 024B     		ldr	r3, .L89
 1207 0092 1976     		strb	r1, [r3, #24]
 322:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 1208              		.loc 1 322 0
 1209 0094 1046     		mov	r0, r2
 1210 0096 70BD     		pop	{r4, r5, r6, pc}
 1211              	.LVL150:
 1212              	.L84:
 1213              	.LCFI10:
 1214              		.cfi_def_cfa_offset 0
 1215              		.cfi_restore 4
 1216              		.cfi_restore 5
 1217              		.cfi_restore 6
 1218              		.cfi_restore 14
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1219              		.loc 1 182 0
 1220 0098 0220     		movs	r0, #2
 1221              	.LVL151:
 1222 009a 7047     		bx	lr
 1223              	.L90:
 1224              		.align	2
 1225              	.L89:
 1226 009c 00000000 		.word	pFlash
 1227 00a0 00200240 		.word	1073881088
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 54


 1228              		.cfi_endproc
 1229              	.LFE64:
 1231              		.section	.text.HAL_FLASHEx_Erase_IT,"ax",%progbits
 1232              		.align	2
 1233              		.global	HAL_FLASHEx_Erase_IT
 1234              		.thumb
 1235              		.thumb_func
 1237              	HAL_FLASHEx_Erase_IT:
 1238              	.LFB65:
 337:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   HAL_StatusTypeDef status = HAL_OK;
 1239              		.loc 1 337 0
 1240              		.cfi_startproc
 1241              		@ args = 0, pretend = 0, frame = 0
 1242              		@ frame_needed = 0, uses_anonymous_args = 0
 1243              	.LVL152:
 1244 0000 08B5     		push	{r3, lr}
 1245              	.LCFI11:
 1246              		.cfi_def_cfa_offset 8
 1247              		.cfi_offset 3, -8
 1248              		.cfi_offset 14, -4
 1249              	.LVL153:
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1250              		.loc 1 341 0
 1251 0002 154B     		ldr	r3, .L97
 1252 0004 1B7E     		ldrb	r3, [r3, #24]	@ zero_extendqisi2
 1253 0006 012B     		cmp	r3, #1
 1254 0008 22D0     		beq	.L94
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1255              		.loc 1 341 0 is_stmt 0 discriminator 2
 1256 000a 134B     		ldr	r3, .L97
 1257 000c 0122     		movs	r2, #1
 1258 000e 1A76     		strb	r2, [r3, #24]
 344:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 1259              		.loc 1 344 0 is_stmt 1 discriminator 2
 1260 0010 1B78     		ldrb	r3, [r3]	@ zero_extendqisi2
 1261 0012 13F0FF0F 		tst	r3, #255
 1262 0016 1DD1     		bne	.L95
 353:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1263              		.loc 1 353 0
 1264 0018 104A     		ldr	r2, .L97+4
 1265 001a 1369     		ldr	r3, [r2, #16]
 1266 001c 43F4A053 		orr	r3, r3, #5120
 1267 0020 1361     		str	r3, [r2, #16]
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   {
 1268              		.loc 1 360 0
 1269 0022 0368     		ldr	r3, [r0]
 1270 0024 022B     		cmp	r3, #2
 1271 0026 07D1     		bne	.L93
 363:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****         FLASH_MassErase(pEraseInit->Banks);
 1272              		.loc 1 363 0
 1273 0028 0222     		movs	r2, #2
 1274 002a 0B4B     		ldr	r3, .L97
 1275 002c 1A70     		strb	r2, [r3]
 364:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1276              		.loc 1 364 0
 1277 002e 4068     		ldr	r0, [r0, #4]
 1278              	.LVL154:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 55


 1279 0030 FFF7FEFF 		bl	FLASH_MassErase
 1280              	.LVL155:
 382:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 1281              		.loc 1 382 0
 1282 0034 0020     		movs	r0, #0
 1283 0036 08BD     		pop	{r3, pc}
 1284              	.LVL156:
 1285              	.L93:
 374:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.DataRemaining = pEraseInit->NbPages;
 1286              		.loc 1 374 0
 1287 0038 074B     		ldr	r3, .L97
 1288 003a 0122     		movs	r2, #1
 1289 003c 1A70     		strb	r2, [r3]
 375:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****     pFlash.Address = pEraseInit->PageAddress;
 1290              		.loc 1 375 0
 1291 003e C268     		ldr	r2, [r0, #12]
 1292 0040 5A60     		str	r2, [r3, #4]
 376:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1293              		.loc 1 376 0
 1294 0042 8268     		ldr	r2, [r0, #8]
 1295 0044 9A60     		str	r2, [r3, #8]
 379:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1296              		.loc 1 379 0
 1297 0046 8068     		ldr	r0, [r0, #8]
 1298              	.LVL157:
 1299 0048 FFF7FEFF 		bl	FLASH_PageErase
 1300              	.LVL158:
 382:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** }
 1301              		.loc 1 382 0
 1302 004c 0020     		movs	r0, #0
 1303 004e 08BD     		pop	{r3, pc}
 1304              	.LVL159:
 1305              	.L94:
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1306              		.loc 1 341 0
 1307 0050 0220     		movs	r0, #2
 1308              	.LVL160:
 1309 0052 08BD     		pop	{r3, pc}
 1310              	.LVL161:
 1311              	.L95:
 346:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c ****   }
 1312              		.loc 1 346 0
 1313 0054 0120     		movs	r0, #1
 1314              	.LVL162:
 383:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_flash_ex.c **** 
 1315              		.loc 1 383 0
 1316 0056 08BD     		pop	{r3, pc}
 1317              	.L98:
 1318              		.align	2
 1319              	.L97:
 1320 0058 00000000 		.word	pFlash
 1321 005c 00200240 		.word	1073881088
 1322              		.cfi_endproc
 1323              	.LFE65:
 1325              		.text
 1326              	.Letext0:
 1327              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 56


 1328              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
 1329              		.file 5 "./Drivers_V1.0.4/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1330              		.file 6 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1331              		.file 7 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash.h"
 1332              		.file 8 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_flash_ex.h"
 1333              		.file 9 "./Drivers_V1.0.4/CMSIS/Include/core_cm3.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s 			page 57


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_flash_ex.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:20     .text.FLASH_MassErase:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:24     .text.FLASH_MassErase:0000000000000000 FLASH_MassErase
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:50     .text.FLASH_MassErase:000000000000001c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:56     .text.FLASH_OB_GetWRP:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:60     .text.FLASH_OB_GetWRP:0000000000000000 FLASH_OB_GetWRP
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:75     .text.FLASH_OB_GetWRP:0000000000000008 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:80     .text.FLASH_OB_GetRDP:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:84     .text.FLASH_OB_GetRDP:0000000000000000 FLASH_OB_GetRDP
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:111    .text.FLASH_OB_GetRDP:0000000000000014 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:116    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:120    .text.FLASH_OB_RDP_LevelConfig:0000000000000000 FLASH_OB_RDP_LevelConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:197    .text.FLASH_OB_RDP_LevelConfig:0000000000000060 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:204    .text.FLASH_OB_UserConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:208    .text.FLASH_OB_UserConfig:0000000000000000 FLASH_OB_UserConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:265    .text.FLASH_OB_UserConfig:0000000000000040 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:272    .text.FLASH_OB_ProgramData:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:276    .text.FLASH_OB_ProgramData:0000000000000000 FLASH_OB_ProgramData
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:333    .text.FLASH_OB_ProgramData:000000000000003c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:339    .text.FLASH_OB_GetUser:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:343    .text.FLASH_OB_GetUser:0000000000000000 FLASH_OB_GetUser
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:378    .text.FLASH_OB_GetUser:000000000000001c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:383    .text.HAL_FLASHEx_OBErase:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:388    .text.HAL_FLASHEx_OBErase:0000000000000000 HAL_FLASHEx_OBErase
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:454    .text.HAL_FLASHEx_OBErase:000000000000004c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:460    .text.FLASH_OB_EnableWRP:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:464    .text.FLASH_OB_EnableWRP:0000000000000000 FLASH_OB_EnableWRP
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:611    .text.FLASH_OB_EnableWRP:00000000000000ac $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:618    .text.FLASH_OB_DisableWRP:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:622    .text.FLASH_OB_DisableWRP:0000000000000000 FLASH_OB_DisableWRP
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:773    .text.FLASH_OB_DisableWRP:00000000000000b4 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:780    .text.HAL_FLASHEx_OBProgram:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:785    .text.HAL_FLASHEx_OBProgram:0000000000000000 HAL_FLASHEx_OBProgram
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:927    .text.HAL_FLASHEx_OBProgram:00000000000000a0 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:932    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:937    .text.HAL_FLASHEx_OBGetConfig:0000000000000000 HAL_FLASHEx_OBGetConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:970    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:975    .text.HAL_FLASHEx_OBGetUserData:0000000000000000 HAL_FLASHEx_OBGetUserData
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1041   .text.HAL_FLASHEx_OBGetUserData:000000000000003c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1047   .text.FLASH_PageErase:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1052   .text.FLASH_PageErase:0000000000000000 FLASH_PageErase
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1079   .text.FLASH_PageErase:000000000000001c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1085   .text.HAL_FLASHEx_Erase:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1090   .text.HAL_FLASHEx_Erase:0000000000000000 HAL_FLASHEx_Erase
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1226   .text.HAL_FLASHEx_Erase:000000000000009c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1232   .text.HAL_FLASHEx_Erase_IT:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1237   .text.HAL_FLASHEx_Erase_IT:0000000000000000 HAL_FLASHEx_Erase_IT
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccmR8q9b.s:1320   .text.HAL_FLASHEx_Erase_IT:0000000000000058 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
pFlash
FLASH_WaitForLastOperation
