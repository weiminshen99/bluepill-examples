ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  20              		.align	2
  21              		.global	HAL_RCC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	HAL_RCC_DeInit:
  26              	.LFB64:
  27              		.file 1 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @version V1.0.4
   6:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @date    29-April-2016
   7:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *       
  13:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim                
  14:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  17:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  18:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 2


  32:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  33:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
  34:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  35:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  37:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  38:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  41:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  44:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  45:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  46:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  49:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  50:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  51:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  52:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  53:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  55:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  65:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  66:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  77:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  78:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** */
  79:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  80:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  82:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  83:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  84:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  88:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 3


  89:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  90:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  91:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  94:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  98:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  99:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Bits position in  in the CFGR register */
 100:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_HPRE_BITNUMBER           POSITION_VAL(RCC_CFGR_HPRE)
 101:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE1_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE1)
 102:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define RCC_CFGR_PPRE2_BITNUMBER          POSITION_VAL(RCC_CFGR_PPRE2)
 103:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 104:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 105:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 106:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 107:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 108:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 109:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 110:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 111:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 112:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 113:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 114:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 116:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 117:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 118:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 119:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 120:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 121:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 122:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 123:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 124:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 125:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 126:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 127:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 128:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions ---------------------------------------------------------*/
 129:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 130:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 131:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 132:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 133:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 134:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 135:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 136:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 137:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim    
 138:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 139:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 140:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 141:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 142:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 143:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 144:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 145:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 4


 146:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 147:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
 148:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 149:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 150:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 151:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 152:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 153:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 154:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 155:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 156:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 157:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 158:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 159:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 160:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 161:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 162:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 163:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 164:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 165:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 166:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 167:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 168:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 169:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 170:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 171:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 172:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 173:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 174:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 175:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 176:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 179:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 180:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 181:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128. 
 183:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 184:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 185:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 186:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 187:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 188:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 189:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 190:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 191:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 192:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 193:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 194:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 195:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 196:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 197:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 198:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 199:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 201:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 202:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 5


 203:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 204:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
 205:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 206:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 207:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 208:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 209:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 210:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 211:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 212:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE and PLL OFF
 213:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 214:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 215:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 216:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 217:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 218:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 219:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 220:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 221:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 222:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  28              		.loc 1 222 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 10B4     		push	{r4}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 4
  36              		.cfi_offset 4, -4
 223:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
 224:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
  37              		.loc 1 224 0
  38 0002 124B     		ldr	r3, .L3
  39 0004 5A68     		ldr	r2, [r3, #4]
  40 0006 22F00302 		bic	r2, r2, #3
  41 000a 5A60     		str	r2, [r3, #4]
 225:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 226:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON, CSSON, & PLLON bits */
 227:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON);
  42              		.loc 1 227 0
  43 000c 1A68     		ldr	r2, [r3]
  44 000e 22F08472 		bic	r2, r2, #17301504
  45 0012 22F48032 		bic	r2, r2, #65536
  46 0016 1A60     		str	r2, [r3]
 228:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 229:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
  47              		.loc 1 230 0
  48 0018 1A68     		ldr	r2, [r3]
  49 001a 22F48022 		bic	r2, r2, #262144
  50 001e 1A60     		str	r2, [r3]
 231:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 232:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 233:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  51              		.loc 1 233 0
  52 0020 0024     		movs	r4, #0
  53 0022 5C60     		str	r4, [r3, #4]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 6


 234:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 235:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 236:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, ((uint32_t)0x10 << POSITION_VAL(RCC_CR_HSITRIM)));
  54              		.loc 1 236 0
  55 0024 1A68     		ldr	r2, [r3]
  56 0026 22F0F800 		bic	r0, r2, #248
  57              	.LVL0:
  58              	.LBB135:
  59              	.LBB136:
  60              		.file 2 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h"
   1:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
   9:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    *
  21:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  34:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  35:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  38:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
  45:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  46:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  47:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 7


  48:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
  51:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  52:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  53:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  54:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
  56:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  58:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  60:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  62:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  63:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  64:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  65:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  69:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  71:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  73:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  74:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  75:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  76:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  80:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  82:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  84:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  87:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  88:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  89:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
  90:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
  94:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
  96:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
  98:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
  99:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 100:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 101:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 8


 105:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 107:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 109:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 112:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 113:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 114:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 115:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 119:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 121:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 123:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 126:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 127:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 128:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 129:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 132:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 134:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 136:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 138:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 141:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 142:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 143:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 144:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 148:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 150:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 152:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 155:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 156:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 157:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 158:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 9


 162:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 164:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 166:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 167:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 168:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 169:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
 170:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 173:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 175:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 177:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 180:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 181:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 182:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 183:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 186:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 188:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 190:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 192:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 193:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 194:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 195:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 199:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 201:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 203:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 206:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 207:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 208:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 209:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 213:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 215:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 217:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 218:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 10


 219:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 221:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 222:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 226:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
 227:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 228:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 230:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 231:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 232:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 233:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 237:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 239:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 241:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 242:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 243:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 244:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 248:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 250:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 252:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 255:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 256:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 257:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 258:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 262:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 264:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 266:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 267:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 268:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 269:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 274:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 11


 276:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 278:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 279:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 280:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 281:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
 284:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 285:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 287:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 289:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 292:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 293:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 294:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 295:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 299:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 301:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 303:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 304:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 306:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 307:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 309:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 310:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 314:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 316:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 319:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 325:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 327:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 328:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 329:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 330:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 331:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 12


 333:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 335:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 337:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
 341:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 343:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 344:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 345:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 347:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 348:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 349:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 351:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 352:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   @{
 356:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** */
 357:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 358:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 365:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 368:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 369:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 370:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 373:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 375:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 376:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 377:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 378:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 379:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 380:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Interrupt
 381:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Interrupt is a hint instruction that suspends execution until one of a number o
 382:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 383:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFI(void)
 384:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 385:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfi");
 386:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 387:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 388:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 389:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 13


 390:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Wait For Event
 391:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Wait For Event is a hint instruction that permits the processor to enter
 392:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****     a low-power state until one of a number of events occurs.
 393:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 394:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __WFE(void)
 395:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 396:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("wfe");
 397:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 398:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 399:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 400:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 401:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Send Event
 402:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Send Event is a hint instruction. It causes an event to be signaled to the CPU.
 403:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 404:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __SEV(void)
 405:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 406:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("sev");
 407:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 408:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 409:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 410:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 411:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Instruction Synchronization Barrier
 412:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Instruction Synchronization Barrier flushes the pipeline in the processor,
 413:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            so that all instructions following the ISB are fetched from cache or memory,
 414:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            after the instruction has been completed.
 415:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 416:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __ISB(void)
 417:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 418:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("isb 0xF":::"memory");
 419:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 420:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 421:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 422:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 423:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Synchronization Barrier
 424:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Acts as a special kind of Data Memory Barrier.
 425:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            It completes when all explicit memory accesses before this instruction complete.
 426:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 427:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DSB(void)
 428:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 429:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dsb 0xF":::"memory");
 430:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 431:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 432:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 433:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 434:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Data Memory Barrier
 435:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Ensures the apparent order of the explicit memory operations before
 436:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            and after the instruction, without ensuring their completion.
 437:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 438:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __DMB(void)
 439:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 440:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("dmb 0xF":::"memory");
 441:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 442:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 443:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 444:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 445:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (32 bit)
 446:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in integer value.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 14


 447:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 448:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 449:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 450:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV(uint32_t value)
 451:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 452:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 5)
 453:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return __builtin_bswap32(value);
 454:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 455:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 456:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 457:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 458:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 459:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 460:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 461:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 462:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 463:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 464:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order (16 bit)
 465:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in two unsigned short values.
 466:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 467:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 468:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 469:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __REV16(uint32_t value)
 470:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 471:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 472:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 473:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("rev16 %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 474:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 475:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 476:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 477:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 478:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 479:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse byte order in signed short value
 480:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the byte order in a signed short value with sign extension to integer.
 481:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 482:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 483:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 484:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE int32_t __REVSH(int32_t value)
 485:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 486:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if (__GNUC__ > 4) || (__GNUC__ == 4 && __GNUC_MINOR__ >= 8)
 487:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return (short)__builtin_bswap16(value);
 488:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #else
 489:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   int32_t result;
 490:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 491:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("revsh %0, %1" : __CMSIS_GCC_OUT_REG (result) : __CMSIS_GCC_USE_REG (value) );
 492:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return(result);
 493:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #endif
 494:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 495:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 496:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 497:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 498:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Rotate Right in unsigned value (32 bit)
 499:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Rotate Right (immediate) provides the value of the contents of a register rotated by a v
 500:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to rotate
 501:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Number of Bits to rotate
 502:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Rotated value
 503:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 15


 504:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __ROR(uint32_t op1, uint32_t op2)
 505:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 506:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   return (op1 >> op2) | (op1 << (32U - op2));
 507:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** }
 508:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 509:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 510:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 511:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Breakpoint
 512:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Causes the processor to enter Debug state.
 513:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****            Debug tools can use this to investigate system state when the instruction at a particula
 514:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  is ignored by the processor.
 515:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****                  If required, a debugger can use it to store additional information about the break
 516:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 517:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #define __BKPT(value)                       __ASM volatile ("bkpt "#value)
 518:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 519:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 520:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** /**
 521:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \brief   Reverse bit order of value
 522:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \details Reverses the bit order of the given value.
 523:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \param [in]    value  Value to reverse
 524:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   \return               Reversed value
 525:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****  */
 526:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE uint32_t __RBIT(uint32_t value)
 527:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** {
 528:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 529:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** 
 530:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U) || (__CORTEX_SC >= 300U)
 531:./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h ****    __ASM volatile ("rbit %0, %1" : "=r" (result) : "r" (value) );
  61              		.loc 2 531 0
  62 002a F822     		movs	r2, #248
  63              		.syntax unified
  64              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
  65 002c 92FAA2F2 		rbit r2, r2
  66              	@ 0 "" 2
  67              	.LVL1:
  68              		.thumb
  69              		.syntax unified
  70              	.LBE136:
  71              	.LBE135:
  72              		.loc 1 236 0
  73 0030 B2FA82F2 		clz	r2, r2
  74 0034 1021     		movs	r1, #16
  75 0036 01FA02F2 		lsl	r2, r1, r2
  76 003a 0243     		orrs	r2, r2, r0
  77 003c 1A60     		str	r2, [r3]
 237:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 238:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if (defined(STM32F105xC) || defined(STM32F107xC) || defined (STM32F100xB) || defined (STM32F100xE)
 239:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 240:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 241:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 242:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* STM32F105xC || STM32F107xC || STM32F100xB || STM32F100xE */
 243:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 244:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  78              		.loc 1 244 0
  79 003e 9C60     		str	r4, [r3, #8]
 245:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 246:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 16


 247:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  80              		.loc 1 247 0
  81 0040 034A     		ldr	r2, .L3+4
  82 0042 044B     		ldr	r3, .L3+8
  83 0044 1A60     		str	r2, [r3]
 248:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
  84              		.loc 1 248 0
  85 0046 10BC     		pop	{r4}
  86              	.LCFI1:
  87              		.cfi_restore 4
  88              		.cfi_def_cfa_offset 0
  89 0048 7047     		bx	lr
  90              	.L4:
  91 004a 00BF     		.align	2
  92              	.L3:
  93 004c 00100240 		.word	1073876992
  94 0050 00127A00 		.word	8000000
  95 0054 00000000 		.word	SystemCoreClock
  96              		.cfi_endproc
  97              	.LFE64:
  99              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
 100              		.align	2
 101              		.global	HAL_RCC_OscConfig
 102              		.thumb
 103              		.thumb_func
 105              	HAL_RCC_OscConfig:
 106              	.LFB65:
 249:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 250:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 251:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 252:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 253:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 254:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 255:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 256:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 257:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 258:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 259:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 260:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 261:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 262:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 263:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 264:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 265:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 266:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 107              		.loc 1 266 0
 108              		.cfi_startproc
 109              		@ args = 0, pretend = 0, frame = 8
 110              		@ frame_needed = 0, uses_anonymous_args = 0
 111              	.LVL2:
 112 0000 30B5     		push	{r4, r5, lr}
 113              	.LCFI2:
 114              		.cfi_def_cfa_offset 12
 115              		.cfi_offset 4, -12
 116              		.cfi_offset 5, -8
 117              		.cfi_offset 14, -4
 118 0002 83B0     		sub	sp, sp, #12
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 17


 119              	.LCFI3:
 120              		.cfi_def_cfa_offset 24
 121 0004 0446     		mov	r4, r0
 122              	.LVL3:
 267:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0;
 268:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 269:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 270:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 271:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 272:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 273:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 274:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
 123              		.loc 1 274 0
 124 0006 0368     		ldr	r3, [r0]
 125 0008 13F0010F 		tst	r3, #1
 126 000c 00F09680 		beq	.L6
 275:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 276:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 277:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 278:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 279:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 280:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 127              		.loc 1 280 0
 128 0010 B24B     		ldr	r3, .L93
 129 0012 5B68     		ldr	r3, [r3, #4]
 130 0014 03F00C03 		and	r3, r3, #12
 131 0018 042B     		cmp	r3, #4
 132 001a 0AD0     		beq	.L7
 281:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 133              		.loc 1 281 0
 134 001c AF4B     		ldr	r3, .L93
 135 001e 5B68     		ldr	r3, [r3, #4]
 136 0020 03F00C03 		and	r3, r3, #12
 137 0024 082B     		cmp	r3, #8
 138 0026 1BD1     		bne	.L8
 139              		.loc 1 281 0 is_stmt 0 discriminator 1
 140 0028 AC4B     		ldr	r3, .L93
 141 002a 5B68     		ldr	r3, [r3, #4]
 142 002c 13F4803F 		tst	r3, #65536
 143 0030 16D0     		beq	.L8
 144              	.L7:
 145              	.LVL4:
 146              	.LBB137:
 147              	.LBB138:
 148              		.loc 2 531 0 is_stmt 1
 149 0032 4FF40033 		mov	r3, #131072
 150              		.syntax unified
 151              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 152 0036 93FAA3F3 		rbit r3, r3
 153              	@ 0 "" 2
 154              	.LVL5:
 155              		.thumb
 156              		.syntax unified
 157              	.LBE138:
 158              	.LBE137:
 282:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 283:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 18


 159              		.loc 1 283 0
 160 003a A84B     		ldr	r3, .L93
 161 003c 1A68     		ldr	r2, [r3]
 162              	.LVL6:
 163              	.LBB139:
 164              	.LBB140:
 165              		.loc 2 531 0
 166 003e 4FF40033 		mov	r3, #131072
 167              		.syntax unified
 168              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 169 0042 93FAA3F3 		rbit r3, r3
 170              	@ 0 "" 2
 171              	.LVL7:
 172              		.thumb
 173              		.syntax unified
 174              	.LBE140:
 175              	.LBE139:
 176              		.loc 1 283 0
 177 0046 B3FA83F3 		clz	r3, r3
 178 004a 03F01F03 		and	r3, r3, #31
 179 004e 22FA03F3 		lsr	r3, r2, r3
 180 0052 13F0010F 		tst	r3, #1
 181 0056 71D0     		beq	.L6
 182              		.loc 1 283 0 is_stmt 0 discriminator 9
 183 0058 6368     		ldr	r3, [r4, #4]
 184 005a 002B     		cmp	r3, #0
 185 005c 6ED1     		bne	.L6
 186 005e A0E2     		b	.L76
 187              	.L8:
 284:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 285:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 286:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 287:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 288:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 289:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 290:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 291:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 188              		.loc 1 291 0 is_stmt 1
 189 0060 6368     		ldr	r3, [r4, #4]
 190 0062 B3F5803F 		cmp	r3, #65536
 191 0066 05D1     		bne	.L12
 192              		.loc 1 291 0 is_stmt 0 discriminator 1
 193 0068 9C4A     		ldr	r2, .L93
 194 006a 1368     		ldr	r3, [r2]
 195 006c 43F48033 		orr	r3, r3, #65536
 196 0070 1360     		str	r3, [r2]
 197 0072 26E0     		b	.L13
 198              	.L12:
 199              		.loc 1 291 0 discriminator 2
 200 0074 63B9     		cbnz	r3, .L14
 201              		.loc 1 291 0 discriminator 3
 202 0076 03F18043 		add	r3, r3, #1073741824
 203 007a 03F50433 		add	r3, r3, #135168
 204 007e 1A68     		ldr	r2, [r3]
 205 0080 22F48032 		bic	r2, r2, #65536
 206 0084 1A60     		str	r2, [r3]
 207 0086 1A68     		ldr	r2, [r3]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 19


 208 0088 22F48022 		bic	r2, r2, #262144
 209 008c 1A60     		str	r2, [r3]
 210 008e 18E0     		b	.L13
 211              	.L14:
 212              		.loc 1 291 0 discriminator 4
 213 0090 B3F5A02F 		cmp	r3, #327680
 214 0094 0CD1     		bne	.L15
 215              		.loc 1 291 0 discriminator 5
 216 0096 03F18043 		add	r3, r3, #1073741824
 217 009a A3F53C33 		sub	r3, r3, #192512
 218 009e 1A68     		ldr	r2, [r3]
 219 00a0 42F48022 		orr	r2, r2, #262144
 220 00a4 1A60     		str	r2, [r3]
 221 00a6 1A68     		ldr	r2, [r3]
 222 00a8 42F48032 		orr	r2, r2, #65536
 223 00ac 1A60     		str	r2, [r3]
 224 00ae 08E0     		b	.L13
 225              	.L15:
 226              		.loc 1 291 0 discriminator 6
 227 00b0 8A4B     		ldr	r3, .L93
 228 00b2 1A68     		ldr	r2, [r3]
 229 00b4 22F48032 		bic	r2, r2, #65536
 230 00b8 1A60     		str	r2, [r3]
 231 00ba 1A68     		ldr	r2, [r3]
 232 00bc 22F48022 		bic	r2, r2, #262144
 233 00c0 1A60     		str	r2, [r3]
 234              	.L13:
 292:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 293:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 294:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
 295:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 235              		.loc 1 295 0 is_stmt 1
 236 00c2 6368     		ldr	r3, [r4, #4]
 237 00c4 EBB1     		cbz	r3, .L16
 296:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 297:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 298:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 238              		.loc 1 298 0
 239 00c6 FFF7FEFF 		bl	HAL_GetTick
 240              	.LVL8:
 241 00ca 0546     		mov	r5, r0
 242              	.LVL9:
 299:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 300:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 301:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 243              		.loc 1 301 0
 244 00cc 05E0     		b	.L17
 245              	.LVL10:
 246              	.L20:
 302:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 303:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 247              		.loc 1 303 0
 248 00ce FFF7FEFF 		bl	HAL_GetTick
 249              	.LVL11:
 250 00d2 401B     		subs	r0, r0, r5
 251 00d4 6428     		cmp	r0, #100
 252 00d6 00F26682 		bhi	.L77
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 20


 253              	.L17:
 254              	.LVL12:
 255              	.LBB141:
 256              	.LBB142:
 257              		.loc 2 531 0
 258 00da 4FF40033 		mov	r3, #131072
 259              		.syntax unified
 260              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 261 00de 93FAA3F3 		rbit r3, r3
 262              	@ 0 "" 2
 263              	.LVL13:
 264              		.thumb
 265              		.syntax unified
 266              	.LBE142:
 267              	.LBE141:
 301:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 268              		.loc 1 301 0
 269 00e2 7E4B     		ldr	r3, .L93
 270 00e4 1A68     		ldr	r2, [r3]
 271              	.LVL14:
 272              	.LBB143:
 273              	.LBB144:
 274              		.loc 2 531 0
 275 00e6 4FF40033 		mov	r3, #131072
 276              		.syntax unified
 277              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 278 00ea 93FAA3F3 		rbit r3, r3
 279              	@ 0 "" 2
 280              	.LVL15:
 281              		.thumb
 282              		.syntax unified
 283              	.LBE144:
 284              	.LBE143:
 301:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 285              		.loc 1 301 0
 286 00ee B3FA83F3 		clz	r3, r3
 287 00f2 03F01F03 		and	r3, r3, #31
 288 00f6 22FA03F3 		lsr	r3, r2, r3
 289 00fa 13F0010F 		tst	r3, #1
 290 00fe E6D0     		beq	.L20
 291 0100 1CE0     		b	.L6
 292              	.LVL16:
 293              	.L16:
 304:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 305:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 306:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 307:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 308:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 309:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 310:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 311:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 312:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 294              		.loc 1 312 0
 295 0102 FFF7FEFF 		bl	HAL_GetTick
 296              	.LVL17:
 297 0106 0546     		mov	r5, r0
 298              	.LVL18:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 21


 313:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 314:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 315:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 299              		.loc 1 315 0
 300 0108 05E0     		b	.L21
 301              	.LVL19:
 302              	.L24:
 316:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 317:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 303              		.loc 1 317 0
 304 010a FFF7FEFF 		bl	HAL_GetTick
 305              	.LVL20:
 306 010e 401B     		subs	r0, r0, r5
 307 0110 6428     		cmp	r0, #100
 308 0112 00F24A82 		bhi	.L78
 309              	.L21:
 310              	.LVL21:
 311              	.LBB145:
 312              	.LBB146:
 313              		.loc 2 531 0
 314 0116 4FF40033 		mov	r3, #131072
 315              		.syntax unified
 316              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 317 011a 93FAA3F3 		rbit r3, r3
 318              	@ 0 "" 2
 319              	.LVL22:
 320              		.thumb
 321              		.syntax unified
 322              	.LBE146:
 323              	.LBE145:
 315:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 324              		.loc 1 315 0
 325 011e 6F4B     		ldr	r3, .L93
 326 0120 1A68     		ldr	r2, [r3]
 327              	.LVL23:
 328              	.LBB147:
 329              	.LBB148:
 330              		.loc 2 531 0
 331 0122 4FF40033 		mov	r3, #131072
 332              		.syntax unified
 333              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 334 0126 93FAA3F3 		rbit r3, r3
 335              	@ 0 "" 2
 336              	.LVL24:
 337              		.thumb
 338              		.syntax unified
 339              	.LBE148:
 340              	.LBE147:
 315:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 341              		.loc 1 315 0
 342 012a B3FA83F3 		clz	r3, r3
 343 012e 03F01F03 		and	r3, r3, #31
 344 0132 22FA03F3 		lsr	r3, r2, r3
 345 0136 13F0010F 		tst	r3, #1
 346 013a E6D1     		bne	.L24
 347              	.LVL25:
 348              	.L6:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 22


 318:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 319:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 320:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 321:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 322:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 323:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 324:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 325:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 326:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 349              		.loc 1 326 0
 350 013c 2368     		ldr	r3, [r4]
 351 013e 13F0020F 		tst	r3, #2
 352 0142 00F09080 		beq	.L25
 327:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 328:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 329:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
 330:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 331:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 332:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 333:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 353              		.loc 1 333 0
 354 0146 654B     		ldr	r3, .L93
 355 0148 5B68     		ldr	r3, [r3, #4]
 356 014a 13F00C0F 		tst	r3, #12
 357 014e 0AD0     		beq	.L26
 334:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 358              		.loc 1 334 0
 359 0150 624B     		ldr	r3, .L93
 360 0152 5B68     		ldr	r3, [r3, #4]
 361 0154 03F00C03 		and	r3, r3, #12
 362 0158 082B     		cmp	r3, #8
 363 015a 27D1     		bne	.L27
 364              		.loc 1 334 0 is_stmt 0 discriminator 1
 365 015c 5F4B     		ldr	r3, .L93
 366 015e 5B68     		ldr	r3, [r3, #4]
 367 0160 13F4803F 		tst	r3, #65536
 368 0164 22D1     		bne	.L27
 369              	.L26:
 370              	.LVL26:
 371              	.LBB149:
 372              	.LBB150:
 373              		.loc 2 531 0 is_stmt 1
 374 0166 0223     		movs	r3, #2
 375              		.syntax unified
 376              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 377 0168 93FAA3F3 		rbit r3, r3
 378              	@ 0 "" 2
 379              	.LVL27:
 380              		.thumb
 381              		.syntax unified
 382              	.LBE150:
 383              	.LBE149:
 335:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 336:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 337:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 384              		.loc 1 337 0
 385 016c 5B4B     		ldr	r3, .L93
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 23


 386 016e 1A68     		ldr	r2, [r3]
 387              	.LVL28:
 388              	.LBB151:
 389              	.LBB152:
 390              		.loc 2 531 0
 391 0170 0223     		movs	r3, #2
 392              		.syntax unified
 393              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 394 0172 93FAA3F3 		rbit r3, r3
 395              	@ 0 "" 2
 396              	.LVL29:
 397              		.thumb
 398              		.syntax unified
 399              	.LBE152:
 400              	.LBE151:
 401              		.loc 1 337 0
 402 0176 B3FA83F3 		clz	r3, r3
 403 017a 03F01F03 		and	r3, r3, #31
 404 017e 22FA03F3 		lsr	r3, r2, r3
 405 0182 13F0010F 		tst	r3, #1
 406 0186 03D0     		beq	.L30
 407              		.loc 1 337 0 is_stmt 0 discriminator 9
 408 0188 2369     		ldr	r3, [r4, #16]
 409 018a 012B     		cmp	r3, #1
 410 018c 40F00F82 		bne	.L79
 411              	.L30:
 338:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 339:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 340:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 341:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 342:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 343:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 344:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 345:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 412              		.loc 1 345 0 is_stmt 1
 413 0190 5248     		ldr	r0, .L93
 414 0192 0368     		ldr	r3, [r0]
 415 0194 23F0F801 		bic	r1, r3, #248
 416 0198 6369     		ldr	r3, [r4, #20]
 417              	.LVL30:
 418              	.LBB153:
 419              	.LBB154:
 420              		.loc 2 531 0
 421 019a F822     		movs	r2, #248
 422              		.syntax unified
 423              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 424 019c 92FAA2F2 		rbit r2, r2
 425              	@ 0 "" 2
 426              	.LVL31:
 427              		.thumb
 428              		.syntax unified
 429              	.LBE154:
 430              	.LBE153:
 431              		.loc 1 345 0
 432 01a0 B2FA82F2 		clz	r2, r2
 433 01a4 9340     		lsls	r3, r3, r2
 434 01a6 0B43     		orrs	r3, r3, r1
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 24


 435 01a8 0360     		str	r3, [r0]
 337:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 436              		.loc 1 337 0
 437 01aa 5CE0     		b	.L25
 438              	.L27:
 346:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 347:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 348:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 349:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 350:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 351:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 439              		.loc 1 351 0
 440 01ac 2369     		ldr	r3, [r4, #16]
 441 01ae 9BB3     		cbz	r3, .L31
 442              	.LVL32:
 443              	.LBB155:
 444              	.LBB156:
 445              		.loc 2 531 0
 446 01b0 0122     		movs	r2, #1
 447              		.syntax unified
 448              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 449 01b2 92FAA2F3 		rbit r3, r2
 450              	@ 0 "" 2
 451              	.LVL33:
 452              		.thumb
 453              		.syntax unified
 454              	.LBE156:
 455              	.LBE155:
 352:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 353:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 354:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 456              		.loc 1 354 0
 457 01b6 B3FA83F3 		clz	r3, r3
 458 01ba 9B00     		lsls	r3, r3, #2
 459 01bc 03F18443 		add	r3, r3, #1107296256
 460 01c0 03F58403 		add	r3, r3, #4325376
 461 01c4 1A60     		str	r2, [r3]
 355:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 356:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 357:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 462              		.loc 1 357 0
 463 01c6 FFF7FEFF 		bl	HAL_GetTick
 464              	.LVL34:
 465 01ca 0546     		mov	r5, r0
 466              	.LVL35:
 358:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 359:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 467              		.loc 1 360 0
 468 01cc 05E0     		b	.L32
 469              	.LVL36:
 470              	.L35:
 361:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 362:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 471              		.loc 1 362 0
 472 01ce FFF7FEFF 		bl	HAL_GetTick
 473              	.LVL37:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 25


 474 01d2 401B     		subs	r0, r0, r5
 475 01d4 0228     		cmp	r0, #2
 476 01d6 00F2EC81 		bhi	.L80
 477              	.L32:
 478              	.LVL38:
 479              	.LBB157:
 480              	.LBB158:
 481              		.loc 2 531 0
 482 01da 0223     		movs	r3, #2
 483              		.syntax unified
 484              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 485 01dc 93FAA3F3 		rbit r3, r3
 486              	@ 0 "" 2
 487              	.LVL39:
 488              		.thumb
 489              		.syntax unified
 490              	.LBE158:
 491              	.LBE157:
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 492              		.loc 1 360 0
 493 01e0 3E4B     		ldr	r3, .L93
 494 01e2 1A68     		ldr	r2, [r3]
 495              	.LVL40:
 496              	.LBB159:
 497              	.LBB160:
 498              		.loc 2 531 0
 499 01e4 0223     		movs	r3, #2
 500              		.syntax unified
 501              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 502 01e6 93FAA3F3 		rbit r3, r3
 503              	@ 0 "" 2
 504              	.LVL41:
 505              		.thumb
 506              		.syntax unified
 507              	.LBE160:
 508              	.LBE159:
 360:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 509              		.loc 1 360 0
 510 01ea B3FA83F3 		clz	r3, r3
 511 01ee 03F01F03 		and	r3, r3, #31
 512 01f2 22FA03F3 		lsr	r3, r2, r3
 513 01f6 13F0010F 		tst	r3, #1
 514 01fa E8D0     		beq	.L35
 363:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 364:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 365:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 366:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 367:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                 
 368:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 369:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 515              		.loc 1 369 0
 516 01fc 3748     		ldr	r0, .L93
 517 01fe 0368     		ldr	r3, [r0]
 518 0200 23F0F801 		bic	r1, r3, #248
 519 0204 6369     		ldr	r3, [r4, #20]
 520              	.LVL42:
 521              	.LBB161:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 26


 522              	.LBB162:
 523              		.loc 2 531 0
 524 0206 F822     		movs	r2, #248
 525              		.syntax unified
 526              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 527 0208 92FAA2F2 		rbit r2, r2
 528              	@ 0 "" 2
 529              	.LVL43:
 530              		.thumb
 531              		.syntax unified
 532              	.LBE162:
 533              	.LBE161:
 534              		.loc 1 369 0
 535 020c B2FA82F2 		clz	r2, r2
 536 0210 9340     		lsls	r3, r3, r2
 537 0212 0B43     		orrs	r3, r3, r1
 538 0214 0360     		str	r3, [r0]
 539 0216 26E0     		b	.L25
 540              	.LVL44:
 541              	.L31:
 542              	.LBB163:
 543              	.LBB164:
 544              		.loc 2 531 0
 545 0218 0123     		movs	r3, #1
 546              		.syntax unified
 547              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 548 021a 93FAA3F3 		rbit r3, r3
 549              	@ 0 "" 2
 550              	.LVL45:
 551              		.thumb
 552              		.syntax unified
 553              	.LBE164:
 554              	.LBE163:
 370:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 371:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 372:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 373:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 374:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
 555              		.loc 1 374 0
 556 021e B3FA83F3 		clz	r3, r3
 557 0222 9B00     		lsls	r3, r3, #2
 558 0224 03F18443 		add	r3, r3, #1107296256
 559 0228 03F58403 		add	r3, r3, #4325376
 560 022c 0022     		movs	r2, #0
 561 022e 1A60     		str	r2, [r3]
 375:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 376:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 377:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 562              		.loc 1 377 0
 563 0230 FFF7FEFF 		bl	HAL_GetTick
 564              	.LVL46:
 565 0234 0546     		mov	r5, r0
 566              	.LVL47:
 378:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 379:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 380:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 567              		.loc 1 380 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 27


 568 0236 05E0     		b	.L36
 569              	.LVL48:
 570              	.L39:
 381:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 382:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 571              		.loc 1 382 0
 572 0238 FFF7FEFF 		bl	HAL_GetTick
 573              	.LVL49:
 574 023c 401B     		subs	r0, r0, r5
 575 023e 0228     		cmp	r0, #2
 576 0240 00F2B981 		bhi	.L81
 577              	.L36:
 578              	.LVL50:
 579              	.LBB165:
 580              	.LBB166:
 581              		.loc 2 531 0
 582 0244 0223     		movs	r3, #2
 583              		.syntax unified
 584              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 585 0246 93FAA3F3 		rbit r3, r3
 586              	@ 0 "" 2
 587              	.LVL51:
 588              		.thumb
 589              		.syntax unified
 590              	.LBE166:
 591              	.LBE165:
 380:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 592              		.loc 1 380 0
 593 024a 244B     		ldr	r3, .L93
 594 024c 1A68     		ldr	r2, [r3]
 595              	.LVL52:
 596              	.LBB167:
 597              	.LBB168:
 598              		.loc 2 531 0
 599 024e 0223     		movs	r3, #2
 600              		.syntax unified
 601              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 602 0250 93FAA3F3 		rbit r3, r3
 603              	@ 0 "" 2
 604              	.LVL53:
 605              		.thumb
 606              		.syntax unified
 607              	.LBE168:
 608              	.LBE167:
 380:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 609              		.loc 1 380 0
 610 0254 B3FA83F3 		clz	r3, r3
 611 0258 03F01F03 		and	r3, r3, #31
 612 025c 22FA03F3 		lsr	r3, r2, r3
 613 0260 13F0010F 		tst	r3, #1
 614 0264 E8D1     		bne	.L39
 615              	.LVL54:
 616              	.L25:
 383:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 384:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 385:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 386:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 28


 387:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 388:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 389:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 390:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 391:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 617              		.loc 1 391 0
 618 0266 2368     		ldr	r3, [r4]
 619 0268 13F0080F 		tst	r3, #8
 620 026c 52D0     		beq	.L40
 392:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 393:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 394:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 395:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 396:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 397:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 621              		.loc 1 397 0
 622 026e A369     		ldr	r3, [r4, #24]
 623 0270 3BB3     		cbz	r3, .L41
 624              	.LVL55:
 625              	.LBB169:
 626              	.LBB170:
 627              		.loc 2 531 0
 628 0272 0122     		movs	r2, #1
 629              		.syntax unified
 630              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 631 0274 92FAA2F3 		rbit r3, r2
 632              	@ 0 "" 2
 633              	.LVL56:
 634              		.thumb
 635              		.syntax unified
 636              	.LBE170:
 637              	.LBE169:
 398:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 399:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 400:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 638              		.loc 1 400 0
 639 0278 B3FA83F3 		clz	r3, r3
 640 027c 1849     		ldr	r1, .L93+4
 641 027e 41F82320 		str	r2, [r1, r3, lsl #2]
 401:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 402:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 403:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 642              		.loc 1 403 0
 643 0282 FFF7FEFF 		bl	HAL_GetTick
 644              	.LVL57:
 645 0286 0546     		mov	r5, r0
 646              	.LVL58:
 404:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 405:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
 406:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 647              		.loc 1 406 0
 648 0288 05E0     		b	.L42
 649              	.LVL59:
 650              	.L43:
 407:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 408:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 651              		.loc 1 408 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 29


 652 028a FFF7FEFF 		bl	HAL_GetTick
 653              	.LVL60:
 654 028e 401B     		subs	r0, r0, r5
 655 0290 0228     		cmp	r0, #2
 656 0292 00F29281 		bhi	.L82
 657              	.L42:
 658              	.LVL61:
 659              	.LBB171:
 660              	.LBB172:
 661              		.loc 2 531 0
 662 0296 0223     		movs	r3, #2
 663              		.syntax unified
 664              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 665 0298 93FAA3F2 		rbit r2, r3
 666              	@ 0 "" 2
 667              	.LVL62:
 668              		.thumb
 669              		.syntax unified
 670              	.LBE172:
 671              	.LBE171:
 672              	.LBB173:
 673              	.LBB174:
 674              		.syntax unified
 675              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 676 029c 93FAA3F2 		rbit r2, r3
 677              	@ 0 "" 2
 678              	.LVL63:
 679              		.thumb
 680              		.syntax unified
 681              	.LBE174:
 682              	.LBE173:
 406:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 683              		.loc 1 406 0
 684 02a0 0E4A     		ldr	r2, .L93
 685 02a2 526A     		ldr	r2, [r2, #36]
 686              	.LVL64:
 687              	.LBB175:
 688              	.LBB176:
 689              		.loc 2 531 0
 690              		.syntax unified
 691              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 692 02a4 93FAA3F3 		rbit r3, r3
 693              	@ 0 "" 2
 694              	.LVL65:
 695              		.thumb
 696              		.syntax unified
 697              	.LBE176:
 698              	.LBE175:
 406:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 699              		.loc 1 406 0
 700 02a8 B3FA83F3 		clz	r3, r3
 701 02ac 03F01F03 		and	r3, r3, #31
 702 02b0 22FA03F3 		lsr	r3, r2, r3
 703 02b4 13F0010F 		tst	r3, #1
 704 02b8 E7D0     		beq	.L43
 409:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 410:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 30


 411:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 412:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 413:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 414:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 415:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       HAL_Delay(1);
 705              		.loc 1 415 0
 706 02ba 0120     		movs	r0, #1
 707 02bc FFF7FEFF 		bl	HAL_Delay
 708              	.LVL66:
 709 02c0 28E0     		b	.L40
 710              	.LVL67:
 711              	.L41:
 712              	.LBB177:
 713              	.LBB178:
 714              		.loc 2 531 0
 715 02c2 0123     		movs	r3, #1
 716              		.syntax unified
 717              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 718 02c4 93FAA3F3 		rbit r3, r3
 719              	@ 0 "" 2
 720              	.LVL68:
 721              		.thumb
 722              		.syntax unified
 723              	.LBE178:
 724              	.LBE177:
 416:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 417:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 418:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 419:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 420:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 725              		.loc 1 420 0
 726 02c8 B3FA83F3 		clz	r3, r3
 727 02cc 0021     		movs	r1, #0
 728 02ce 044A     		ldr	r2, .L93+4
 729 02d0 42F82310 		str	r1, [r2, r3, lsl #2]
 421:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 422:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 423:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 730              		.loc 1 423 0
 731 02d4 FFF7FEFF 		bl	HAL_GetTick
 732              	.LVL69:
 733 02d8 0546     		mov	r5, r0
 734              	.LVL70:
 424:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 425:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 426:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 735              		.loc 1 426 0
 736 02da 09E0     		b	.L44
 737              	.L94:
 738              		.align	2
 739              	.L93:
 740 02dc 00100240 		.word	1073876992
 741 02e0 80044242 		.word	1111622784
 742              	.LVL71:
 743              	.L45:
 427:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 428:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 31


 744              		.loc 1 428 0
 745 02e4 FFF7FEFF 		bl	HAL_GetTick
 746              	.LVL72:
 747 02e8 401B     		subs	r0, r0, r5
 748 02ea 0228     		cmp	r0, #2
 749 02ec 00F26781 		bhi	.L83
 750              	.L44:
 751              	.LVL73:
 752              	.LBB179:
 753              	.LBB180:
 754              		.loc 2 531 0
 755 02f0 0223     		movs	r3, #2
 756              		.syntax unified
 757              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 758 02f2 93FAA3F2 		rbit r2, r3
 759              	@ 0 "" 2
 760              	.LVL74:
 761              		.thumb
 762              		.syntax unified
 763              	.LBE180:
 764              	.LBE179:
 765              	.LBB181:
 766              	.LBB182:
 767              		.syntax unified
 768              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 769 02f6 93FAA3F2 		rbit r2, r3
 770              	@ 0 "" 2
 771              	.LVL75:
 772              		.thumb
 773              		.syntax unified
 774              	.LBE182:
 775              	.LBE181:
 426:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 776              		.loc 1 426 0
 777 02fa BA4A     		ldr	r2, .L95
 778 02fc 526A     		ldr	r2, [r2, #36]
 779              	.LVL76:
 780              	.LBB183:
 781              	.LBB184:
 782              		.loc 2 531 0
 783              		.syntax unified
 784              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 785 02fe 93FAA3F3 		rbit r3, r3
 786              	@ 0 "" 2
 787              	.LVL77:
 788              		.thumb
 789              		.syntax unified
 790              	.LBE184:
 791              	.LBE183:
 426:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 792              		.loc 1 426 0
 793 0302 B3FA83F3 		clz	r3, r3
 794 0306 03F01F03 		and	r3, r3, #31
 795 030a 22FA03F3 		lsr	r3, r2, r3
 796 030e 13F0010F 		tst	r3, #1
 797 0312 E7D1     		bne	.L45
 798              	.LVL78:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 32


 799              	.L40:
 429:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 430:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 431:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 432:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 433:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 434:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 435:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 436:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 800              		.loc 1 436 0
 801 0314 2368     		ldr	r3, [r4]
 802 0316 13F0040F 		tst	r3, #4
 803 031a 00F0A180 		beq	.L46
 804              	.LBB185:
 437:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 438:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 439:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 440:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 441:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Enable Power Clock*/
 442:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 805              		.loc 1 442 0
 806 031e B14B     		ldr	r3, .L95
 807 0320 DA69     		ldr	r2, [r3, #28]
 808 0322 42F08052 		orr	r2, r2, #268435456
 809 0326 DA61     		str	r2, [r3, #28]
 810 0328 DB69     		ldr	r3, [r3, #28]
 811 032a 03F08053 		and	r3, r3, #268435456
 812 032e 0193     		str	r3, [sp, #4]
 813 0330 019B     		ldr	r3, [sp, #4]
 814              	.LBE185:
 443:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 444:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 445:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 815              		.loc 1 445 0
 816 0332 AD4A     		ldr	r2, .L95+4
 817 0334 1368     		ldr	r3, [r2]
 818 0336 43F48073 		orr	r3, r3, #256
 819 033a 1360     		str	r3, [r2]
 446:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 447:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 448:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 820              		.loc 1 448 0
 821 033c FFF7FEFF 		bl	HAL_GetTick
 822              	.LVL79:
 823 0340 0546     		mov	r5, r0
 824              	.LVL80:
 449:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 450:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     while((PWR->CR & PWR_CR_DBP) == RESET)
 825              		.loc 1 450 0
 826 0342 05E0     		b	.L47
 827              	.LVL81:
 828              	.L48:
 451:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 452:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 829              		.loc 1 452 0
 830 0344 FFF7FEFF 		bl	HAL_GetTick
 831              	.LVL82:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 33


 832 0348 401B     		subs	r0, r0, r5
 833 034a 6428     		cmp	r0, #100
 834 034c 00F23981 		bhi	.L84
 835              	.L47:
 450:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 836              		.loc 1 450 0
 837 0350 A54B     		ldr	r3, .L95+4
 838 0352 1B68     		ldr	r3, [r3]
 839 0354 13F4807F 		tst	r3, #256
 840 0358 F4D0     		beq	.L48
 453:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 454:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 455:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 456:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 457:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 458:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 459:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 841              		.loc 1 459 0
 842 035a E368     		ldr	r3, [r4, #12]
 843 035c 012B     		cmp	r3, #1
 844 035e 05D1     		bne	.L49
 845              		.loc 1 459 0 is_stmt 0 discriminator 1
 846 0360 A04A     		ldr	r2, .L95
 847 0362 136A     		ldr	r3, [r2, #32]
 848 0364 43F00103 		orr	r3, r3, #1
 849 0368 1362     		str	r3, [r2, #32]
 850 036a 22E0     		b	.L50
 851              	.L49:
 852              		.loc 1 459 0 discriminator 2
 853 036c 63B9     		cbnz	r3, .L51
 854              		.loc 1 459 0 discriminator 3
 855 036e 03F18043 		add	r3, r3, #1073741824
 856 0372 03F50433 		add	r3, r3, #135168
 857 0376 1A6A     		ldr	r2, [r3, #32]
 858 0378 22F00102 		bic	r2, r2, #1
 859 037c 1A62     		str	r2, [r3, #32]
 860 037e 1A6A     		ldr	r2, [r3, #32]
 861 0380 22F00402 		bic	r2, r2, #4
 862 0384 1A62     		str	r2, [r3, #32]
 863 0386 14E0     		b	.L50
 864              	.L51:
 865              		.loc 1 459 0 discriminator 4
 866 0388 052B     		cmp	r3, #5
 867 038a 09D1     		bne	.L52
 868              		.loc 1 459 0 discriminator 5
 869 038c 954B     		ldr	r3, .L95
 870 038e 1A6A     		ldr	r2, [r3, #32]
 871 0390 42F00402 		orr	r2, r2, #4
 872 0394 1A62     		str	r2, [r3, #32]
 873 0396 1A6A     		ldr	r2, [r3, #32]
 874 0398 42F00102 		orr	r2, r2, #1
 875 039c 1A62     		str	r2, [r3, #32]
 876 039e 08E0     		b	.L50
 877              	.L52:
 878              		.loc 1 459 0 discriminator 6
 879 03a0 904B     		ldr	r3, .L95
 880 03a2 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 34


 881 03a4 22F00102 		bic	r2, r2, #1
 882 03a8 1A62     		str	r2, [r3, #32]
 883 03aa 1A6A     		ldr	r2, [r3, #32]
 884 03ac 22F00402 		bic	r2, r2, #4
 885 03b0 1A62     		str	r2, [r3, #32]
 886              	.L50:
 460:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 461:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 887              		.loc 1 461 0 is_stmt 1
 888 03b2 E368     		ldr	r3, [r4, #12]
 889 03b4 53B3     		cbz	r3, .L53
 462:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 463:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 464:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 890              		.loc 1 464 0
 891 03b6 FFF7FEFF 		bl	HAL_GetTick
 892              	.LVL83:
 893 03ba 0546     		mov	r5, r0
 894              	.LVL84:
 465:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 466:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 895              		.loc 1 467 0
 896 03bc 07E0     		b	.L54
 897              	.LVL85:
 898              	.L57:
 468:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 469:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 899              		.loc 1 469 0
 900 03be FFF7FEFF 		bl	HAL_GetTick
 901              	.LVL86:
 902 03c2 401B     		subs	r0, r0, r5
 903 03c4 41F28833 		movw	r3, #5000
 904 03c8 9842     		cmp	r0, r3
 905 03ca 00F2FC80 		bhi	.L85
 906              	.L54:
 907              	.LVL87:
 908              	.LBB186:
 909              	.LBB187:
 910              		.loc 2 531 0
 911 03ce 0223     		movs	r3, #2
 912              		.syntax unified
 913              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 914 03d0 93FAA3F2 		rbit r2, r3
 915              	@ 0 "" 2
 916              	.LVL88:
 917              		.thumb
 918              		.syntax unified
 919              	.LBE187:
 920              	.LBE186:
 921              	.LBB188:
 922              	.LBB189:
 923              		.syntax unified
 924              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 925 03d4 93FAA3F3 		rbit r3, r3
 926              	@ 0 "" 2
 927              	.LVL89:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 35


 928              		.thumb
 929              		.syntax unified
 930              	.LBE189:
 931              	.LBE188:
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 932              		.loc 1 467 0
 933 03d8 B3FA83F3 		clz	r3, r3
 934 03dc 5B09     		lsrs	r3, r3, #5
 935 03de 43F00203 		orr	r3, r3, #2
 936 03e2 DBB2     		uxtb	r3, r3
 937 03e4 022B     		cmp	r3, #2
 938 03e6 02D1     		bne	.L55
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 939              		.loc 1 467 0 is_stmt 0 discriminator 4
 940 03e8 7E4B     		ldr	r3, .L95
 941 03ea 1A6A     		ldr	r2, [r3, #32]
 942 03ec 01E0     		b	.L56
 943              	.L55:
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 944              		.loc 1 467 0 discriminator 5
 945 03ee 7D4B     		ldr	r3, .L95
 946 03f0 5A6A     		ldr	r2, [r3, #36]
 947              	.L56:
 948              	.LVL90:
 949              	.LBB190:
 950              	.LBB191:
 951              		.loc 2 531 0 is_stmt 1 discriminator 7
 952 03f2 0223     		movs	r3, #2
 953              		.syntax unified
 954              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 955 03f4 93FAA3F3 		rbit r3, r3
 956              	@ 0 "" 2
 957              	.LVL91:
 958              		.thumb
 959              		.syntax unified
 960              	.LBE191:
 961              	.LBE190:
 467:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 962              		.loc 1 467 0 discriminator 7
 963 03f8 B3FA83F3 		clz	r3, r3
 964 03fc 03F01F03 		and	r3, r3, #31
 965 0400 22FA03F3 		lsr	r3, r2, r3
 966 0404 13F0010F 		tst	r3, #1
 967 0408 D9D0     		beq	.L57
 968 040a 29E0     		b	.L46
 969              	.L53:
 470:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 471:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 472:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 473:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 474:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 475:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 476:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 477:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 478:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 970              		.loc 1 478 0
 971 040c FFF7FEFF 		bl	HAL_GetTick
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 36


 972              	.LVL92:
 973 0410 0546     		mov	r5, r0
 974              	.LVL93:
 479:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 480:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 975              		.loc 1 481 0
 976 0412 07E0     		b	.L58
 977              	.LVL94:
 978              	.L61:
 482:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 483:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 979              		.loc 1 483 0
 980 0414 FFF7FEFF 		bl	HAL_GetTick
 981              	.LVL95:
 982 0418 401B     		subs	r0, r0, r5
 983 041a 41F28833 		movw	r3, #5000
 984 041e 9842     		cmp	r0, r3
 985 0420 00F2D380 		bhi	.L86
 986              	.L58:
 987              	.LVL96:
 988              	.LBB192:
 989              	.LBB193:
 990              		.loc 2 531 0
 991 0424 0223     		movs	r3, #2
 992              		.syntax unified
 993              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 994 0426 93FAA3F2 		rbit r2, r3
 995              	@ 0 "" 2
 996              	.LVL97:
 997              		.thumb
 998              		.syntax unified
 999              	.LBE193:
 1000              	.LBE192:
 1001              	.LBB194:
 1002              	.LBB195:
 1003              		.syntax unified
 1004              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1005 042a 93FAA3F3 		rbit r3, r3
 1006              	@ 0 "" 2
 1007              	.LVL98:
 1008              		.thumb
 1009              		.syntax unified
 1010              	.LBE195:
 1011              	.LBE194:
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1012              		.loc 1 481 0
 1013 042e B3FA83F3 		clz	r3, r3
 1014 0432 5B09     		lsrs	r3, r3, #5
 1015 0434 43F00203 		orr	r3, r3, #2
 1016 0438 DBB2     		uxtb	r3, r3
 1017 043a 022B     		cmp	r3, #2
 1018 043c 02D1     		bne	.L59
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1019              		.loc 1 481 0 is_stmt 0 discriminator 4
 1020 043e 694B     		ldr	r3, .L95
 1021 0440 1A6A     		ldr	r2, [r3, #32]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 37


 1022 0442 01E0     		b	.L60
 1023              	.L59:
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1024              		.loc 1 481 0 discriminator 5
 1025 0444 674B     		ldr	r3, .L95
 1026 0446 5A6A     		ldr	r2, [r3, #36]
 1027              	.L60:
 1028              	.LVL99:
 1029              	.LBB196:
 1030              	.LBB197:
 1031              		.loc 2 531 0 is_stmt 1 discriminator 7
 1032 0448 0223     		movs	r3, #2
 1033              		.syntax unified
 1034              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1035 044a 93FAA3F3 		rbit r3, r3
 1036              	@ 0 "" 2
 1037              	.LVL100:
 1038              		.thumb
 1039              		.syntax unified
 1040              	.LBE197:
 1041              	.LBE196:
 481:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1042              		.loc 1 481 0 discriminator 7
 1043 044e B3FA83F3 		clz	r3, r3
 1044 0452 03F01F03 		and	r3, r3, #31
 1045 0456 22FA03F3 		lsr	r3, r2, r3
 1046 045a 13F0010F 		tst	r3, #1
 1047 045e D9D1     		bne	.L61
 1048              	.LVL101:
 1049              	.L46:
 484:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 485:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 486:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 487:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 488:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 489:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 490:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 491:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 492:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 493:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 494:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 495:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 496:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 497:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 498:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 499:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 500:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 501:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 502:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 503:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 504:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 505:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 506:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 507:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 508:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 509:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 510:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 38


 511:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 512:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 513:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 514:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 515:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 516:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 517:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 518:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 519:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 520:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 521:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 522:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 523:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 524:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 525:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 526:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 527:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 528:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 529:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 530:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 531:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 532:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 533:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 534:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 535:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 536:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 537:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 538:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 539:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 540:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 541:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 542:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 543:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 544:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 545:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 546:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 547:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 548:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 549:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 550:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 551:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 552:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 553:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 554:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 555:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 556:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 557:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 558:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 559:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 560:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 561:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 562:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 563:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 564:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 565:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 566:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 567:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 39


 568:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 569:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 570:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 571:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 572:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 573:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 574:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 575:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 576:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 577:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 578:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 579:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 580:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 581:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 582:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 583:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 584:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 1050              		.loc 1 584 0
 1051 0460 E369     		ldr	r3, [r4, #28]
 1052 0462 002B     		cmp	r3, #0
 1053 0464 00F0B380 		beq	.L87
 585:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 586:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 587:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 1054              		.loc 1 587 0
 1055 0468 5E4A     		ldr	r2, .L95
 1056 046a 5268     		ldr	r2, [r2, #4]
 1057 046c 02F00C02 		and	r2, r2, #12
 1058 0470 082A     		cmp	r2, #8
 1059 0472 00F0AE80 		beq	.L88
 588:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 589:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 1060              		.loc 1 589 0
 1061 0476 022B     		cmp	r3, #2
 1062 0478 68D1     		bne	.L62
 1063              	.LVL102:
 1064              	.LBB198:
 1065              	.LBB199:
 1066              		.loc 2 531 0
 1067 047a 4FF08073 		mov	r3, #16777216
 1068              		.syntax unified
 1069              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1070 047e 93FAA3F3 		rbit r3, r3
 1071              	@ 0 "" 2
 1072              	.LVL103:
 1073              		.thumb
 1074              		.syntax unified
 1075              	.LBE199:
 1076              	.LBE198:
 590:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 591:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 592:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 593:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 594:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 595:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 596:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 1077              		.loc 1 596 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 40


 1078 0482 B3FA83F3 		clz	r3, r3
 1079 0486 9B00     		lsls	r3, r3, #2
 1080 0488 03F18443 		add	r3, r3, #1107296256
 1081 048c 03F58403 		add	r3, r3, #4325376
 1082 0490 0022     		movs	r2, #0
 1083 0492 1A60     		str	r2, [r3]
 597:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 598:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 599:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1084              		.loc 1 599 0
 1085 0494 FFF7FEFF 		bl	HAL_GetTick
 1086              	.LVL104:
 1087 0498 0546     		mov	r5, r0
 1088              	.LVL105:
 600:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 601:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 602:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 1089              		.loc 1 602 0
 1090 049a 05E0     		b	.L63
 1091              	.LVL106:
 1092              	.L66:
 603:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 604:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1093              		.loc 1 604 0
 1094 049c FFF7FEFF 		bl	HAL_GetTick
 1095              	.LVL107:
 1096 04a0 401B     		subs	r0, r0, r5
 1097 04a2 0228     		cmp	r0, #2
 1098 04a4 00F29780 		bhi	.L89
 1099              	.L63:
 1100              	.LVL108:
 1101              	.LBB200:
 1102              	.LBB201:
 1103              		.loc 2 531 0
 1104 04a8 4FF00073 		mov	r3, #33554432
 1105              		.syntax unified
 1106              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1107 04ac 93FAA3F3 		rbit r3, r3
 1108              	@ 0 "" 2
 1109              	.LVL109:
 1110              		.thumb
 1111              		.syntax unified
 1112              	.LBE201:
 1113              	.LBE200:
 602:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1114              		.loc 1 602 0
 1115 04b0 4C4B     		ldr	r3, .L95
 1116 04b2 1A68     		ldr	r2, [r3]
 1117              	.LVL110:
 1118              	.LBB202:
 1119              	.LBB203:
 1120              		.loc 2 531 0
 1121 04b4 4FF00073 		mov	r3, #33554432
 1122              		.syntax unified
 1123              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1124 04b8 93FAA3F3 		rbit r3, r3
 1125              	@ 0 "" 2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 41


 1126              	.LVL111:
 1127              		.thumb
 1128              		.syntax unified
 1129              	.LBE203:
 1130              	.LBE202:
 602:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1131              		.loc 1 602 0
 1132 04bc B3FA83F3 		clz	r3, r3
 1133 04c0 03F01F03 		and	r3, r3, #31
 1134 04c4 22FA03F3 		lsr	r3, r2, r3
 1135 04c8 13F0010F 		tst	r3, #1
 1136 04cc E6D1     		bne	.L66
 605:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 606:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 607:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 608:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 609:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 610:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 611:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 612:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 1137              		.loc 1 612 0
 1138 04ce 236A     		ldr	r3, [r4, #32]
 1139 04d0 B3F5803F 		cmp	r3, #65536
 1140 04d4 06D1     		bne	.L67
 613:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 614:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 615:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 616:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 617:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 618:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           
 619:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 620:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 621:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 622:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 623:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 624:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 1141              		.loc 1 624 0
 1142 04d6 4349     		ldr	r1, .L95
 1143 04d8 4B68     		ldr	r3, [r1, #4]
 1144 04da 23F40032 		bic	r2, r3, #131072
 1145 04de A368     		ldr	r3, [r4, #8]
 1146 04e0 1343     		orrs	r3, r3, r2
 1147 04e2 4B60     		str	r3, [r1, #4]
 1148              	.L67:
 625:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 626:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 627:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 628:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 1149              		.loc 1 628 0
 1150 04e4 3F48     		ldr	r0, .L95
 1151 04e6 4368     		ldr	r3, [r0, #4]
 1152 04e8 23F47411 		bic	r1, r3, #3997696
 1153 04ec 236A     		ldr	r3, [r4, #32]
 1154 04ee 626A     		ldr	r2, [r4, #36]
 1155 04f0 1343     		orrs	r3, r3, r2
 1156 04f2 0B43     		orrs	r3, r3, r1
 1157 04f4 4360     		str	r3, [r0, #4]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 42


 1158              	.LVL112:
 1159              	.LBB204:
 1160              	.LBB205:
 1161              		.loc 2 531 0
 1162 04f6 4FF08073 		mov	r3, #16777216
 1163              		.syntax unified
 1164              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1165 04fa 93FAA3F3 		rbit r3, r3
 1166              	@ 0 "" 2
 1167              	.LVL113:
 1168              		.thumb
 1169              		.syntax unified
 1170              	.LBE205:
 1171              	.LBE204:
 629:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 630:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 631:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 1172              		.loc 1 631 0
 1173 04fe B3FA83F3 		clz	r3, r3
 1174 0502 9B00     		lsls	r3, r3, #2
 1175 0504 03F18443 		add	r3, r3, #1107296256
 1176 0508 03F58403 		add	r3, r3, #4325376
 1177 050c 0122     		movs	r2, #1
 1178 050e 1A60     		str	r2, [r3]
 632:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 633:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 634:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 1179              		.loc 1 634 0
 1180 0510 FFF7FEFF 		bl	HAL_GetTick
 1181              	.LVL114:
 1182 0514 0446     		mov	r4, r0
 1183              	.LVL115:
 635:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 636:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 637:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 1184              		.loc 1 637 0
 1185 0516 04E0     		b	.L68
 1186              	.LVL116:
 1187              	.L71:
 638:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 639:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 1188              		.loc 1 639 0
 1189 0518 FFF7FEFF 		bl	HAL_GetTick
 1190              	.LVL117:
 1191 051c 001B     		subs	r0, r0, r4
 1192 051e 0228     		cmp	r0, #2
 1193 0520 5BD8     		bhi	.L90
 1194              	.L68:
 1195              	.LVL118:
 1196              	.LBB206:
 1197              	.LBB207:
 1198              		.loc 2 531 0
 1199 0522 4FF00073 		mov	r3, #33554432
 1200              		.syntax unified
 1201              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1202 0526 93FAA3F3 		rbit r3, r3
 1203              	@ 0 "" 2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 43


 1204              	.LVL119:
 1205              		.thumb
 1206              		.syntax unified
 1207              	.LBE207:
 1208              	.LBE206:
 637:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1209              		.loc 1 637 0
 1210 052a 2E4B     		ldr	r3, .L95
 1211 052c 1A68     		ldr	r2, [r3]
 1212              	.LVL120:
 1213              	.LBB208:
 1214              	.LBB209:
 1215              		.loc 2 531 0
 1216 052e 4FF00073 		mov	r3, #33554432
 1217              		.syntax unified
 1218              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1219 0532 93FAA3F3 		rbit r3, r3
 1220              	@ 0 "" 2
 1221              	.LVL121:
 1222              		.thumb
 1223              		.syntax unified
 1224              	.LBE209:
 1225              	.LBE208:
 637:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1226              		.loc 1 637 0
 1227 0536 B3FA83F3 		clz	r3, r3
 1228 053a 03F01F03 		and	r3, r3, #31
 1229 053e 22FA03F3 		lsr	r3, r2, r3
 1230 0542 13F0010F 		tst	r3, #1
 1231 0546 E7D0     		beq	.L71
 640:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 641:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 642:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 643:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 644:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 645:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 646:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 647:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 648:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 649:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 650:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 651:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 652:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 653:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 654:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 655:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 656:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 657:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 658:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 659:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 660:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 661:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 662:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 663:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 664:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 665:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 666:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 44


 667:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 668:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 669:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 1232              		.loc 1 669 0
 1233 0548 0020     		movs	r0, #0
 1234 054a 49E0     		b	.L11
 1235              	.LVL122:
 1236              	.L62:
 1237              	.LBB210:
 1238              	.LBB211:
 1239              		.loc 2 531 0
 1240 054c 4FF08073 		mov	r3, #16777216
 1241              		.syntax unified
 1242              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1243 0550 93FAA3F3 		rbit r3, r3
 1244              	@ 0 "" 2
 1245              	.LVL123:
 1246              		.thumb
 1247              		.syntax unified
 1248              	.LBE211:
 1249              	.LBE210:
 648:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 1250              		.loc 1 648 0
 1251 0554 B3FA83F3 		clz	r3, r3
 1252 0558 9B00     		lsls	r3, r3, #2
 1253 055a 03F18443 		add	r3, r3, #1107296256
 1254 055e 03F58403 		add	r3, r3, #4325376
 1255 0562 0022     		movs	r2, #0
 1256 0564 1A60     		str	r2, [r3]
 651:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 1257              		.loc 1 651 0
 1258 0566 FFF7FEFF 		bl	HAL_GetTick
 1259              	.LVL124:
 1260 056a 0446     		mov	r4, r0
 1261              	.LVL125:
 654:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1262              		.loc 1 654 0
 1263 056c 04E0     		b	.L72
 1264              	.LVL126:
 1265              	.L75:
 656:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 1266              		.loc 1 656 0
 1267 056e FFF7FEFF 		bl	HAL_GetTick
 1268              	.LVL127:
 1269 0572 001B     		subs	r0, r0, r4
 1270 0574 0228     		cmp	r0, #2
 1271 0576 32D8     		bhi	.L91
 1272              	.L72:
 1273              	.LVL128:
 1274              	.LBB212:
 1275              	.LBB213:
 1276              		.loc 2 531 0
 1277 0578 4FF00073 		mov	r3, #33554432
 1278              		.syntax unified
 1279              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1280 057c 93FAA3F3 		rbit r3, r3
 1281              	@ 0 "" 2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 45


 1282              	.LVL129:
 1283              		.thumb
 1284              		.syntax unified
 1285              	.LBE213:
 1286              	.LBE212:
 654:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1287              		.loc 1 654 0
 1288 0580 184B     		ldr	r3, .L95
 1289 0582 1A68     		ldr	r2, [r3]
 1290              	.LVL130:
 1291              	.LBB214:
 1292              	.LBB215:
 1293              		.loc 2 531 0
 1294 0584 4FF00073 		mov	r3, #33554432
 1295              		.syntax unified
 1296              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1297 0588 93FAA3F3 		rbit r3, r3
 1298              	@ 0 "" 2
 1299              	.LVL131:
 1300              		.thumb
 1301              		.syntax unified
 1302              	.LBE215:
 1303              	.LBE214:
 654:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1304              		.loc 1 654 0
 1305 058c B3FA83F3 		clz	r3, r3
 1306 0590 03F01F03 		and	r3, r3, #31
 1307 0594 22FA03F3 		lsr	r3, r2, r3
 1308 0598 13F0010F 		tst	r3, #1
 1309 059c E7D1     		bne	.L75
 1310              		.loc 1 669 0
 1311 059e 0020     		movs	r0, #0
 1312 05a0 1EE0     		b	.L11
 1313              	.LVL132:
 1314              	.L76:
 285:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1315              		.loc 1 285 0
 1316 05a2 0120     		movs	r0, #1
 1317              	.LVL133:
 1318 05a4 1CE0     		b	.L11
 1319              	.LVL134:
 1320              	.L77:
 305:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1321              		.loc 1 305 0
 1322 05a6 0320     		movs	r0, #3
 1323 05a8 1AE0     		b	.L11
 1324              	.L78:
 319:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1325              		.loc 1 319 0
 1326 05aa 0320     		movs	r0, #3
 1327 05ac 18E0     		b	.L11
 1328              	.LVL135:
 1329              	.L79:
 339:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 1330              		.loc 1 339 0
 1331 05ae 0120     		movs	r0, #1
 1332 05b0 16E0     		b	.L11
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 46


 1333              	.LVL136:
 1334              	.L80:
 364:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1335              		.loc 1 364 0
 1336 05b2 0320     		movs	r0, #3
 1337 05b4 14E0     		b	.L11
 1338              	.L81:
 384:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1339              		.loc 1 384 0
 1340 05b6 0320     		movs	r0, #3
 1341 05b8 12E0     		b	.L11
 1342              	.L82:
 410:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1343              		.loc 1 410 0
 1344 05ba 0320     		movs	r0, #3
 1345 05bc 10E0     		b	.L11
 1346              	.L83:
 430:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1347              		.loc 1 430 0
 1348 05be 0320     		movs	r0, #3
 1349 05c0 0EE0     		b	.L11
 1350              	.L84:
 454:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1351              		.loc 1 454 0
 1352 05c2 0320     		movs	r0, #3
 1353 05c4 0CE0     		b	.L11
 1354              	.L85:
 471:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1355              		.loc 1 471 0
 1356 05c6 0320     		movs	r0, #3
 1357 05c8 0AE0     		b	.L11
 1358              	.L86:
 485:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 1359              		.loc 1 485 0
 1360 05ca 0320     		movs	r0, #3
 1361 05cc 08E0     		b	.L11
 1362              	.LVL137:
 1363              	.L87:
 1364              		.loc 1 669 0
 1365 05ce 0020     		movs	r0, #0
 1366 05d0 06E0     		b	.L11
 1367              	.L88:
 665:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 1368              		.loc 1 665 0
 1369 05d2 0120     		movs	r0, #1
 1370 05d4 04E0     		b	.L11
 1371              	.LVL138:
 1372              	.L89:
 606:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1373              		.loc 1 606 0
 1374 05d6 0320     		movs	r0, #3
 1375 05d8 02E0     		b	.L11
 1376              	.LVL139:
 1377              	.L90:
 641:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1378              		.loc 1 641 0
 1379 05da 0320     		movs	r0, #3
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 47


 1380 05dc 00E0     		b	.L11
 1381              	.L91:
 658:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 1382              		.loc 1 658 0
 1383 05de 0320     		movs	r0, #3
 1384              	.LVL140:
 1385              	.L11:
 670:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1386              		.loc 1 670 0
 1387 05e0 03B0     		add	sp, sp, #12
 1388              	.LCFI4:
 1389              		.cfi_def_cfa_offset 12
 1390              		@ sp needed
 1391 05e2 30BD     		pop	{r4, r5, pc}
 1392              	.L96:
 1393              		.align	2
 1394              	.L95:
 1395 05e4 00100240 		.word	1073876992
 1396 05e8 00700040 		.word	1073770496
 1397              		.cfi_endproc
 1398              	.LFE65:
 1400              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 1401              		.align	2
 1402              		.global	HAL_RCC_MCOConfig
 1403              		.thumb
 1404              		.thumb_func
 1406              	HAL_RCC_MCOConfig:
 1407              	.LFB67:
 671:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 672:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 673:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 674:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 675:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 676:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 677:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 678:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 679:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 680:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 681:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 682:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 683:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 684:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 685:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 686:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 687:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 688:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 689:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 690:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 691:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
 692:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 693:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 694:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 695:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 696:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 697:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0;
 698:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 699:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 48


 700:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 701:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 702:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 703:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 704:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 705:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 706:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 707:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 708:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 709:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 710:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 711:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 712:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 713:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 714:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 715:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 716:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 717:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 718:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 719:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 720:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 721:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 722:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 723:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 724:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 725:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 726:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 727:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 728:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 729:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 730:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 731:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 732:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 733:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 734:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 735:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 736:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 737:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 738:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 739:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 740:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 741:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 742:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 743:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 744:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 745:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 746:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 747:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 748:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
 749:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 750:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 751:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 752:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 753:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 754:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 755:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 756:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 49


 757:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 758:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 759:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 760:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 761:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 762:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 763:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 764:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 765:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 766:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 767:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 768:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 769:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 770:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 771:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 772:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 773:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 774:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 775:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 776:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 777:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 778:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 779:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 780:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 781:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 782:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 783:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 784:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 785:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 786:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 787:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 788:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 789:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 790:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 791:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 792:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 793:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 794:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 795:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 796:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 797:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }      
 798:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 799:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 800:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 801:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 802:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 803:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 804:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 805:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 806:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 807:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 808:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 809:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 810:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 811:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 812:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 813:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 50


 814:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 815:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 816:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 817:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 818:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 819:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 820:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 821:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 822:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 823:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 824:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 825:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 826:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 827:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 828:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 829:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 830:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 831:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 832:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 833:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 834:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 835:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 836:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 837:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 838:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 839:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 840:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 841:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 842:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 843:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 844:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 845:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim   
 846:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 847:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 848:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================  
 849:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 850:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 851:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 852:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 853:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 854:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 855:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 856:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 857:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 858:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 859:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 860:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 861:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 862:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
 863:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 864:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 865:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 866:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 867:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 868:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 869:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 870:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 51


 871:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 872:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 873:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 874:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 875:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 876:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 877:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 878:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 879:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 880:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 881:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 882:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 883:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 884:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 885:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 886:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 887:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 888:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 889:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1408              		.loc 1 889 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 24
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              	.LVL141:
 1413 0000 30B5     		push	{r4, r5, lr}
 1414              	.LCFI5:
 1415              		.cfi_def_cfa_offset 12
 1416              		.cfi_offset 4, -12
 1417              		.cfi_offset 5, -8
 1418              		.cfi_offset 14, -4
 1419 0002 87B0     		sub	sp, sp, #28
 1420              	.LCFI6:
 1421              		.cfi_def_cfa_offset 40
 1422 0004 0D46     		mov	r5, r1
 890:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0};
 1423              		.loc 1 890 0
 1424 0006 0023     		movs	r3, #0
 1425 0008 0493     		str	r3, [sp, #16]
 891:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 892:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 893:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 894:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 895:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 896:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 897:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 898:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 1426              		.loc 1 898 0
 1427 000a 0223     		movs	r3, #2
 1428 000c 0393     		str	r3, [sp, #12]
 899:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 1429              		.loc 1 899 0
 1430 000e 0323     		movs	r3, #3
 1431 0010 0593     		str	r3, [sp, #20]
 900:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 901:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 1432              		.loc 1 901 0
 1433 0012 4FF48073 		mov	r3, #256
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 52


 1434 0016 0293     		str	r3, [sp, #8]
 1435              	.LBB216:
 902:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 903:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 904:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 1436              		.loc 1 904 0
 1437 0018 0A4C     		ldr	r4, .L99
 1438 001a A369     		ldr	r3, [r4, #24]
 1439 001c 43F00403 		orr	r3, r3, #4
 1440 0020 A361     		str	r3, [r4, #24]
 1441 0022 A369     		ldr	r3, [r4, #24]
 1442 0024 03F00403 		and	r3, r3, #4
 1443 0028 0193     		str	r3, [sp, #4]
 1444 002a 019B     		ldr	r3, [sp, #4]
 1445              	.LBE216:
 905:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 906:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 1446              		.loc 1 906 0
 1447 002c 02A9     		add	r1, sp, #8
 1448              	.LVL142:
 1449 002e 0648     		ldr	r0, .L99+4
 1450              	.LVL143:
 1451 0030 FFF7FEFF 		bl	HAL_GPIO_Init
 1452              	.LVL144:
 907:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 908:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
 909:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 1453              		.loc 1 909 0
 1454 0034 6368     		ldr	r3, [r4, #4]
 1455 0036 23F0E063 		bic	r3, r3, #117440512
 1456 003a 1D43     		orrs	r5, r5, r3
 1457              	.LVL145:
 1458 003c 6560     		str	r5, [r4, #4]
 910:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1459              		.loc 1 910 0
 1460 003e 07B0     		add	sp, sp, #28
 1461              	.LCFI7:
 1462              		.cfi_def_cfa_offset 12
 1463              		@ sp needed
 1464 0040 30BD     		pop	{r4, r5, pc}
 1465              	.L100:
 1466 0042 00BF     		.align	2
 1467              	.L99:
 1468 0044 00100240 		.word	1073876992
 1469 0048 00080140 		.word	1073809408
 1470              		.cfi_endproc
 1471              	.LFE67:
 1473              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 1474              		.align	2
 1475              		.global	HAL_RCC_EnableCSS
 1476              		.thumb
 1477              		.thumb_func
 1479              	HAL_RCC_EnableCSS:
 1480              	.LFB68:
 911:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 912:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 913:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 53


 914:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 915:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
 916:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 917:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 918:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 919:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 920:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 921:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 922:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1481              		.loc 1 922 0
 1482              		.cfi_startproc
 1483              		@ args = 0, pretend = 0, frame = 0
 1484              		@ frame_needed = 0, uses_anonymous_args = 0
 1485              		@ link register save eliminated.
 1486              	.LVL146:
 1487              	.LBB217:
 1488              	.LBB218:
 1489              		.loc 2 531 0
 1490 0000 4FF40023 		mov	r3, #524288
 1491              		.syntax unified
 1492              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1493 0004 93FAA3F3 		rbit r3, r3
 1494              	@ 0 "" 2
 1495              	.LVL147:
 1496              		.thumb
 1497              		.syntax unified
 1498              	.LBE218:
 1499              	.LBE217:
 923:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 1500              		.loc 1 923 0
 1501 0008 B3FA83F3 		clz	r3, r3
 1502 000c 9B00     		lsls	r3, r3, #2
 1503 000e 03F18443 		add	r3, r3, #1107296256
 1504 0012 03F58403 		add	r3, r3, #4325376
 1505 0016 0122     		movs	r2, #1
 1506 0018 1A60     		str	r2, [r3]
 1507 001a 7047     		bx	lr
 1508              		.cfi_endproc
 1509              	.LFE68:
 1511              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 1512              		.align	2
 1513              		.global	HAL_RCC_DisableCSS
 1514              		.thumb
 1515              		.thumb_func
 1517              	HAL_RCC_DisableCSS:
 1518              	.LFB69:
 924:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 925:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 926:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 927:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 928:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 929:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 930:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 931:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1519              		.loc 1 931 0
 1520              		.cfi_startproc
 1521              		@ args = 0, pretend = 0, frame = 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 54


 1522              		@ frame_needed = 0, uses_anonymous_args = 0
 1523              		@ link register save eliminated.
 1524              	.LVL148:
 1525              	.LBB219:
 1526              	.LBB220:
 1527              		.loc 2 531 0
 1528 0000 4FF40023 		mov	r3, #524288
 1529              		.syntax unified
 1530              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1531 0004 93FAA3F3 		rbit r3, r3
 1532              	@ 0 "" 2
 1533              	.LVL149:
 1534              		.thumb
 1535              		.syntax unified
 1536              	.LBE220:
 1537              	.LBE219:
 932:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 1538              		.loc 1 932 0
 1539 0008 B3FA83F3 		clz	r3, r3
 1540 000c 9B00     		lsls	r3, r3, #2
 1541 000e 03F18443 		add	r3, r3, #1107296256
 1542 0012 03F58403 		add	r3, r3, #4325376
 1543 0016 0022     		movs	r2, #0
 1544 0018 1A60     		str	r2, [r3]
 1545 001a 7047     		bx	lr
 1546              		.cfi_endproc
 1547              	.LFE69:
 1549              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 1550              		.align	2
 1551              		.global	HAL_RCC_GetSysClockFreq
 1552              		.thumb
 1553              		.thumb_func
 1555              	HAL_RCC_GetSysClockFreq:
 1556              	.LFB70:
 933:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 934:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 935:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 936:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 937:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 938:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 939:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
 940:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 941:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 942:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 943:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 944:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 945:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 946:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 947:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
 948:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 949:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 950:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 951:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
 952:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                  
 953:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 954:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
 955:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 55


 956:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 957:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 958:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 959:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 960:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 961:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         
 962:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
 963:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 964:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 965:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 1557              		.loc 1 965 0
 1558              		.cfi_startproc
 1559              		@ args = 0, pretend = 0, frame = 24
 1560              		@ frame_needed = 0, uses_anonymous_args = 0
 1561              		@ link register save eliminated.
 1562 0000 30B4     		push	{r4, r5}
 1563              	.LCFI8:
 1564              		.cfi_def_cfa_offset 8
 1565              		.cfi_offset 4, -8
 1566              		.cfi_offset 5, -4
 1567 0002 86B0     		sub	sp, sp, #24
 1568              	.LCFI9:
 1569              		.cfi_def_cfa_offset 32
 966:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(RCC_CFGR2_PREDIV1SRC)
 967:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[12] = {0, 0, 4,  5,  6,  7,  8,  9, 0, 0, 0, 13};
 968:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 969:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 970:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = { 2,  3,  4,  5,  6,  7,  8,  9, 10, 11, 12, 13, 14, 15, 1
 1570              		.loc 1 970 0
 1571 0004 1F4D     		ldr	r5, .L110
 1572 0006 02AC     		add	r4, sp, #8
 1573 0008 2868     		ldr	r0, [r5]	@ unaligned
 1574 000a 6968     		ldr	r1, [r5, #4]	@ unaligned
 1575 000c AA68     		ldr	r2, [r5, #8]	@ unaligned
 1576 000e EB68     		ldr	r3, [r5, #12]	@ unaligned
 1577 0010 0FC4     		stmia	r4!, {r0, r1, r2, r3}
 971:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 972:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = { 1, 2,  3,  4,  5,  6,  7,  8, 9,10, 11, 12, 13, 14, 15, 
 973:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 974:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = { 1, 2};
 1578              		.loc 1 974 0
 1579 0012 2B8A     		ldrh	r3, [r5, #16]	@ unaligned
 1580 0014 ADF80430 		strh	r3, [sp, #4]	@ unaligned
 1581              	.LVL150:
 975:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 976:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 977:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 978:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0, prediv = 0, pllclk = 0, pllmul = 0;
 979:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0;
 980:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 981:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0, pll2mul = 0;
 982:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 983:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 984:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
 1582              		.loc 1 984 0
 1583 0018 1B4B     		ldr	r3, .L110+4
 1584 001a 5B68     		ldr	r3, [r3, #4]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 56


 1585              	.LVL151:
 985:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 986:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 987:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
 1586              		.loc 1 987 0
 1587 001c 03F00C02 		and	r2, r3, #12
 1588 0020 082A     		cmp	r2, #8
 1589 0022 2AD1     		bne	.L108
 988:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 989:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
 990:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 991:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
 992:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 993:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 994:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
 995:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 996:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> POSITION_VAL(RCC_CFGR_PL
 1590              		.loc 1 996 0
 1591 0024 03F47011 		and	r1, r3, #3932160
 1592              	.LVL152:
 1593              	.LBB221:
 1594              	.LBB222:
 1595              		.loc 2 531 0
 1596 0028 4FF47012 		mov	r2, #3932160
 1597              		.syntax unified
 1598              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1599 002c 92FAA2F2 		rbit r2, r2
 1600              	@ 0 "" 2
 1601              	.LVL153:
 1602              		.thumb
 1603              		.syntax unified
 1604              	.LBE222:
 1605              	.LBE221:
 1606              		.loc 1 996 0
 1607 0030 B2FA82F2 		clz	r2, r2
 1608 0034 21FA02F2 		lsr	r2, r1, r2
 1609 0038 06A9     		add	r1, sp, #24
 1610 003a 0A44     		add	r2, r2, r1
 1611 003c 12F8102C 		ldrb	r2, [r2, #-16]	@ zero_extendqisi2
 1612              	.LVL154:
 997:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 1613              		.loc 1 997 0
 1614 0040 13F4803F 		tst	r3, #65536
 1615 0044 15D0     		beq	.L106
 998:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 999:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1000:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> POSITION_VAL(RCC_
1001:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1002:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> POSITION_VAL(RCC_C
 1616              		.loc 1 1002 0
 1617 0046 104B     		ldr	r3, .L110+4
 1618              	.LVL155:
 1619 0048 5B68     		ldr	r3, [r3, #4]
 1620 004a 03F40031 		and	r1, r3, #131072
 1621              	.LVL156:
 1622              	.LBB223:
 1623              	.LBB224:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 57


 1624              		.loc 2 531 0
 1625 004e 4FF40033 		mov	r3, #131072
 1626              		.syntax unified
 1627              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1628 0052 93FAA3F3 		rbit r3, r3
 1629              	@ 0 "" 2
 1630              	.LVL157:
 1631              		.thumb
 1632              		.syntax unified
 1633              	.LBE224:
 1634              	.LBE223:
 1635              		.loc 1 1002 0
 1636 0056 B3FA83F3 		clz	r3, r3
 1637 005a 21FA03F3 		lsr	r3, r1, r3
 1638 005e 06A9     		add	r1, sp, #24
 1639 0060 0B44     		add	r3, r3, r1
 1640 0062 13F8140C 		ldrb	r0, [r3, #-20]	@ zero_extendqisi2
 1641              	.LVL158:
1003:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1004:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1005:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1006:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1007:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1008:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1009:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1010:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> POSITION_VAL(RCC_CFGR2_PREDIV2)) + 1;
1011:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> POSITION_VAL(RCC_CFGR2_PLL2MUL)) + 2;
1012:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((((HSE_VALUE / prediv2) * pll2mul) / prediv) * pllmul);
1013:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1014:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1015:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1016:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1017:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1018:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1019:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
1020:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1021:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1022:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> POSITION_VAL(RCC_CFGR_P
1023:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1024:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1025:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1026:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1027:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1028:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
 1642              		.loc 1 1028 0
 1643 0066 094B     		ldr	r3, .L110+8
 1644 0068 B3FBF0F0 		udiv	r0, r3, r0
 1645              	.LVL159:
 1646 006c 00FB02F0 		mul	r0, r0, r2
 1647              	.LVL160:
 1648 0070 04E0     		b	.L104
 1649              	.LVL161:
 1650              	.L106:
1029:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1030:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1031:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1032:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 58


1033:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1034:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
 1651              		.loc 1 1034 0
 1652 0072 0748     		ldr	r0, .L110+12
 1653 0074 00FB02F0 		mul	r0, r0, r2
 1654              	.LVL162:
 1655 0078 00E0     		b	.L104
 1656              	.LVL163:
 1657              	.L108:
 991:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 1658              		.loc 1 991 0
 1659 007a 0448     		ldr	r0, .L110+8
 1660              	.LVL164:
 1661              	.L104:
1035:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1036:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
1037:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1038:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1039:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1040:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1041:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1042:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1043:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1044:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1045:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1046:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
1047:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1662              		.loc 1 1047 0
 1663 007c 06B0     		add	sp, sp, #24
 1664              	.LCFI10:
 1665              		.cfi_def_cfa_offset 8
 1666              		@ sp needed
 1667 007e 30BC     		pop	{r4, r5}
 1668              	.LCFI11:
 1669              		.cfi_restore 5
 1670              		.cfi_restore 4
 1671              		.cfi_def_cfa_offset 0
 1672 0080 7047     		bx	lr
 1673              	.L111:
 1674 0082 00BF     		.align	2
 1675              	.L110:
 1676 0084 00000000 		.word	.LANCHOR0
 1677 0088 00100240 		.word	1073876992
 1678 008c 00127A00 		.word	8000000
 1679 0090 00093D00 		.word	4000000
 1680              		.cfi_endproc
 1681              	.LFE70:
 1683              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 1684              		.align	2
 1685              		.global	HAL_RCC_ClockConfig
 1686              		.thumb
 1687              		.thumb_func
 1689              	HAL_RCC_ClockConfig:
 1690              	.LFB66:
 696:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0;
 1691              		.loc 1 696 0
 1692              		.cfi_startproc
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 59


 1693              		@ args = 0, pretend = 0, frame = 0
 1694              		@ frame_needed = 0, uses_anonymous_args = 0
 1695              	.LVL165:
 1696 0000 70B5     		push	{r4, r5, r6, lr}
 1697              	.LCFI12:
 1698              		.cfi_def_cfa_offset 16
 1699              		.cfi_offset 4, -16
 1700              		.cfi_offset 5, -12
 1701              		.cfi_offset 6, -8
 1702              		.cfi_offset 14, -4
 1703              	.LVL166:
 710:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1704              		.loc 1 710 0
 1705 0002 744B     		ldr	r3, .L146
 1706 0004 1B68     		ldr	r3, [r3]
 1707 0006 03F00703 		and	r3, r3, #7
 1708 000a 8B42     		cmp	r3, r1
 1709 000c 0BD2     		bcs	.L113
 713:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1710              		.loc 1 713 0
 1711 000e 714A     		ldr	r2, .L146
 1712 0010 1368     		ldr	r3, [r2]
 1713 0012 23F00703 		bic	r3, r3, #7
 1714 0016 0B43     		orrs	r3, r3, r1
 1715 0018 1360     		str	r3, [r2]
 717:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1716              		.loc 1 717 0
 1717 001a 1368     		ldr	r3, [r2]
 1718 001c 03F00703 		and	r3, r3, #7
 1719 0020 9942     		cmp	r1, r3
 1720 0022 40F0C680 		bne	.L136
 1721              	.L113:
 725:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1722              		.loc 1 725 0
 1723 0026 0368     		ldr	r3, [r0]
 1724 0028 13F0020F 		tst	r3, #2
 1725 002c 06D0     		beq	.L115
 728:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1726              		.loc 1 728 0
 1727 002e 6A4C     		ldr	r4, .L146+4
 1728 0030 6368     		ldr	r3, [r4, #4]
 1729 0032 23F0F002 		bic	r2, r3, #240
 1730 0036 8368     		ldr	r3, [r0, #8]
 1731 0038 1343     		orrs	r3, r3, r2
 1732 003a 6360     		str	r3, [r4, #4]
 1733              	.L115:
 1734 003c 0D46     		mov	r5, r1
 1735 003e 0446     		mov	r4, r0
 732:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1736              		.loc 1 732 0
 1737 0040 0368     		ldr	r3, [r0]
 1738 0042 13F0010F 		tst	r3, #1
 1739 0046 75D0     		beq	.L116
 737:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1740              		.loc 1 737 0
 1741 0048 4268     		ldr	r2, [r0, #4]
 1742 004a 012A     		cmp	r2, #1
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 60


 1743 004c 13D1     		bne	.L117
 1744              	.LVL167:
 1745              	.LBB225:
 1746              	.LBB226:
 1747              		.loc 2 531 0
 1748 004e 4FF40033 		mov	r3, #131072
 1749              		.syntax unified
 1750              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1751 0052 93FAA3F3 		rbit r3, r3
 1752              	@ 0 "" 2
 1753              	.LVL168:
 1754              		.thumb
 1755              		.syntax unified
 1756              	.LBE226:
 1757              	.LBE225:
 740:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1758              		.loc 1 740 0
 1759 0056 604B     		ldr	r3, .L146+4
 1760 0058 1968     		ldr	r1, [r3]
 1761              	.LVL169:
 1762              	.LBB227:
 1763              	.LBB228:
 1764              		.loc 2 531 0
 1765 005a 4FF40033 		mov	r3, #131072
 1766              		.syntax unified
 1767              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1768 005e 93FAA3F3 		rbit r3, r3
 1769              	@ 0 "" 2
 1770              	.LVL170:
 1771              		.thumb
 1772              		.syntax unified
 1773              	.LBE228:
 1774              	.LBE227:
 740:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1775              		.loc 1 740 0
 1776 0062 B3FA83F3 		clz	r3, r3
 1777 0066 03F01F03 		and	r3, r3, #31
 1778 006a 21FA03F3 		lsr	r3, r1, r3
 1779 006e 13F0010F 		tst	r3, #1
 1780 0072 27D1     		bne	.L120
 1781 0074 9FE0     		b	.L137
 1782              	.LVL171:
 1783              	.L117:
 746:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1784              		.loc 1 746 0
 1785 0076 022A     		cmp	r2, #2
 1786 0078 13D1     		bne	.L121
 1787              	.LVL172:
 1788              	.LBB229:
 1789              	.LBB230:
 1790              		.loc 2 531 0
 1791 007a 4FF00073 		mov	r3, #33554432
 1792              		.syntax unified
 1793              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1794 007e 93FAA3F3 		rbit r3, r3
 1795              	@ 0 "" 2
 1796              	.LVL173:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 61


 1797              		.thumb
 1798              		.syntax unified
 1799              	.LBE230:
 1800              	.LBE229:
 749:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1801              		.loc 1 749 0
 1802 0082 554B     		ldr	r3, .L146+4
 1803 0084 1968     		ldr	r1, [r3]
 1804              	.LVL174:
 1805              	.LBB231:
 1806              	.LBB232:
 1807              		.loc 2 531 0
 1808 0086 4FF00073 		mov	r3, #33554432
 1809              		.syntax unified
 1810              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1811 008a 93FAA3F3 		rbit r3, r3
 1812              	@ 0 "" 2
 1813              	.LVL175:
 1814              		.thumb
 1815              		.syntax unified
 1816              	.LBE232:
 1817              	.LBE231:
 749:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1818              		.loc 1 749 0
 1819 008e B3FA83F3 		clz	r3, r3
 1820 0092 03F01F03 		and	r3, r3, #31
 1821 0096 21FA03F3 		lsr	r3, r1, r3
 1822 009a 13F0010F 		tst	r3, #1
 1823 009e 11D1     		bne	.L120
 1824 00a0 8BE0     		b	.L138
 1825              	.LVL176:
 1826              	.L121:
 1827              	.LBB233:
 1828              	.LBB234:
 1829              		.loc 2 531 0
 1830 00a2 0223     		movs	r3, #2
 1831              		.syntax unified
 1832              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1833 00a4 93FAA3F3 		rbit r3, r3
 1834              	@ 0 "" 2
 1835              	.LVL177:
 1836              		.thumb
 1837              		.syntax unified
 1838              	.LBE234:
 1839              	.LBE233:
 758:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1840              		.loc 1 758 0
 1841 00a8 4B4B     		ldr	r3, .L146+4
 1842 00aa 1968     		ldr	r1, [r3]
 1843              	.LVL178:
 1844              	.LBB235:
 1845              	.LBB236:
 1846              		.loc 2 531 0
 1847 00ac 0223     		movs	r3, #2
 1848              		.syntax unified
 1849              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1850 00ae 93FAA3F3 		rbit r3, r3
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 62


 1851              	@ 0 "" 2
 1852              	.LVL179:
 1853              		.thumb
 1854              		.syntax unified
 1855              	.LBE236:
 1856              	.LBE235:
 758:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1857              		.loc 1 758 0
 1858 00b2 B3FA83F3 		clz	r3, r3
 1859 00b6 03F01F03 		and	r3, r3, #31
 1860 00ba 21FA03F3 		lsr	r3, r1, r3
 1861 00be 13F0010F 		tst	r3, #1
 1862 00c2 7CD0     		beq	.L139
 1863              	.L120:
 763:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1864              		.loc 1 763 0
 1865 00c4 4449     		ldr	r1, .L146+4
 1866 00c6 4B68     		ldr	r3, [r1, #4]
 1867 00c8 23F00303 		bic	r3, r3, #3
 1868 00cc 1343     		orrs	r3, r3, r2
 1869 00ce 4B60     		str	r3, [r1, #4]
 766:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1870              		.loc 1 766 0
 1871 00d0 FFF7FEFF 		bl	HAL_GetTick
 1872              	.LVL180:
 1873 00d4 0646     		mov	r6, r0
 1874              	.LVL181:
 768:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1875              		.loc 1 768 0
 1876 00d6 6368     		ldr	r3, [r4, #4]
 1877 00d8 012B     		cmp	r3, #1
 1878 00da 0ED1     		bne	.L144
 1879 00dc 06E0     		b	.L126
 1880              	.LVL182:
 1881              	.L128:
 772:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1882              		.loc 1 772 0
 1883 00de FFF7FEFF 		bl	HAL_GetTick
 1884              	.LVL183:
 1885 00e2 801B     		subs	r0, r0, r6
 1886 00e4 41F28833 		movw	r3, #5000
 1887 00e8 9842     		cmp	r0, r3
 1888 00ea 6AD8     		bhi	.L140
 1889              	.L126:
 770:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1890              		.loc 1 770 0
 1891 00ec 3A4B     		ldr	r3, .L146+4
 1892 00ee 5B68     		ldr	r3, [r3, #4]
 1893 00f0 03F00C03 		and	r3, r3, #12
 1894 00f4 042B     		cmp	r3, #4
 1895 00f6 F2D1     		bne	.L128
 1896 00f8 1CE0     		b	.L116
 1897              	.LVL184:
 1898              	.L144:
 778:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1899              		.loc 1 778 0
 1900 00fa 022B     		cmp	r3, #2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 63


 1901 00fc 15D1     		bne	.L130
 1902 00fe 06E0     		b	.L129
 1903              	.LVL185:
 1904              	.L131:
 782:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1905              		.loc 1 782 0
 1906 0100 FFF7FEFF 		bl	HAL_GetTick
 1907              	.LVL186:
 1908 0104 801B     		subs	r0, r0, r6
 1909 0106 41F28833 		movw	r3, #5000
 1910 010a 9842     		cmp	r0, r3
 1911 010c 5BD8     		bhi	.L141
 1912              	.L129:
 780:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1913              		.loc 1 780 0
 1914 010e 324B     		ldr	r3, .L146+4
 1915 0110 5B68     		ldr	r3, [r3, #4]
 1916 0112 03F00C03 		and	r3, r3, #12
 1917 0116 082B     		cmp	r3, #8
 1918 0118 F2D1     		bne	.L131
 1919 011a 0BE0     		b	.L116
 1920              	.L132:
 792:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1921              		.loc 1 792 0
 1922 011c FFF7FEFF 		bl	HAL_GetTick
 1923              	.LVL187:
 1924 0120 801B     		subs	r0, r0, r6
 1925 0122 41F28833 		movw	r3, #5000
 1926 0126 9842     		cmp	r0, r3
 1927 0128 4FD8     		bhi	.L142
 1928              	.L130:
 790:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1929              		.loc 1 790 0
 1930 012a 2B4B     		ldr	r3, .L146+4
 1931 012c 5B68     		ldr	r3, [r3, #4]
 1932 012e 13F00C0F 		tst	r3, #12
 1933 0132 F3D1     		bne	.L132
 1934              	.LVL188:
 1935              	.L116:
 801:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 1936              		.loc 1 801 0
 1937 0134 274B     		ldr	r3, .L146
 1938 0136 1B68     		ldr	r3, [r3]
 1939 0138 03F00703 		and	r3, r3, #7
 1940 013c 9D42     		cmp	r5, r3
 1941 013e 0AD2     		bcs	.L133
 804:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1942              		.loc 1 804 0
 1943 0140 244A     		ldr	r2, .L146
 1944 0142 1368     		ldr	r3, [r2]
 1945 0144 23F00703 		bic	r3, r3, #7
 1946 0148 2B43     		orrs	r3, r3, r5
 1947 014a 1360     		str	r3, [r2]
 808:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1948              		.loc 1 808 0
 1949 014c 1368     		ldr	r3, [r2]
 1950 014e 03F00703 		and	r3, r3, #7
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 64


 1951 0152 9D42     		cmp	r5, r3
 1952 0154 3BD1     		bne	.L143
 1953              	.L133:
 816:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1954              		.loc 1 816 0
 1955 0156 2368     		ldr	r3, [r4]
 1956 0158 13F0040F 		tst	r3, #4
 1957 015c 06D0     		beq	.L134
 819:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1958              		.loc 1 819 0
 1959 015e 1E49     		ldr	r1, .L146+4
 1960 0160 4B68     		ldr	r3, [r1, #4]
 1961 0162 23F4E062 		bic	r2, r3, #1792
 1962 0166 E368     		ldr	r3, [r4, #12]
 1963 0168 1343     		orrs	r3, r3, r2
 1964 016a 4B60     		str	r3, [r1, #4]
 1965              	.L134:
 823:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1966              		.loc 1 823 0
 1967 016c 2368     		ldr	r3, [r4]
 1968 016e 13F0080F 		tst	r3, #8
 1969 0172 07D0     		beq	.L135
 826:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1970              		.loc 1 826 0
 1971 0174 184A     		ldr	r2, .L146+4
 1972 0176 5368     		ldr	r3, [r2, #4]
 1973 0178 23F46053 		bic	r3, r3, #14336
 1974 017c 2169     		ldr	r1, [r4, #16]
 1975 017e 43EAC103 		orr	r3, r3, r1, lsl #3
 1976 0182 5360     		str	r3, [r2, #4]
 1977              	.L135:
 830:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1978              		.loc 1 830 0
 1979 0184 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1980              	.LVL189:
 1981 0188 134B     		ldr	r3, .L146+4
 1982 018a 5B68     		ldr	r3, [r3, #4]
 1983 018c 03F0F002 		and	r2, r3, #240
 1984              	.LVL190:
 1985              	.LBB237:
 1986              	.LBB238:
 1987              		.loc 2 531 0
 1988 0190 F023     		movs	r3, #240
 1989              		.syntax unified
 1990              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 1991 0192 93FAA3F3 		rbit r3, r3
 1992              	@ 0 "" 2
 1993              	.LVL191:
 1994              		.thumb
 1995              		.syntax unified
 1996              	.LBE238:
 1997              	.LBE237:
 830:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1998              		.loc 1 830 0
 1999 0196 B3FA83F3 		clz	r3, r3
 2000 019a 22FA03F3 		lsr	r3, r2, r3
 2001 019e 0F4A     		ldr	r2, .L146+8
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 65


 2002 01a0 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 2003 01a2 D840     		lsrs	r0, r0, r3
 2004 01a4 0E4B     		ldr	r3, .L146+12
 2005 01a6 1860     		str	r0, [r3]
 833:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 2006              		.loc 1 833 0
 2007 01a8 0020     		movs	r0, #0
 2008 01aa FFF7FEFF 		bl	HAL_InitTick
 2009              	.LVL192:
 835:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2010              		.loc 1 835 0
 2011 01ae 0020     		movs	r0, #0
 2012 01b0 70BD     		pop	{r4, r5, r6, pc}
 2013              	.LVL193:
 2014              	.L136:
 719:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 2015              		.loc 1 719 0
 2016 01b2 0120     		movs	r0, #1
 2017              	.LVL194:
 2018 01b4 70BD     		pop	{r4, r5, r6, pc}
 2019              	.LVL195:
 2020              	.L137:
 742:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 2021              		.loc 1 742 0
 2022 01b6 0120     		movs	r0, #1
 2023              	.LVL196:
 2024 01b8 70BD     		pop	{r4, r5, r6, pc}
 2025              	.LVL197:
 2026              	.L138:
 751:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 2027              		.loc 1 751 0
 2028 01ba 0120     		movs	r0, #1
 2029              	.LVL198:
 2030 01bc 70BD     		pop	{r4, r5, r6, pc}
 2031              	.LVL199:
 2032              	.L139:
 760:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 2033              		.loc 1 760 0
 2034 01be 0120     		movs	r0, #1
 2035              	.LVL200:
 2036 01c0 70BD     		pop	{r4, r5, r6, pc}
 2037              	.LVL201:
 2038              	.L140:
 774:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 2039              		.loc 1 774 0
 2040 01c2 0320     		movs	r0, #3
 2041 01c4 70BD     		pop	{r4, r5, r6, pc}
 2042              	.LVL202:
 2043              	.L141:
 784:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 2044              		.loc 1 784 0
 2045 01c6 0320     		movs	r0, #3
 2046 01c8 70BD     		pop	{r4, r5, r6, pc}
 2047              	.LVL203:
 2048              	.L142:
 794:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 2049              		.loc 1 794 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 66


 2050 01ca 0320     		movs	r0, #3
 2051 01cc 70BD     		pop	{r4, r5, r6, pc}
 2052              	.LVL204:
 2053              	.L143:
 810:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 2054              		.loc 1 810 0
 2055 01ce 0120     		movs	r0, #1
 836:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 2056              		.loc 1 836 0
 2057 01d0 70BD     		pop	{r4, r5, r6, pc}
 2058              	.LVL205:
 2059              	.L147:
 2060 01d2 00BF     		.align	2
 2061              	.L146:
 2062 01d4 00200240 		.word	1073881088
 2063 01d8 00100240 		.word	1073876992
 2064 01dc 00000000 		.word	AHBPrescTable
 2065 01e0 00000000 		.word	SystemCoreClock
 2066              		.cfi_endproc
 2067              	.LFE66:
 2069              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
 2070              		.align	2
 2071              		.global	HAL_RCC_GetHCLKFreq
 2072              		.thumb
 2073              		.thumb_func
 2075              	HAL_RCC_GetHCLKFreq:
 2076              	.LFB71:
1048:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1049:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1050:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1051:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1052:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1053:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * 
1054:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1055:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1056:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1057:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1058:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1059:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2077              		.loc 1 1059 0
 2078              		.cfi_startproc
 2079              		@ args = 0, pretend = 0, frame = 0
 2080              		@ frame_needed = 0, uses_anonymous_args = 0
 2081              		@ link register save eliminated.
1060:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
1061:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 2082              		.loc 1 1061 0
 2083 0000 014B     		ldr	r3, .L149
 2084 0002 1868     		ldr	r0, [r3]
 2085 0004 7047     		bx	lr
 2086              	.L150:
 2087 0006 00BF     		.align	2
 2088              	.L149:
 2089 0008 00000000 		.word	SystemCoreClock
 2090              		.cfi_endproc
 2091              	.LFE71:
 2093              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 67


 2094              		.align	2
 2095              		.global	HAL_RCC_GetPCLK1Freq
 2096              		.thumb
 2097              		.thumb_func
 2099              	HAL_RCC_GetPCLK1Freq:
 2100              	.LFB72:
1062:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1063:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1064:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1065:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1066:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1067:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1068:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1069:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1070:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2101              		.loc 1 1070 0
 2102              		.cfi_startproc
 2103              		@ args = 0, pretend = 0, frame = 0
 2104              		@ frame_needed = 0, uses_anonymous_args = 0
 2105 0000 08B5     		push	{r3, lr}
 2106              	.LCFI13:
 2107              		.cfi_def_cfa_offset 8
 2108              		.cfi_offset 3, -8
 2109              		.cfi_offset 14, -4
1071:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1072:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_BIT
 2110              		.loc 1 1072 0
 2111 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2112              	.LVL206:
 2113 0006 084B     		ldr	r3, .L153
 2114 0008 5B68     		ldr	r3, [r3, #4]
 2115 000a 03F4E062 		and	r2, r3, #1792
 2116              	.LVL207:
 2117              	.LBB239:
 2118              	.LBB240:
 2119              		.loc 2 531 0
 2120 000e 4FF4E063 		mov	r3, #1792
 2121              		.syntax unified
 2122              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 2123 0012 93FAA3F3 		rbit r3, r3
 2124              	@ 0 "" 2
 2125              	.LVL208:
 2126              		.thumb
 2127              		.syntax unified
 2128              	.LBE240:
 2129              	.LBE239:
 2130              		.loc 1 1072 0
 2131 0016 B3FA83F3 		clz	r3, r3
 2132 001a 22FA03F3 		lsr	r3, r2, r3
 2133 001e 034A     		ldr	r2, .L153+4
 2134 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
1073:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
 2135              		.loc 1 1073 0
 2136 0022 D840     		lsrs	r0, r0, r3
 2137 0024 08BD     		pop	{r3, pc}
 2138              	.L154:
 2139 0026 00BF     		.align	2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 68


 2140              	.L153:
 2141 0028 00100240 		.word	1073876992
 2142 002c 00000000 		.word	APBPrescTable
 2143              		.cfi_endproc
 2144              	.LFE72:
 2146              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 2147              		.align	2
 2148              		.global	HAL_RCC_GetPCLK2Freq
 2149              		.thumb
 2150              		.thumb_func
 2152              	HAL_RCC_GetPCLK2Freq:
 2153              	.LFB73:
1074:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1075:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1076:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1077:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1078:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1079:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1080:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1081:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1082:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2154              		.loc 1 1082 0
 2155              		.cfi_startproc
 2156              		@ args = 0, pretend = 0, frame = 0
 2157              		@ frame_needed = 0, uses_anonymous_args = 0
 2158 0000 08B5     		push	{r3, lr}
 2159              	.LCFI14:
 2160              		.cfi_def_cfa_offset 8
 2161              		.cfi_offset 3, -8
 2162              		.cfi_offset 14, -4
1083:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1084:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_BITN
 2163              		.loc 1 1084 0
 2164 0002 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 2165              	.LVL209:
 2166 0006 084B     		ldr	r3, .L157
 2167 0008 5B68     		ldr	r3, [r3, #4]
 2168 000a 03F46052 		and	r2, r3, #14336
 2169              	.LVL210:
 2170              	.LBB241:
 2171              	.LBB242:
 2172              		.loc 2 531 0
 2173 000e 4FF46053 		mov	r3, #14336
 2174              		.syntax unified
 2175              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 2176 0012 93FAA3F3 		rbit r3, r3
 2177              	@ 0 "" 2
 2178              	.LVL211:
 2179              		.thumb
 2180              		.syntax unified
 2181              	.LBE242:
 2182              	.LBE241:
 2183              		.loc 1 1084 0
 2184 0016 B3FA83F3 		clz	r3, r3
 2185 001a 22FA03F3 		lsr	r3, r2, r3
 2186 001e 034A     		ldr	r2, .L157+4
 2187 0020 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 69


1085:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
 2188              		.loc 1 1085 0
 2189 0022 D840     		lsrs	r0, r0, r3
 2190 0024 08BD     		pop	{r3, pc}
 2191              	.L158:
 2192 0026 00BF     		.align	2
 2193              	.L157:
 2194 0028 00100240 		.word	1073876992
 2195 002c 00000000 		.word	APBPrescTable
 2196              		.cfi_endproc
 2197              	.LFE73:
 2199              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 2200              		.align	2
 2201              		.global	HAL_RCC_GetOscConfig
 2202              		.thumb
 2203              		.thumb_func
 2205              	HAL_RCC_GetOscConfig:
 2206              	.LFB74:
1086:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1087:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1088:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1089:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1090:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1091:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1092:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1093:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1094:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1095:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2207              		.loc 1 1095 0
 2208              		.cfi_startproc
 2209              		@ args = 0, pretend = 0, frame = 0
 2210              		@ frame_needed = 0, uses_anonymous_args = 0
 2211              		@ link register save eliminated.
 2212              	.LVL212:
1096:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1097:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1098:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1099:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1100:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
 2213              		.loc 1 1100 0
 2214 0000 0F23     		movs	r3, #15
 2215 0002 0360     		str	r3, [r0]
1101:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1102:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1103:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1104:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1105:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1106:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1107:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1108:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1109:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
 2216              		.loc 1 1109 0
 2217 0004 2E4B     		ldr	r3, .L172
 2218 0006 1B68     		ldr	r3, [r3]
 2219 0008 13F4802F 		tst	r3, #262144
 2220 000c 03D0     		beq	.L160
1110:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 70


1111:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
 2221              		.loc 1 1111 0
 2222 000e 4FF4A023 		mov	r3, #327680
 2223 0012 4360     		str	r3, [r0, #4]
 2224 0014 0AE0     		b	.L161
 2225              	.L160:
1112:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1113:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
 2226              		.loc 1 1113 0
 2227 0016 2A4B     		ldr	r3, .L172
 2228 0018 1B68     		ldr	r3, [r3]
 2229 001a 13F4803F 		tst	r3, #65536
 2230 001e 03D0     		beq	.L162
1114:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1115:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
 2231              		.loc 1 1115 0
 2232 0020 4FF48033 		mov	r3, #65536
 2233 0024 4360     		str	r3, [r0, #4]
 2234 0026 01E0     		b	.L161
 2235              	.L162:
1116:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1117:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1118:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1119:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
 2236              		.loc 1 1119 0
 2237 0028 0023     		movs	r3, #0
 2238 002a 4360     		str	r3, [r0, #4]
 2239              	.L161:
1120:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1121:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
 2240              		.loc 1 1121 0
 2241 002c 244A     		ldr	r2, .L172
 2242 002e 5368     		ldr	r3, [r2, #4]
 2243 0030 03F40033 		and	r3, r3, #131072
 2244 0034 8360     		str	r3, [r0, #8]
1122:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1123:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1124:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
 2245              		.loc 1 1124 0
 2246 0036 1368     		ldr	r3, [r2]
 2247 0038 13F0010F 		tst	r3, #1
 2248 003c 02D0     		beq	.L163
1125:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1126:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
 2249              		.loc 1 1126 0
 2250 003e 0123     		movs	r3, #1
 2251 0040 0361     		str	r3, [r0, #16]
 2252 0042 01E0     		b	.L164
 2253              	.L163:
1127:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1128:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1129:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1130:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
 2254              		.loc 1 1130 0
 2255 0044 0023     		movs	r3, #0
 2256 0046 0361     		str	r3, [r0, #16]
 2257              	.L164:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 71


1131:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1132:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1133:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> POSITION_VAL(RC
 2258              		.loc 1 1133 0
 2259 0048 1D49     		ldr	r1, .L172
 2260 004a 0B68     		ldr	r3, [r1]
 2261 004c 03F0F802 		and	r2, r3, #248
 2262              	.LVL213:
 2263              	.LBB243:
 2264              	.LBB244:
 2265              		.loc 2 531 0
 2266 0050 F823     		movs	r3, #248
 2267              		.syntax unified
 2268              	@ 531 "./Drivers_V1.0.4/CMSIS/Include/cmsis_gcc.h" 1
 2269 0052 93FAA3F3 		rbit r3, r3
 2270              	@ 0 "" 2
 2271              	.LVL214:
 2272              		.thumb
 2273              		.syntax unified
 2274              	.LBE244:
 2275              	.LBE243:
 2276              		.loc 1 1133 0
 2277 0056 B3FA83F3 		clz	r3, r3
 2278 005a 22FA03F3 		lsr	r3, r2, r3
 2279 005e 4361     		str	r3, [r0, #20]
1134:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1135:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1136:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
 2280              		.loc 1 1136 0
 2281 0060 0B6A     		ldr	r3, [r1, #32]
 2282 0062 13F0040F 		tst	r3, #4
 2283 0066 02D0     		beq	.L165
1137:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1138:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
 2284              		.loc 1 1138 0
 2285 0068 0523     		movs	r3, #5
 2286 006a C360     		str	r3, [r0, #12]
 2287 006c 09E0     		b	.L166
 2288              	.L165:
1139:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1140:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
 2289              		.loc 1 1140 0
 2290 006e 144B     		ldr	r3, .L172
 2291 0070 1B6A     		ldr	r3, [r3, #32]
 2292 0072 13F0010F 		tst	r3, #1
 2293 0076 02D0     		beq	.L167
1141:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1142:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
 2294              		.loc 1 1142 0
 2295 0078 0123     		movs	r3, #1
 2296 007a C360     		str	r3, [r0, #12]
 2297 007c 01E0     		b	.L166
 2298              	.L167:
1143:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1144:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1145:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1146:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 72


 2299              		.loc 1 1146 0
 2300 007e 0023     		movs	r3, #0
 2301 0080 C360     		str	r3, [r0, #12]
 2302              	.L166:
1147:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1148:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1149:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1150:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
 2303              		.loc 1 1150 0
 2304 0082 0F4B     		ldr	r3, .L172
 2305 0084 5B6A     		ldr	r3, [r3, #36]
 2306 0086 13F0010F 		tst	r3, #1
 2307 008a 02D0     		beq	.L168
1151:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1152:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
 2308              		.loc 1 1152 0
 2309 008c 0123     		movs	r3, #1
 2310 008e 8361     		str	r3, [r0, #24]
 2311 0090 01E0     		b	.L169
 2312              	.L168:
1153:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1154:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1155:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1156:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
 2313              		.loc 1 1156 0
 2314 0092 0023     		movs	r3, #0
 2315 0094 8361     		str	r3, [r0, #24]
 2316              	.L169:
1157:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1158:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1159:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1160:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1161:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
 2317              		.loc 1 1161 0
 2318 0096 0A4B     		ldr	r3, .L172
 2319 0098 1B68     		ldr	r3, [r3]
 2320 009a 13F0807F 		tst	r3, #16777216
 2321 009e 02D0     		beq	.L170
1162:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1163:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
 2322              		.loc 1 1163 0
 2323 00a0 0223     		movs	r3, #2
 2324 00a2 C361     		str	r3, [r0, #28]
 2325 00a4 01E0     		b	.L171
 2326              	.L170:
1164:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1165:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1166:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1167:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
 2327              		.loc 1 1167 0
 2328 00a6 0123     		movs	r3, #1
 2329 00a8 C361     		str	r3, [r0, #28]
 2330              	.L171:
1168:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1169:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
 2331              		.loc 1 1169 0
 2332 00aa 054A     		ldr	r2, .L172
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 73


 2333 00ac 5368     		ldr	r3, [r2, #4]
 2334 00ae 03F48033 		and	r3, r3, #65536
 2335 00b2 0362     		str	r3, [r0, #32]
1170:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 2336              		.loc 1 1170 0
 2337 00b4 5368     		ldr	r3, [r2, #4]
 2338 00b6 03F47013 		and	r3, r3, #3932160
 2339 00ba 4362     		str	r3, [r0, #36]
 2340 00bc 7047     		bx	lr
 2341              	.L173:
 2342 00be 00BF     		.align	2
 2343              	.L172:
 2344 00c0 00100240 		.word	1073876992
 2345              		.cfi_endproc
 2346              	.LFE74:
 2348              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 2349              		.align	2
 2350              		.global	HAL_RCC_GetClockConfig
 2351              		.thumb
 2352              		.thumb_func
 2354              	HAL_RCC_GetClockConfig:
 2355              	.LFB75:
1171:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1172:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1173:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1174:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1175:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1176:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1177:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1178:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1179:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1180:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1181:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1182:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1183:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1184:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1185:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1186:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1187:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1188:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1189:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1190:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1191:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1192:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1193:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1194:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1195:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2356              		.loc 1 1195 0
 2357              		.cfi_startproc
 2358              		@ args = 0, pretend = 0, frame = 0
 2359              		@ frame_needed = 0, uses_anonymous_args = 0
 2360              		@ link register save eliminated.
 2361              	.LVL215:
1196:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1197:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1198:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1199:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 74


1200:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
1201:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
 2362              		.loc 1 1201 0
 2363 0000 0F23     		movs	r3, #15
 2364 0002 0360     		str	r3, [r0]
1202:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1203:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1204:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
 2365              		.loc 1 1204 0
 2366 0004 0B4B     		ldr	r3, .L175
 2367 0006 5A68     		ldr	r2, [r3, #4]
 2368 0008 02F00302 		and	r2, r2, #3
 2369 000c 4260     		str	r2, [r0, #4]
1205:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1206:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1207:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
 2370              		.loc 1 1207 0
 2371 000e 5A68     		ldr	r2, [r3, #4]
 2372 0010 02F0F002 		and	r2, r2, #240
 2373 0014 8260     		str	r2, [r0, #8]
1208:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1209:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1210:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
 2374              		.loc 1 1210 0
 2375 0016 5A68     		ldr	r2, [r3, #4]
 2376 0018 02F4E062 		and	r2, r2, #1792
 2377 001c C260     		str	r2, [r0, #12]
1211:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1212:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1213:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
 2378              		.loc 1 1213 0
 2379 001e 5B68     		ldr	r3, [r3, #4]
 2380 0020 DB08     		lsrs	r3, r3, #3
 2381 0022 03F4E063 		and	r3, r3, #1792
 2382 0026 0361     		str	r3, [r0, #16]
1214:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1215:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1216:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1217:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
 2383              		.loc 1 1217 0
 2384 0028 034B     		ldr	r3, .L175+4
 2385 002a 1B68     		ldr	r3, [r3]
 2386 002c 03F00703 		and	r3, r3, #7
 2387 0030 0B60     		str	r3, [r1]
 2388 0032 7047     		bx	lr
 2389              	.L176:
 2390              		.align	2
 2391              	.L175:
 2392 0034 00100240 		.word	1073876992
 2393 0038 00200240 		.word	1073881088
 2394              		.cfi_endproc
 2395              	.LFE75:
 2397              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 2398              		.align	2
 2399              		.weak	HAL_RCC_CSSCallback
 2400              		.thumb
 2401              		.thumb_func
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 75


 2403              	HAL_RCC_CSSCallback:
 2404              	.LFB77:
1218:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1219:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1220:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1221:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1222:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1223:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1224:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1225:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1226:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1227:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1228:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1229:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1231:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1232:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1233:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1234:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1235:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1236:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
1237:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1238:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1239:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1240:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1241:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1242:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1243:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1244:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1245:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1246:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1247:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 2405              		.loc 1 1247 0
 2406              		.cfi_startproc
 2407              		@ args = 0, pretend = 0, frame = 0
 2408              		@ frame_needed = 0, uses_anonymous_args = 0
 2409              		@ link register save eliminated.
 2410 0000 7047     		bx	lr
 2411              		.cfi_endproc
 2412              	.LFE77:
 2414 0002 00BF     		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 2415              		.align	2
 2416              		.global	HAL_RCC_NMI_IRQHandler
 2417              		.thumb
 2418              		.thumb_func
 2420              	HAL_RCC_NMI_IRQHandler:
 2421              	.LFB76:
1230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2422              		.loc 1 1230 0
 2423              		.cfi_startproc
 2424              		@ args = 0, pretend = 0, frame = 0
 2425              		@ frame_needed = 0, uses_anonymous_args = 0
1230:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 2426              		.loc 1 1230 0
 2427 0000 08B5     		push	{r3, lr}
 2428              	.LCFI15:
 2429              		.cfi_def_cfa_offset 8
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 76


 2430              		.cfi_offset 3, -8
 2431              		.cfi_offset 14, -4
1232:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 2432              		.loc 1 1232 0
 2433 0002 054B     		ldr	r3, .L181
 2434 0004 9B68     		ldr	r3, [r3, #8]
 2435 0006 13F0800F 		tst	r3, #128
 2436 000a 04D0     		beq	.L178
1235:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 2437              		.loc 1 1235 0
 2438 000c FFF7FEFF 		bl	HAL_RCC_CSSCallback
 2439              	.LVL216:
1238:./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 2440              		.loc 1 1238 0
 2441 0010 8022     		movs	r2, #128
 2442 0012 024B     		ldr	r3, .L181+4
 2443 0014 1A70     		strb	r2, [r3]
 2444              	.L178:
 2445 0016 08BD     		pop	{r3, pc}
 2446              	.L182:
 2447              		.align	2
 2448              	.L181:
 2449 0018 00100240 		.word	1073876992
 2450 001c 0A100240 		.word	1073877002
 2451              		.cfi_endproc
 2452              	.LFE76:
 2454              		.section	.rodata
 2455              		.align	2
 2456              		.set	.LANCHOR0,. + 0
 2457              	.LC0:
 2458 0000 02       		.byte	2
 2459 0001 03       		.byte	3
 2460 0002 04       		.byte	4
 2461 0003 05       		.byte	5
 2462 0004 06       		.byte	6
 2463 0005 07       		.byte	7
 2464 0006 08       		.byte	8
 2465 0007 09       		.byte	9
 2466 0008 0A       		.byte	10
 2467 0009 0B       		.byte	11
 2468 000a 0C       		.byte	12
 2469 000b 0D       		.byte	13
 2470 000c 0E       		.byte	14
 2471 000d 0F       		.byte	15
 2472 000e 10       		.byte	16
 2473 000f 10       		.byte	16
 2474              	.LC1:
 2475 0010 01       		.byte	1
 2476 0011 02       		.byte	2
 2477              		.text
 2478              	.Letext0:
 2479              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 2480              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
 2481              		.file 5 "./Drivers_V1.0.4/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 2482              		.file 6 "./Drivers_V1.0.4/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 2483              		.file 7 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 2484              		.file 8 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 77


 2485              		.file 9 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 2486              		.file 10 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 2487              		.file 11 "./Drivers_V1.0.4/CMSIS/Include/core_cm3.h"
 2488              		.file 12 "./Drivers_V1.0.4/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 2489              		.file 13 "./Drivers_V1.0.4/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s 			page 78


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:20     .text.HAL_RCC_DeInit:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:93     .text.HAL_RCC_DeInit:000000000000004c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:100    .text.HAL_RCC_OscConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:105    .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:740    .text.HAL_RCC_OscConfig:00000000000002dc $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:745    .text.HAL_RCC_OscConfig:00000000000002e4 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1395   .text.HAL_RCC_OscConfig:00000000000005e4 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1401   .text.HAL_RCC_MCOConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1406   .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1468   .text.HAL_RCC_MCOConfig:0000000000000044 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1474   .text.HAL_RCC_EnableCSS:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1479   .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1512   .text.HAL_RCC_DisableCSS:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1517   .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1550   .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1555   .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1676   .text.HAL_RCC_GetSysClockFreq:0000000000000084 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1684   .text.HAL_RCC_ClockConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:1689   .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2062   .text.HAL_RCC_ClockConfig:00000000000001d4 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2070   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2075   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2089   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2094   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2099   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2141   .text.HAL_RCC_GetPCLK1Freq:0000000000000028 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2147   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2152   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2194   .text.HAL_RCC_GetPCLK2Freq:0000000000000028 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2200   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2205   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2344   .text.HAL_RCC_GetOscConfig:00000000000000c0 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2349   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2354   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2392   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2398   .text.HAL_RCC_CSSCallback:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2403   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2415   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2420   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2449   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccazCX7D.s:2455   .rodata:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
HAL_Delay
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
