ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 1
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"syscalls.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.initialise_monitor_handles,"ax",%progbits
  20              		.align	2
  21              		.global	initialise_monitor_handles
  22              		.thumb
  23              		.thumb_func
  25              	initialise_monitor_handles:
  26              	.LFB17:
  27              		.file 1 "Src/syscalls.c"
   1:Src/syscalls.c **** /**
   2:Src/syscalls.c ****  ******************************************************************************
   3:Src/syscalls.c ****  * @file      syscalls.c
   4:Src/syscalls.c ****  * @author    Auto-generated by STM32CubeIDE
   5:Src/syscalls.c ****  * @brief     STM32CubeIDE Minimal System calls file
   6:Src/syscalls.c ****  *
   7:Src/syscalls.c ****  *            For more information about which c-functions
   8:Src/syscalls.c ****  *            need which of these lowlevel functions
   9:Src/syscalls.c ****  *            please consult the Newlib libc-manual
  10:Src/syscalls.c ****  ******************************************************************************
  11:Src/syscalls.c ****  * @attention
  12:Src/syscalls.c ****  *
  13:Src/syscalls.c ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  14:Src/syscalls.c ****  * All rights reserved.</center></h2>
  15:Src/syscalls.c ****  *
  16:Src/syscalls.c ****  * This software component is licensed by ST under BSD 3-Clause license,
  17:Src/syscalls.c ****  * the "License"; You may not use this file except in compliance with the
  18:Src/syscalls.c ****  * License. You may obtain a copy of the License at:
  19:Src/syscalls.c ****  *                        opensource.org/licenses/BSD-3-Clause
  20:Src/syscalls.c ****  *
  21:Src/syscalls.c ****  ******************************************************************************
  22:Src/syscalls.c ****  */
  23:Src/syscalls.c **** 
  24:Src/syscalls.c **** /* Includes */
  25:Src/syscalls.c **** #include <sys/stat.h>
  26:Src/syscalls.c **** #include <stdlib.h>
  27:Src/syscalls.c **** #include <errno.h>
  28:Src/syscalls.c **** #include <stdio.h>
  29:Src/syscalls.c **** #include <signal.h>
  30:Src/syscalls.c **** #include <time.h>
  31:Src/syscalls.c **** #include <sys/time.h>
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 2


  32:Src/syscalls.c **** #include <sys/times.h>
  33:Src/syscalls.c **** 
  34:Src/syscalls.c **** 
  35:Src/syscalls.c **** /* Variables */
  36:Src/syscalls.c **** //#undef errno
  37:Src/syscalls.c **** extern int errno;
  38:Src/syscalls.c **** extern int __io_putchar(int ch) __attribute__((weak));
  39:Src/syscalls.c **** extern int __io_getchar(void) __attribute__((weak));
  40:Src/syscalls.c **** 
  41:Src/syscalls.c **** register char * stack_ptr asm("sp");
  42:Src/syscalls.c **** 
  43:Src/syscalls.c **** char *__env[1] = { 0 };
  44:Src/syscalls.c **** char **environ = __env;
  45:Src/syscalls.c **** 
  46:Src/syscalls.c **** 
  47:Src/syscalls.c **** /* Functions */
  48:Src/syscalls.c **** void initialise_monitor_handles()
  49:Src/syscalls.c **** {
  28              		.loc 1 49 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  33 0000 7047     		bx	lr
  34              		.cfi_endproc
  35              	.LFE17:
  37 0002 00BF     		.section	.text._getpid,"ax",%progbits
  38              		.align	2
  39              		.global	_getpid
  40              		.thumb
  41              		.thumb_func
  43              	_getpid:
  44              	.LFB18:
  50:Src/syscalls.c **** }
  51:Src/syscalls.c **** 
  52:Src/syscalls.c **** int _getpid(void)
  53:Src/syscalls.c **** {
  45              		.loc 1 53 0
  46              		.cfi_startproc
  47              		@ args = 0, pretend = 0, frame = 0
  48              		@ frame_needed = 0, uses_anonymous_args = 0
  49              		@ link register save eliminated.
  54:Src/syscalls.c **** 	return 1;
  55:Src/syscalls.c **** }
  50              		.loc 1 55 0
  51 0000 0120     		movs	r0, #1
  52 0002 7047     		bx	lr
  53              		.cfi_endproc
  54              	.LFE18:
  56              		.section	.text._kill,"ax",%progbits
  57              		.align	2
  58              		.global	_kill
  59              		.thumb
  60              		.thumb_func
  62              	_kill:
  63              	.LFB19:
  56:Src/syscalls.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 3


  57:Src/syscalls.c **** int _kill(int pid, int sig)
  58:Src/syscalls.c **** {
  64              		.loc 1 58 0
  65              		.cfi_startproc
  66              		@ args = 0, pretend = 0, frame = 0
  67              		@ frame_needed = 0, uses_anonymous_args = 0
  68              	.LVL0:
  69 0000 08B5     		push	{r3, lr}
  70              	.LCFI0:
  71              		.cfi_def_cfa_offset 8
  72              		.cfi_offset 3, -8
  73              		.cfi_offset 14, -4
  59:Src/syscalls.c **** 	errno = EINVAL;
  74              		.loc 1 59 0
  75 0002 FFF7FEFF 		bl	__errno
  76              	.LVL1:
  77 0006 1623     		movs	r3, #22
  78 0008 0360     		str	r3, [r0]
  60:Src/syscalls.c **** 	return -1;
  61:Src/syscalls.c **** }
  79              		.loc 1 61 0
  80 000a 4FF0FF30 		mov	r0, #-1
  81 000e 08BD     		pop	{r3, pc}
  82              		.cfi_endproc
  83              	.LFE19:
  85              		.section	.text._exit,"ax",%progbits
  86              		.align	2
  87              		.global	_exit
  88              		.thumb
  89              		.thumb_func
  91              	_exit:
  92              	.LFB20:
  62:Src/syscalls.c **** 
  63:Src/syscalls.c **** void _exit (int status)
  64:Src/syscalls.c **** {
  93              		.loc 1 64 0
  94              		.cfi_startproc
  95              		@ Volatile: function does not return.
  96              		@ args = 0, pretend = 0, frame = 0
  97              		@ frame_needed = 0, uses_anonymous_args = 0
  98              	.LVL2:
  99 0000 08B5     		push	{r3, lr}
 100              	.LCFI1:
 101              		.cfi_def_cfa_offset 8
 102              		.cfi_offset 3, -8
 103              		.cfi_offset 14, -4
  65:Src/syscalls.c **** 	_kill(status, -1);
 104              		.loc 1 65 0
 105 0002 4FF0FF31 		mov	r1, #-1
 106 0006 FFF7FEFF 		bl	_kill
 107              	.LVL3:
 108              	.L6:
 109 000a FEE7     		b	.L6
 110              		.cfi_endproc
 111              	.LFE20:
 113              		.section	.text._read,"ax",%progbits
 114              		.align	2
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 4


 115              		.weak	_read
 116              		.thumb
 117              		.thumb_func
 119              	_read:
 120              	.LFB21:
  66:Src/syscalls.c **** 	while (1) {}		/* Make sure we hang here */
  67:Src/syscalls.c **** }
  68:Src/syscalls.c **** 
  69:Src/syscalls.c **** __attribute__((weak)) int _read(int file, char *ptr, int len)
  70:Src/syscalls.c **** {
 121              		.loc 1 70 0
 122              		.cfi_startproc
 123              		@ args = 0, pretend = 0, frame = 0
 124              		@ frame_needed = 0, uses_anonymous_args = 0
 125              	.LVL4:
 126 0000 F8B5     		push	{r3, r4, r5, r6, r7, lr}
 127              	.LCFI2:
 128              		.cfi_def_cfa_offset 24
 129              		.cfi_offset 3, -24
 130              		.cfi_offset 4, -20
 131              		.cfi_offset 5, -16
 132              		.cfi_offset 6, -12
 133              		.cfi_offset 7, -8
 134              		.cfi_offset 14, -4
 135 0002 0D46     		mov	r5, r1
 136 0004 1746     		mov	r7, r2
 137              	.LVL5:
  71:Src/syscalls.c **** 	int DataIdx;
  72:Src/syscalls.c **** 
  73:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 138              		.loc 1 73 0
 139 0006 0024     		movs	r4, #0
 140 0008 05E0     		b	.L9
 141              	.LVL6:
 142              	.L10:
  74:Src/syscalls.c **** 	{
  75:Src/syscalls.c **** 		*ptr++ = __io_getchar();
 143              		.loc 1 75 0 discriminator 3
 144 000a 6E1C     		adds	r6, r5, #1
 145              	.LVL7:
 146 000c FFF7FEFF 		bl	__io_getchar
 147              	.LVL8:
 148 0010 2870     		strb	r0, [r5]
  73:Src/syscalls.c **** 	{
 149              		.loc 1 73 0 discriminator 3
 150 0012 0134     		adds	r4, r4, #1
 151              	.LVL9:
 152              		.loc 1 75 0 discriminator 3
 153 0014 3546     		mov	r5, r6
 154              	.LVL10:
 155              	.L9:
  73:Src/syscalls.c **** 	{
 156              		.loc 1 73 0 discriminator 1
 157 0016 BC42     		cmp	r4, r7
 158 0018 F7DB     		blt	.L10
  76:Src/syscalls.c **** 	}
  77:Src/syscalls.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 5


  78:Src/syscalls.c **** return len;
  79:Src/syscalls.c **** }
 159              		.loc 1 79 0
 160 001a 3846     		mov	r0, r7
 161 001c F8BD     		pop	{r3, r4, r5, r6, r7, pc}
 162              		.cfi_endproc
 163              	.LFE21:
 165 001e 00BF     		.section	.text._write,"ax",%progbits
 166              		.align	2
 167              		.weak	_write
 168              		.thumb
 169              		.thumb_func
 171              	_write:
 172              	.LFB22:
  80:Src/syscalls.c **** 
  81:Src/syscalls.c **** __attribute__((weak)) int _write(int file, char *ptr, int len)
  82:Src/syscalls.c **** {
 173              		.loc 1 82 0
 174              		.cfi_startproc
 175              		@ args = 0, pretend = 0, frame = 0
 176              		@ frame_needed = 0, uses_anonymous_args = 0
 177              	.LVL11:
 178 0000 70B5     		push	{r4, r5, r6, lr}
 179              	.LCFI3:
 180              		.cfi_def_cfa_offset 16
 181              		.cfi_offset 4, -16
 182              		.cfi_offset 5, -12
 183              		.cfi_offset 6, -8
 184              		.cfi_offset 14, -4
 185 0002 1646     		mov	r6, r2
 186              	.LVL12:
  83:Src/syscalls.c **** 	int DataIdx;
  84:Src/syscalls.c **** 
  85:Src/syscalls.c **** 	for (DataIdx = 0; DataIdx < len; DataIdx++)
 187              		.loc 1 85 0
 188 0004 0024     		movs	r4, #0
 189 0006 05E0     		b	.L13
 190              	.LVL13:
 191              	.L14:
  86:Src/syscalls.c **** 	{
  87:Src/syscalls.c **** 		__io_putchar(*ptr++);
 192              		.loc 1 87 0 discriminator 3
 193 0008 4D1C     		adds	r5, r1, #1
 194              	.LVL14:
 195 000a 0878     		ldrb	r0, [r1]	@ zero_extendqisi2
 196 000c FFF7FEFF 		bl	__io_putchar
 197              	.LVL15:
  85:Src/syscalls.c **** 	{
 198              		.loc 1 85 0 discriminator 3
 199 0010 0134     		adds	r4, r4, #1
 200              	.LVL16:
 201              		.loc 1 87 0 discriminator 3
 202 0012 2946     		mov	r1, r5
 203              	.LVL17:
 204              	.L13:
  85:Src/syscalls.c **** 	{
 205              		.loc 1 85 0 discriminator 1
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 6


 206 0014 B442     		cmp	r4, r6
 207 0016 F7DB     		blt	.L14
  88:Src/syscalls.c **** 	}
  89:Src/syscalls.c **** 	return len;
  90:Src/syscalls.c **** }
 208              		.loc 1 90 0
 209 0018 3046     		mov	r0, r6
 210 001a 70BD     		pop	{r4, r5, r6, pc}
 211              		.cfi_endproc
 212              	.LFE22:
 214              		.section	.text._close,"ax",%progbits
 215              		.align	2
 216              		.global	_close
 217              		.thumb
 218              		.thumb_func
 220              	_close:
 221              	.LFB23:
  91:Src/syscalls.c **** 
  92:Src/syscalls.c **** int _close(int file)
  93:Src/syscalls.c **** {
 222              		.loc 1 93 0
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 0
 225              		@ frame_needed = 0, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227              	.LVL18:
  94:Src/syscalls.c **** 	return -1;
  95:Src/syscalls.c **** }
 228              		.loc 1 95 0
 229 0000 4FF0FF30 		mov	r0, #-1
 230              	.LVL19:
 231 0004 7047     		bx	lr
 232              		.cfi_endproc
 233              	.LFE23:
 235 0006 00BF     		.section	.text._fstat,"ax",%progbits
 236              		.align	2
 237              		.global	_fstat
 238              		.thumb
 239              		.thumb_func
 241              	_fstat:
 242              	.LFB24:
  96:Src/syscalls.c **** 
  97:Src/syscalls.c **** 
  98:Src/syscalls.c **** int _fstat(int file, struct stat *st)
  99:Src/syscalls.c **** {
 243              		.loc 1 99 0
 244              		.cfi_startproc
 245              		@ args = 0, pretend = 0, frame = 0
 246              		@ frame_needed = 0, uses_anonymous_args = 0
 247              		@ link register save eliminated.
 248              	.LVL20:
 100:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 249              		.loc 1 100 0
 250 0000 4FF40053 		mov	r3, #8192
 251 0004 4B60     		str	r3, [r1, #4]
 101:Src/syscalls.c **** 	return 0;
 102:Src/syscalls.c **** }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 7


 252              		.loc 1 102 0
 253 0006 0020     		movs	r0, #0
 254              	.LVL21:
 255 0008 7047     		bx	lr
 256              		.cfi_endproc
 257              	.LFE24:
 259 000a 00BF     		.section	.text._isatty,"ax",%progbits
 260              		.align	2
 261              		.global	_isatty
 262              		.thumb
 263              		.thumb_func
 265              	_isatty:
 266              	.LFB25:
 103:Src/syscalls.c **** 
 104:Src/syscalls.c **** int _isatty(int file)
 105:Src/syscalls.c **** {
 267              		.loc 1 105 0
 268              		.cfi_startproc
 269              		@ args = 0, pretend = 0, frame = 0
 270              		@ frame_needed = 0, uses_anonymous_args = 0
 271              		@ link register save eliminated.
 272              	.LVL22:
 106:Src/syscalls.c **** 	return 1;
 107:Src/syscalls.c **** }
 273              		.loc 1 107 0
 274 0000 0120     		movs	r0, #1
 275              	.LVL23:
 276 0002 7047     		bx	lr
 277              		.cfi_endproc
 278              	.LFE25:
 280              		.section	.text._lseek,"ax",%progbits
 281              		.align	2
 282              		.global	_lseek
 283              		.thumb
 284              		.thumb_func
 286              	_lseek:
 287              	.LFB26:
 108:Src/syscalls.c **** 
 109:Src/syscalls.c **** int _lseek(int file, int ptr, int dir)
 110:Src/syscalls.c **** {
 288              		.loc 1 110 0
 289              		.cfi_startproc
 290              		@ args = 0, pretend = 0, frame = 0
 291              		@ frame_needed = 0, uses_anonymous_args = 0
 292              		@ link register save eliminated.
 293              	.LVL24:
 111:Src/syscalls.c **** 	return 0;
 112:Src/syscalls.c **** }
 294              		.loc 1 112 0
 295 0000 0020     		movs	r0, #0
 296              	.LVL25:
 297 0002 7047     		bx	lr
 298              		.cfi_endproc
 299              	.LFE26:
 301              		.section	.text._open,"ax",%progbits
 302              		.align	2
 303              		.global	_open
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 8


 304              		.thumb
 305              		.thumb_func
 307              	_open:
 308              	.LFB27:
 113:Src/syscalls.c **** 
 114:Src/syscalls.c **** int _open(char *path, int flags, ...)
 115:Src/syscalls.c **** {
 309              		.loc 1 115 0
 310              		.cfi_startproc
 311              		@ args = 4, pretend = 12, frame = 0
 312              		@ frame_needed = 0, uses_anonymous_args = 1
 313              		@ link register save eliminated.
 314              	.LVL26:
 315 0000 0EB4     		push	{r1, r2, r3}
 316              	.LCFI4:
 317              		.cfi_def_cfa_offset 12
 318              		.cfi_offset 1, -12
 319              		.cfi_offset 2, -8
 320              		.cfi_offset 3, -4
 116:Src/syscalls.c **** 	/* Pretend like we always fail */
 117:Src/syscalls.c **** 	return -1;
 118:Src/syscalls.c **** }
 321              		.loc 1 118 0
 322 0002 4FF0FF30 		mov	r0, #-1
 323              	.LVL27:
 324 0006 03B0     		add	sp, sp, #12
 325              	.LCFI5:
 326              		.cfi_restore 3
 327              		.cfi_restore 2
 328              		.cfi_restore 1
 329              		.cfi_def_cfa_offset 0
 330 0008 7047     		bx	lr
 331              		.cfi_endproc
 332              	.LFE27:
 334 000a 00BF     		.section	.text._wait,"ax",%progbits
 335              		.align	2
 336              		.global	_wait
 337              		.thumb
 338              		.thumb_func
 340              	_wait:
 341              	.LFB28:
 119:Src/syscalls.c **** 
 120:Src/syscalls.c **** int _wait(int *status)
 121:Src/syscalls.c **** {
 342              		.loc 1 121 0
 343              		.cfi_startproc
 344              		@ args = 0, pretend = 0, frame = 0
 345              		@ frame_needed = 0, uses_anonymous_args = 0
 346              	.LVL28:
 347 0000 08B5     		push	{r3, lr}
 348              	.LCFI6:
 349              		.cfi_def_cfa_offset 8
 350              		.cfi_offset 3, -8
 351              		.cfi_offset 14, -4
 122:Src/syscalls.c **** 	errno = ECHILD;
 352              		.loc 1 122 0
 353 0002 FFF7FEFF 		bl	__errno
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 9


 354              	.LVL29:
 355 0006 0A23     		movs	r3, #10
 356 0008 0360     		str	r3, [r0]
 123:Src/syscalls.c **** 	return -1;
 124:Src/syscalls.c **** }
 357              		.loc 1 124 0
 358 000a 4FF0FF30 		mov	r0, #-1
 359 000e 08BD     		pop	{r3, pc}
 360              		.cfi_endproc
 361              	.LFE28:
 363              		.section	.text._unlink,"ax",%progbits
 364              		.align	2
 365              		.global	_unlink
 366              		.thumb
 367              		.thumb_func
 369              	_unlink:
 370              	.LFB29:
 125:Src/syscalls.c **** 
 126:Src/syscalls.c **** int _unlink(char *name)
 127:Src/syscalls.c **** {
 371              		.loc 1 127 0
 372              		.cfi_startproc
 373              		@ args = 0, pretend = 0, frame = 0
 374              		@ frame_needed = 0, uses_anonymous_args = 0
 375              	.LVL30:
 376 0000 08B5     		push	{r3, lr}
 377              	.LCFI7:
 378              		.cfi_def_cfa_offset 8
 379              		.cfi_offset 3, -8
 380              		.cfi_offset 14, -4
 128:Src/syscalls.c **** 	errno = ENOENT;
 381              		.loc 1 128 0
 382 0002 FFF7FEFF 		bl	__errno
 383              	.LVL31:
 384 0006 0223     		movs	r3, #2
 385 0008 0360     		str	r3, [r0]
 129:Src/syscalls.c **** 	return -1;
 130:Src/syscalls.c **** }
 386              		.loc 1 130 0
 387 000a 4FF0FF30 		mov	r0, #-1
 388 000e 08BD     		pop	{r3, pc}
 389              		.cfi_endproc
 390              	.LFE29:
 392              		.section	.text._times,"ax",%progbits
 393              		.align	2
 394              		.global	_times
 395              		.thumb
 396              		.thumb_func
 398              	_times:
 399              	.LFB30:
 131:Src/syscalls.c **** 
 132:Src/syscalls.c **** int _times(struct tms *buf)
 133:Src/syscalls.c **** {
 400              		.loc 1 133 0
 401              		.cfi_startproc
 402              		@ args = 0, pretend = 0, frame = 0
 403              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 10


 404              		@ link register save eliminated.
 405              	.LVL32:
 134:Src/syscalls.c **** 	return -1;
 135:Src/syscalls.c **** }
 406              		.loc 1 135 0
 407 0000 4FF0FF30 		mov	r0, #-1
 408              	.LVL33:
 409 0004 7047     		bx	lr
 410              		.cfi_endproc
 411              	.LFE30:
 413 0006 00BF     		.section	.text._stat,"ax",%progbits
 414              		.align	2
 415              		.global	_stat
 416              		.thumb
 417              		.thumb_func
 419              	_stat:
 420              	.LFB31:
 136:Src/syscalls.c **** 
 137:Src/syscalls.c **** int _stat(char *file, struct stat *st)
 138:Src/syscalls.c **** {
 421              		.loc 1 138 0
 422              		.cfi_startproc
 423              		@ args = 0, pretend = 0, frame = 0
 424              		@ frame_needed = 0, uses_anonymous_args = 0
 425              		@ link register save eliminated.
 426              	.LVL34:
 139:Src/syscalls.c **** 	st->st_mode = S_IFCHR;
 427              		.loc 1 139 0
 428 0000 4FF40053 		mov	r3, #8192
 429 0004 4B60     		str	r3, [r1, #4]
 140:Src/syscalls.c **** 	return 0;
 141:Src/syscalls.c **** }
 430              		.loc 1 141 0
 431 0006 0020     		movs	r0, #0
 432              	.LVL35:
 433 0008 7047     		bx	lr
 434              		.cfi_endproc
 435              	.LFE31:
 437 000a 00BF     		.section	.text._link,"ax",%progbits
 438              		.align	2
 439              		.global	_link
 440              		.thumb
 441              		.thumb_func
 443              	_link:
 444              	.LFB32:
 142:Src/syscalls.c **** 
 143:Src/syscalls.c **** int _link(char *old, char *new)
 144:Src/syscalls.c **** {
 445              		.loc 1 144 0
 446              		.cfi_startproc
 447              		@ args = 0, pretend = 0, frame = 0
 448              		@ frame_needed = 0, uses_anonymous_args = 0
 449              	.LVL36:
 450 0000 08B5     		push	{r3, lr}
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 8
 453              		.cfi_offset 3, -8
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 11


 454              		.cfi_offset 14, -4
 145:Src/syscalls.c **** 	errno = EMLINK;
 455              		.loc 1 145 0
 456 0002 FFF7FEFF 		bl	__errno
 457              	.LVL37:
 458 0006 1F23     		movs	r3, #31
 459 0008 0360     		str	r3, [r0]
 146:Src/syscalls.c **** 	return -1;
 147:Src/syscalls.c **** }
 460              		.loc 1 147 0
 461 000a 4FF0FF30 		mov	r0, #-1
 462 000e 08BD     		pop	{r3, pc}
 463              		.cfi_endproc
 464              	.LFE32:
 466              		.section	.text._fork,"ax",%progbits
 467              		.align	2
 468              		.global	_fork
 469              		.thumb
 470              		.thumb_func
 472              	_fork:
 473              	.LFB33:
 148:Src/syscalls.c **** 
 149:Src/syscalls.c **** int _fork(void)
 150:Src/syscalls.c **** {
 474              		.loc 1 150 0
 475              		.cfi_startproc
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
 151:Src/syscalls.c **** 	errno = EAGAIN;
 483              		.loc 1 151 0
 484 0002 FFF7FEFF 		bl	__errno
 485              	.LVL38:
 486 0006 0B23     		movs	r3, #11
 487 0008 0360     		str	r3, [r0]
 152:Src/syscalls.c **** 	return -1;
 153:Src/syscalls.c **** }
 488              		.loc 1 153 0
 489 000a 4FF0FF30 		mov	r0, #-1
 490 000e 08BD     		pop	{r3, pc}
 491              		.cfi_endproc
 492              	.LFE33:
 494              		.section	.text._execve,"ax",%progbits
 495              		.align	2
 496              		.global	_execve
 497              		.thumb
 498              		.thumb_func
 500              	_execve:
 501              	.LFB34:
 154:Src/syscalls.c **** 
 155:Src/syscalls.c **** int _execve(char *name, char **argv, char **env)
 156:Src/syscalls.c **** {
 502              		.loc 1 156 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 12


 503              		.cfi_startproc
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506              	.LVL39:
 507 0000 08B5     		push	{r3, lr}
 508              	.LCFI10:
 509              		.cfi_def_cfa_offset 8
 510              		.cfi_offset 3, -8
 511              		.cfi_offset 14, -4
 157:Src/syscalls.c **** 	errno = ENOMEM;
 512              		.loc 1 157 0
 513 0002 FFF7FEFF 		bl	__errno
 514              	.LVL40:
 515 0006 0C23     		movs	r3, #12
 516 0008 0360     		str	r3, [r0]
 158:Src/syscalls.c **** 	return -1;
 159:Src/syscalls.c **** }
 517              		.loc 1 159 0
 518 000a 4FF0FF30 		mov	r0, #-1
 519 000e 08BD     		pop	{r3, pc}
 520              		.cfi_endproc
 521              	.LFE34:
 523              		.global	environ
 524              		.global	__env
 525              		.section	.data.environ,"aw",%progbits
 526              		.align	2
 529              	environ:
 530 0000 00000000 		.word	__env
 531              		.section	.bss.__env,"aw",%nobits
 532              		.align	2
 535              	__env:
 536 0000 00000000 		.space	4
 537              		.weak	__io_putchar
 538              		.weak	__io_getchar
 539              		.text
 540              	.Letext0:
 541              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 542              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_types.h"
 543              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_timeval.h"
 544              		.file 5 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/types.h"
 545              		.file 6 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/stat.h"
 546              		.file 7 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/times.h"
 547              		.file 8 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/errno.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s 			page 13


DEFINED SYMBOLS
                            *ABS*:0000000000000000 syscalls.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:20     .text.initialise_monitor_handles:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:25     .text.initialise_monitor_handles:0000000000000000 initialise_monitor_handles
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:38     .text._getpid:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:43     .text._getpid:0000000000000000 _getpid
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:57     .text._kill:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:62     .text._kill:0000000000000000 _kill
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:86     .text._exit:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:91     .text._exit:0000000000000000 _exit
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:114    .text._read:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:119    .text._read:0000000000000000 _read
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:166    .text._write:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:171    .text._write:0000000000000000 _write
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:215    .text._close:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:220    .text._close:0000000000000000 _close
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:236    .text._fstat:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:241    .text._fstat:0000000000000000 _fstat
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:260    .text._isatty:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:265    .text._isatty:0000000000000000 _isatty
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:281    .text._lseek:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:286    .text._lseek:0000000000000000 _lseek
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:302    .text._open:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:307    .text._open:0000000000000000 _open
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:335    .text._wait:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:340    .text._wait:0000000000000000 _wait
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:364    .text._unlink:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:369    .text._unlink:0000000000000000 _unlink
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:393    .text._times:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:398    .text._times:0000000000000000 _times
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:414    .text._stat:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:419    .text._stat:0000000000000000 _stat
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:438    .text._link:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:443    .text._link:0000000000000000 _link
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:467    .text._fork:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:472    .text._fork:0000000000000000 _fork
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:495    .text._execve:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:500    .text._execve:0000000000000000 _execve
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:529    .data.environ:0000000000000000 environ
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:535    .bss.__env:0000000000000000 __env
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:526    .data.environ:0000000000000000 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccKpoN9R.s:532    .bss.__env:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__errno
__io_getchar
__io_putchar
