ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"stm32f1xx_hal_rcc.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.HAL_RCC_DeInit,"ax",%progbits
  20              		.align	1
  21              		.global	HAL_RCC_DeInit
  22              		.thumb
  23              		.thumb_func
  25              	HAL_RCC_DeInit:
  26              	.LFB64:
  27              		.file 1 "../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c"
   1:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
   2:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
   3:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @file    stm32f1xx_hal_rcc.c
   4:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @author  MCD Application Team
   5:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @version V1.1.1
   6:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @date    12-May-2017
   7:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief   RCC HAL module driver.
   8:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This file provides firmware functions to manage the following 
   9:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          functionalities of the Reset and Clock Control (RCC) peripheral:
  10:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Initialization and de-initialization functions
  11:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           + Peripheral Control functions
  12:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *       
  13:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim                
  14:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  15:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC specific features #####
  16:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  17:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  18:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       After reset the device is running from Internal High Speed oscillator
  19:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSI 8MHz) with Flash 0 wait state, Flash prefetch buffer is enabled, 
  20:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and all peripherals are off except internal SRAM, Flash and JTAG.
  21:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) There is no prescaler on High speed (AHB) and Low speed (APB) buses;
  22:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           all peripherals mapped on these buses are running at HSI speed.
  23:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) The clock for all peripherals is switched off, except the SRAM and FLASH.
  24:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) All GPIOs are in input floating state, except the JTAG pins which
  25:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           are assigned to be used for debug purpose.
  26:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Once the device started from reset, the user application has to:
  27:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source to be used to drive the System clock
  28:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (if the application needs higher frequency/performance)
  29:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the System clock frequency and Flash settings  
  30:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the AHB and APB buses prescalers
  31:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Enable the clock for the peripheral(s) to be used
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 2


  32:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) Configure the clock source(s) for peripherals whose clocks are not
  33:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           derived from the System clock (I2S, RTC, ADC, USB OTG FS) 
  34:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  35:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                       ##### RCC Limitations #####
  36:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ==============================================================================
  37:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  38:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       A delay between an RCC peripheral clock enable and the effective peripheral 
  39:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       enabling should be taken into account in order to manage the peripheral read/write 
  40:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       from/to registers.
  41:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (+) This delay depends on the peripheral mapping.
  42:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) AHB & APB peripherals, 1 dummy read is necessary
  43:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  44:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]  
  45:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       Workarounds:
  46:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For AHB & APB peripherals, a dummy read to the peripheral register has been
  47:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           inserted in each __HAL_RCC_PPP_CLK_ENABLE() macro.
  48:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  49:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
  50:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************
  51:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @attention
  52:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  53:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * <h2><center>&copy; COPYRIGHT(c) 2016 STMicroelectronics</center></h2>
  54:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  55:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * Redistribution and use in source and binary forms, with or without modification,
  56:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * are permitted provided that the following conditions are met:
  57:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   1. Redistributions of source code must retain the above copyright notice,
  58:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer.
  59:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   2. Redistributions in binary form must reproduce the above copyright notice,
  60:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      this list of conditions and the following disclaimer in the documentation
  61:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      and/or other materials provided with the distribution.
  62:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *   3. Neither the name of STMicroelectronics nor the names of its contributors
  63:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      may be used to endorse or promote products derived from this software
  64:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *      without specific prior written permission.
  65:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  66:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  67:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  68:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
  69:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT HOLDER OR CONTRIBUTORS BE LIABLE
  70:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
  71:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
  72:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
  73:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
  74:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
  75:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
  76:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
  77:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ******************************************************************************  
  78:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** */
  79:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  80:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Includes ------------------------------------------------------------------*/
  81:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #include "stm32f1xx_hal.h"
  82:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  83:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @addtogroup STM32F1xx_HAL_Driver
  84:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  85:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  86:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  87:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC RCC
  88:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** * @brief RCC HAL module driver
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 3


  89:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
  90:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
  91:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  92:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #ifdef HAL_RCC_MODULE_ENABLED
  93:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  94:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private typedef -----------------------------------------------------------*/
  95:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private define ------------------------------------------------------------*/
  96:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Constants RCC Private Constants
  97:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  * @{
  98:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  */
  99:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 100:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 101:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 102:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private macro -------------------------------------------------------------*/
 103:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Macros RCC Private Macros
 104:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 105:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 106:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 107:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_CLK_ENABLE()     __HAL_RCC_GPIOA_CLK_ENABLE()
 108:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_GPIO_PORT        GPIOA
 109:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #define MCO1_PIN              GPIO_PIN_8
 110:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 111:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 112:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 113:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 114:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 115:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private variables ---------------------------------------------------------*/
 116:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Private_Variables RCC Private Variables
 117:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 118:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 119:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 120:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 121:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 122:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 123:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Private function prototypes -----------------------------------------------*/
 124:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay);
 125:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 126:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /* Exported functions --------------------------------------------------------*/
 127:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 128:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions RCC Exported Functions
 129:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 130:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 131:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 132:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group1 Initialization and de-initialization functions 
 133:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief    Initialization and Configuration functions 
 134:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 135:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim    
 136:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 137:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            ##### Initialization and de-initialization functions #####
 138:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 139:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 140:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       This section provides functions allowing to configure the internal/external oscillators
 141:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (HSE, HSI, LSE, LSI, PLL, CSS and MCO) and the System buses clocks (SYSCLK, AHB, APB1
 142:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       and APB2).
 143:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 144:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] Internal/external clock and PLL configuration
 145:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSI (high-speed internal), 8 MHz factory-trimmed RC used directly or through
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 4


 146:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the PLL as System clock source.
 147:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSI (low-speed internal), ~40 KHz low consumption RC used as IWDG and/or RTC
 148:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source.
 149:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 150:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) HSE (high-speed external), 4 to 24 MHz (STM32F100xx) or 4 to 16 MHz (STM32F101x/STM32F102
 151:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           through the PLL as System clock source. Can be used also as RTC clock source.
 152:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 153:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) LSE (low-speed external), 32 KHz oscillator used as RTC clock source.   
 154:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 155:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) PLL (clocked by HSI or HSE), featuring different output clocks:
 156:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The first output is used to generate the high speed system clock (up to 72 MHz for STM
 157:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (++) The second output is used to generate the clock for the USB OTG FS (48 MHz)
 158:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 159:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) CSS (Clock security system), once enable using the macro __HAL_RCC_CSS_ENABLE()
 160:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           and if a HSE clock failure occurs(HSE used directly or through PLL as System 
 161:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           clock source), the System clocks automatically switched to HSI and an interrupt
 162:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           is generated if enabled. The interrupt is linked to the Cortex-M3 NMI 
 163:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (Non-Maskable Interrupt) exception vector.   
 164:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 165:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) MCO1 (microcontroller clock output), used to output SYSCLK, HSI,  
 166:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE or PLL clock (divided by 2) on PA8 pin + PLL2CLK, PLL3CLK/2, PLL3CLK and XTI for STM3
 167:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 168:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..] System, AHB and APB buses clocks configuration
 169:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) Several clock sources can be used to drive the System clock (SYSCLK): HSI,
 170:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           HSE and PLL.
 171:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           The AHB clock (HCLK) is derived from System clock through configurable
 172:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prescaler and used to clock the CPU, memory and peripherals mapped
 173:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           on AHB bus (DMA, GPIO...). APB1 (PCLK1) and APB2 (PCLK2) clocks are derived
 174:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           from AHB clock through configurable prescalers and used to clock
 175:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           the peripherals mapped on these buses. You can use
 176:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           "@ref HAL_RCC_GetSysClockFreq()" function to retrieve the frequencies of these clocks.
 177:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 178:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       -@- All the peripheral clocks are derived from the System clock (SYSCLK) except:
 179:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) RTC: RTC clock can be derived either from the LSI, LSE or HSE clock
 180:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               divided by 128. 
 181:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) USB OTG FS and RTC: USB OTG FS require a frequency equal to 48 MHz
 182:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****               to work correctly. This clock is derived of the main PLL through PLL Multiplier.
 183:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) I2S interface on STM32F105x/STM32F107x can be derived from PLL3CLK
 184:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (+@) IWDG clock which is always the LSI clock.
 185:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 186:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       (#) For STM32F10xxx, the maximum frequency of the SYSCLK and HCLK/PCLK2 is 72 MHz, PCLK1 36 M
 187:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           For STM32F100xx, the maximum frequency of the SYSCLK and HCLK/PCLK1/PCLK2 is 24 MHz.  
 188:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           Depending on the SYSCLK frequency, the flash latency should be adapted accordingly.
 189:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 190:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 191:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 192:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 193:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /*
 194:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   Additional consideration on the SYSCLK based on Latency settings:
 195:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 196:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         | Latency       | SYSCLK clock frequency (MHz)  |
 197:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 198:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |0WS(1CPU cycle)|       0 < SYSCLK <= 24        |
 199:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 200:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |1WS(2CPU cycle)|      24 < SYSCLK <= 48        |
 201:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |---------------|-------------------------------|
 202:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         |2WS(3CPU cycle)|      48 < SYSCLK <= 72        |
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 5


 203:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         +-----------------------------------------------+
 204:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 205:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 206:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 207:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Resets the RCC clock configuration to the default reset state.
 208:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The default reset state of the clock configuration is given below:
 209:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSI ON and used as system clock source
 210:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - HSE and PLL OFF
 211:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - AHB, APB1 and APB2 prescaler set to 1.
 212:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - CSS and MCO1 OFF
 213:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - All interrupts disabled
 214:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function does not modify the configuration of the
 215:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - Peripheral clocks
 216:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            - LSI, LSE and RTC clocks
 217:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 218:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 219:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DeInit(void)
 220:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  28              		.loc 1 220 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
 221:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Switch SYSCLK to HSI */
 222:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CFGR, RCC_CFGR_SW);
  33              		.loc 1 222 0
  34 0000 0D4B     		ldr	r3, .L2
 223:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 224:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEON, CSSON, & PLLON bits */
 225:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEON | RCC_CR_CSSON | RCC_CR_PLLON);
 226:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 227:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset HSEBYP bit */
 228:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_BIT(RCC->CR, RCC_CR_HSEBYP);
 229:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 230:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR register */
 231:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR);
  35              		.loc 1 231 0
  36 0002 0021     		movs	r1, #0
 222:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
  37              		.loc 1 222 0
  38 0004 5A68     		ldr	r2, [r3, #4]
  39 0006 22F00302 		bic	r2, r2, #3
  40 000a 5A60     		str	r2, [r3, #4]
 225:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  41              		.loc 1 225 0
  42 000c 1A68     		ldr	r2, [r3]
  43 000e 22F08472 		bic	r2, r2, #17301504
  44 0012 22F48032 		bic	r2, r2, #65536
  45 0016 1A60     		str	r2, [r3]
 228:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
  46              		.loc 1 228 0
  47 0018 1A68     		ldr	r2, [r3]
  48 001a 22F48022 		bic	r2, r2, #262144
  49 001e 1A60     		str	r2, [r3]
  50              		.loc 1 231 0
  51 0020 5960     		str	r1, [r3, #4]
 232:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 6


 233:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set HSITRIM bits to the reset value */
 234:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MODIFY_REG(RCC->CR, RCC_CR_HSITRIM, (0x10U << RCC_CR_HSITRIM_Pos));
  52              		.loc 1 234 0
  53 0022 1A68     		ldr	r2, [r3]
  54 0024 22F0F802 		bic	r2, r2, #248
  55 0028 42F08002 		orr	r2, r2, #128
  56 002c 1A60     		str	r2, [r3]
 235:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 236:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_SUPPORT)
 237:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Reset CFGR2 register */
 238:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CFGR2);
 239:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 240:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_SUPPORT */
 241:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Disable all interrupts */
 242:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   CLEAR_REG(RCC->CIR);
  57              		.loc 1 242 0
  58 002e 9960     		str	r1, [r3, #8]
 243:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 244:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 245:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HSI_VALUE;
  59              		.loc 1 245 0
  60 0030 024A     		ldr	r2, .L2+4
  61 0032 034B     		ldr	r3, .L2+8
  62 0034 1A60     		str	r2, [r3]
  63 0036 7047     		bx	lr
  64              	.L3:
  65              		.align	2
  66              	.L2:
  67 0038 00100240 		.word	1073876992
  68 003c 00127A00 		.word	8000000
  69 0040 00000000 		.word	SystemCoreClock
  70              		.cfi_endproc
  71              	.LFE64:
  73              		.section	.text.HAL_RCC_OscConfig,"ax",%progbits
  74              		.align	1
  75              		.global	HAL_RCC_OscConfig
  76              		.thumb
  77              		.thumb_func
  79              	HAL_RCC_OscConfig:
  80              	.LFB65:
 246:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 247:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 248:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 249:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the RCC Oscillators according to the specified parameters in the
 250:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         RCC_OscInitTypeDef.
 251:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that
 252:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC Oscillators.
 253:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when used as system clock.
 254:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The PLL is not disabled when USB OTG FS clock is enabled (specific to devices with USB 
 255:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transitions LSE Bypass to LSE On and LSE On to LSE Bypass are not
 256:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to LSE Off
 257:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then LSE On or LSE Bypass.
 258:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Transition HSE Bypass to HSE On and HSE On to HSE Bypass are not
 259:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         supported by this macro. User should request a transition to HSE Off
 260:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         first and then HSE On or HSE Bypass.
 261:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 262:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 7


 263:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_OscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
 264:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
  81              		.loc 1 264 0
  82              		.cfi_startproc
  83              		@ args = 0, pretend = 0, frame = 8
  84              		@ frame_needed = 0, uses_anonymous_args = 0
  85              	.LVL0:
 265:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 266:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 267:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 268:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
 269:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_OSCILLATORTYPE(RCC_OscInitStruct->OscillatorType));
 270:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 271:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------- HSE Configuration ------------------------*/ 
 272:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSE) == RCC_OSCILLATORTYPE_HSE)
  86              		.loc 1 272 0
  87 0000 0368     		ldr	r3, [r0]
 264:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
  88              		.loc 1 264 0
  89 0002 2DE9F341 		push	{r0, r1, r4, r5, r6, r7, r8, lr}
  90              	.LCFI0:
  91              		.cfi_def_cfa_offset 32
  92              		.cfi_offset 4, -24
  93              		.cfi_offset 5, -20
  94              		.cfi_offset 6, -16
  95              		.cfi_offset 7, -12
  96              		.cfi_offset 8, -8
  97              		.cfi_offset 14, -4
  98              		.loc 1 272 0
  99 0006 DB07     		lsls	r3, r3, #31
 264:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****    uint32_t tickstart = 0U;
 100              		.loc 1 264 0
 101 0008 0546     		mov	r5, r0
 102              		.loc 1 272 0
 103 000a 03D4     		bmi	.L5
 104              	.LVL1:
 105              	.L10:
 273:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 274:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 275:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSE(RCC_OscInitStruct->HSEState));
 276:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 277:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* When the HSE is used as system clock or clock source for PLL in these cases it is not allowe
 278:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSE) 
 279:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 280:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 281:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET) && (RCC_OscInitStruct->HSEState == RCC_HSE_
 282:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 283:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 284:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 285:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 286:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 287:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 288:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Set the new HSE configuration ---------------------------------------*/
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_HSE_CONFIG(RCC_OscInitStruct->HSEState);
 290:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 291:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 292:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Check the HSE State */
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 8


 293:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSEState != RCC_HSE_OFF)
 294:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 295:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 296:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 297:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 298:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is ready */
 299:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 300:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 301:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 302:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 303:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 304:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 305:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 306:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 307:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 308:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 309:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 310:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 311:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 312:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSE is disabled */
 313:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) != RESET)
 314:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 315:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****            if((HAL_GetTick() - tickstart ) > HSE_TIMEOUT_VALUE)
 316:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 317:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 318:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 319:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 320:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 321:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 322:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 323:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*----------------------------- HSI Configuration --------------------------*/ 
 324:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_HSI) == RCC_OSCILLATORTYPE_HSI)
 106              		.loc 1 324 0
 107 000c 2B68     		ldr	r3, [r5]
 108 000e 9F07     		lsls	r7, r3, #30
 109 0010 4FD4     		bmi	.L6
 110 0012 90E0     		b	.L21
 111              	.LVL2:
 112              	.L5:
 278:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 113              		.loc 1 278 0
 114 0014 974C     		ldr	r4, .L99
 115 0016 6368     		ldr	r3, [r4, #4]
 116 0018 03F00C03 		and	r3, r3, #12
 117 001c 042B     		cmp	r3, #4
 118 001e 07D0     		beq	.L8
 279:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 119              		.loc 1 279 0
 120 0020 6368     		ldr	r3, [r4, #4]
 121 0022 03F00C03 		and	r3, r3, #12
 122 0026 082B     		cmp	r3, #8
 123 0028 0AD1     		bne	.L9
 279:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 124              		.loc 1 279 0 is_stmt 0 discriminator 1
 125 002a 6368     		ldr	r3, [r4, #4]
 126 002c DE03     		lsls	r6, r3, #15
 127 002e 07D5     		bpl	.L9
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 9


 128              	.L8:
 281:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 129              		.loc 1 281 0 is_stmt 1
 130 0030 2368     		ldr	r3, [r4]
 131 0032 9C03     		lsls	r4, r3, #14
 132 0034 EAD5     		bpl	.L10
 281:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 133              		.loc 1 281 0 is_stmt 0 discriminator 1
 134 0036 6B68     		ldr	r3, [r5, #4]
 135 0038 002B     		cmp	r3, #0
 136 003a E7D1     		bne	.L10
 137              	.LVL3:
 138              	.L25:
 283:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 139              		.loc 1 283 0 is_stmt 1
 140 003c 0120     		movs	r0, #1
 141 003e 67E1     		b	.L89
 142              	.LVL4:
 143              	.L9:
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 144              		.loc 1 289 0
 145 0040 6B68     		ldr	r3, [r5, #4]
 146 0042 B3F5803F 		cmp	r3, #65536
 147 0046 13D0     		beq	.L93
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 148              		.loc 1 289 0 is_stmt 0 discriminator 2
 149 0048 5BB9     		cbnz	r3, .L14
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 150              		.loc 1 289 0 discriminator 3
 151 004a 2368     		ldr	r3, [r4]
 152 004c 23F48033 		bic	r3, r3, #65536
 153 0050 2360     		str	r3, [r4]
 154 0052 2368     		ldr	r3, [r4]
 155 0054 23F48023 		bic	r3, r3, #262144
 156 0058 2360     		str	r3, [r4]
 310:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 157              		.loc 1 310 0 is_stmt 1 discriminator 3
 158 005a FFF7FEFF 		bl	HAL_GetTick
 159              	.LVL5:
 160 005e 0646     		mov	r6, r0
 161              	.LVL6:
 313:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 162              		.loc 1 313 0 discriminator 3
 163 0060 23E0     		b	.L15
 164              	.LVL7:
 165              	.L14:
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 166              		.loc 1 289 0 discriminator 4
 167 0062 B3F5A02F 		cmp	r3, #327680
 168 0066 2368     		ldr	r3, [r4]
 169 0068 06D1     		bne	.L16
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 170              		.loc 1 289 0 is_stmt 0 discriminator 5
 171 006a 43F48023 		orr	r3, r3, #262144
 172 006e 2360     		str	r3, [r4]
 173              	.L93:
 174 0070 2368     		ldr	r3, [r4]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 10


 175 0072 43F48033 		orr	r3, r3, #65536
 176 0076 05E0     		b	.L91
 177              	.L16:
 289:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 178              		.loc 1 289 0 discriminator 6
 179 0078 23F48033 		bic	r3, r3, #65536
 180 007c 2360     		str	r3, [r4]
 181 007e 2368     		ldr	r3, [r4]
 182 0080 23F48023 		bic	r3, r3, #262144
 183              	.L91:
 184 0084 2360     		str	r3, [r4]
 296:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 185              		.loc 1 296 0 is_stmt 1 discriminator 6
 186 0086 FFF7FEFF 		bl	HAL_GetTick
 187              	.LVL8:
 188 008a 0646     		mov	r6, r0
 189              	.LVL9:
 190              	.L17:
 299:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 191              		.loc 1 299 0
 192 008c 2368     		ldr	r3, [r4]
 193 008e 9803     		lsls	r0, r3, #14
 194 0090 BCD4     		bmi	.L10
 301:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 195              		.loc 1 301 0
 196 0092 FFF7FEFF 		bl	HAL_GetTick
 197              	.LVL10:
 198 0096 801B     		subs	r0, r0, r6
 199 0098 6428     		cmp	r0, #100
 200 009a F7D9     		bls	.L17
 201              	.LVL11:
 202              	.L19:
 303:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 203              		.loc 1 303 0
 204 009c 0320     		movs	r0, #3
 205 009e 37E1     		b	.L89
 206              	.LVL12:
 207              	.L20:
 315:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 208              		.loc 1 315 0
 209 00a0 FFF7FEFF 		bl	HAL_GetTick
 210              	.LVL13:
 211 00a4 801B     		subs	r0, r0, r6
 212 00a6 6428     		cmp	r0, #100
 213 00a8 F8D8     		bhi	.L19
 214              	.L15:
 313:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 215              		.loc 1 313 0
 216 00aa 2368     		ldr	r3, [r4]
 217 00ac 9903     		lsls	r1, r3, #14
 218 00ae F7D4     		bmi	.L20
 219 00b0 ACE7     		b	.L10
 220              	.LVL14:
 221              	.L6:
 325:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 326:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 327:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HSI(RCC_OscInitStruct->HSIState));
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 11


 328:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_CALIBRATION_VALUE(RCC_OscInitStruct->HSICalibrationValue));
 329:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 330:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if HSI is used as system clock or as PLL source when PLL is selected as system clock *
 331:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_HSI) 
 222              		.loc 1 331 0
 223 00b2 704C     		ldr	r4, .L99
 224 00b4 6368     		ldr	r3, [r4, #4]
 225 00b6 13F00C0F 		tst	r3, #12
 226 00ba 07D0     		beq	.L22
 332:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        || ((__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && (__HAL_RCC_GET_PLL_
 227              		.loc 1 332 0
 228 00bc 6368     		ldr	r3, [r4, #4]
 229 00be 03F00C03 		and	r3, r3, #12
 230 00c2 082B     		cmp	r3, #8
 231 00c4 10D1     		bne	.L23
 232              		.loc 1 332 0 is_stmt 0 discriminator 1
 233 00c6 6368     		ldr	r3, [r4, #4]
 234 00c8 DA03     		lsls	r2, r3, #15
 235 00ca 0DD4     		bmi	.L23
 236              	.L22:
 333:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 334:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* When HSI is used as system clock it will not disabled */
 335:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET) && (RCC_OscInitStruct->HSIState != RCC_HSI_
 237              		.loc 1 335 0 is_stmt 1
 238 00cc 2368     		ldr	r3, [r4]
 239 00ce 9B07     		lsls	r3, r3, #30
 240 00d0 02D5     		bpl	.L24
 241              		.loc 1 335 0 is_stmt 0 discriminator 1
 242 00d2 2B69     		ldr	r3, [r5, #16]
 243 00d4 012B     		cmp	r3, #1
 244 00d6 B1D1     		bne	.L25
 245              	.L24:
 336:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 337:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 338:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 339:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Otherwise, just the calibration is allowed */
 340:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 341:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 342:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 343:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 246              		.loc 1 343 0 is_stmt 1
 247 00d8 2368     		ldr	r3, [r4]
 248 00da 6A69     		ldr	r2, [r5, #20]
 249 00dc 23F0F803 		bic	r3, r3, #248
 250 00e0 43EAC203 		orr	r3, r3, r2, lsl #3
 251 00e4 2360     		str	r3, [r4]
 335:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 252              		.loc 1 335 0
 253 00e6 26E0     		b	.L21
 254              	.L23:
 344:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 345:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 346:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 347:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 348:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI State */
 349:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(RCC_OscInitStruct->HSIState != RCC_HSI_OFF)
 255              		.loc 1 349 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 12


 256 00e8 2A69     		ldr	r2, [r5, #16]
 257 00ea 634B     		ldr	r3, .L99+4
 258 00ec B2B1     		cbz	r2, .L26
 350:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 351:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Enable the Internal High Speed oscillator (HSI). */
 352:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_ENABLE();
 259              		.loc 1 352 0
 260 00ee 0122     		movs	r2, #1
 261 00f0 1A60     		str	r2, [r3]
 353:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 354:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 355:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 262              		.loc 1 355 0
 263 00f2 FFF7FEFF 		bl	HAL_GetTick
 264              	.LVL15:
 265 00f6 0646     		mov	r6, r0
 266              	.LVL16:
 267              	.L27:
 356:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 357:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is ready */
 358:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 268              		.loc 1 358 0
 269 00f8 2368     		ldr	r3, [r4]
 270 00fa 5E4A     		ldr	r2, .L99
 271 00fc 9F07     		lsls	r7, r3, #30
 272 00fe 05D4     		bmi	.L96
 359:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 360:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 273              		.loc 1 360 0
 274 0100 FFF7FEFF 		bl	HAL_GetTick
 275              	.LVL17:
 276 0104 801B     		subs	r0, r0, r6
 277 0106 0228     		cmp	r0, #2
 278 0108 F6D9     		bls	.L27
 279 010a C7E7     		b	.L19
 280              	.L96:
 361:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 362:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 363:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 364:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 365:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                 
 366:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Adjusts the Internal High Speed oscillator (HSI) calibration value.*/
 367:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_CALIBRATIONVALUE_ADJUST(RCC_OscInitStruct->HSICalibrationValue);
 281              		.loc 1 367 0
 282 010c 1368     		ldr	r3, [r2]
 283 010e 6969     		ldr	r1, [r5, #20]
 284 0110 23F0F803 		bic	r3, r3, #248
 285 0114 43EAC103 		orr	r3, r3, r1, lsl #3
 286 0118 1360     		str	r3, [r2]
 287 011a 0CE0     		b	.L21
 288              	.LVL18:
 289              	.L26:
 368:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 369:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 370:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 371:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the Internal High Speed oscillator (HSI). */
 372:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSI_DISABLE();
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 13


 290              		.loc 1 372 0
 291 011c 1A60     		str	r2, [r3]
 373:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 374:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 375:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 292              		.loc 1 375 0
 293 011e FFF7FEFF 		bl	HAL_GetTick
 294              	.LVL19:
 295 0122 0646     		mov	r6, r0
 296              	.LVL20:
 297              	.L29:
 376:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 377:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till HSI is disabled */
 378:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) != RESET)
 298              		.loc 1 378 0
 299 0124 2368     		ldr	r3, [r4]
 300 0126 9807     		lsls	r0, r3, #30
 301 0128 05D5     		bpl	.L21
 379:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 380:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > HSI_TIMEOUT_VALUE)
 302              		.loc 1 380 0
 303 012a FFF7FEFF 		bl	HAL_GetTick
 304              	.LVL21:
 305 012e 801B     		subs	r0, r0, r6
 306 0130 0228     		cmp	r0, #2
 307 0132 F7D9     		bls	.L29
 308 0134 B2E7     		b	.L19
 309              	.LVL22:
 310              	.L21:
 381:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 382:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 383:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 384:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 385:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 386:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 387:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 388:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSI Configuration -------------------------*/ 
 389:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSI) == RCC_OSCILLATORTYPE_LSI)
 311              		.loc 1 389 0
 312 0136 2B68     		ldr	r3, [r5]
 313 0138 1907     		lsls	r1, r3, #28
 314 013a 03D4     		bmi	.L31
 315              	.L38:
 390:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 391:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 392:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSI(RCC_OscInitStruct->LSIState));
 393:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 394:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSI State */
 395:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSIState != RCC_LSI_OFF)
 396:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 397:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable the Internal Low Speed oscillator (LSI). */
 398:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_ENABLE();
 399:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 400:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 401:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 402:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 403:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is ready */  
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 14


 404:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) == RESET)
 405:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 406:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 407:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 408:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 409:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 410:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 411:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /*  To have a fully stabilized clock in the specified range, a software delay of 1ms 
 412:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           should be added.*/
 413:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       RCC_Delay(1);
 414:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 415:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 416:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 417:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Disable the Internal Low Speed oscillator (LSI). */
 418:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_LSI_DISABLE();
 419:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 420:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 421:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 422:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 423:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSI is disabled */  
 424:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSIRDY) != RESET)
 425:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 426:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > LSI_TIMEOUT_VALUE)
 427:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 428:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 429:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 430:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 431:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 432:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 433:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------------ LSE Configuration -------------------------*/ 
 434:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_OscInitStruct->OscillatorType) & RCC_OSCILLATORTYPE_LSE) == RCC_OSCILLATORTYPE_LSE)
 316              		.loc 1 434 0
 317 013c 2B68     		ldr	r3, [r5]
 318 013e 5A07     		lsls	r2, r3, #29
 319 0140 2DD4     		bmi	.L32
 320 0142 92E0     		b	.L41
 321              	.L31:
 395:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 322              		.loc 1 395 0
 323 0144 AA69     		ldr	r2, [r5, #24]
 324 0146 4B4C     		ldr	r4, .L99
 325 0148 4C4B     		ldr	r3, .L99+8
 326 014a DAB1     		cbz	r2, .L34
 398:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 327              		.loc 1 398 0
 328 014c 0122     		movs	r2, #1
 329 014e 1A60     		str	r2, [r3]
 401:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 330              		.loc 1 401 0
 331 0150 FFF7FEFF 		bl	HAL_GetTick
 332              	.LVL23:
 333 0154 0646     		mov	r6, r0
 334              	.LVL24:
 335              	.L35:
 404:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 336              		.loc 1 404 0
 337 0156 636A     		ldr	r3, [r4, #36]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 15


 338 0158 9B07     		lsls	r3, r3, #30
 339 015a 05D4     		bmi	.L97
 406:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 340              		.loc 1 406 0
 341 015c FFF7FEFF 		bl	HAL_GetTick
 342              	.LVL25:
 343 0160 801B     		subs	r0, r0, r6
 344 0162 0228     		cmp	r0, #2
 345 0164 F7D9     		bls	.L35
 346 0166 99E7     		b	.L19
 347              	.L97:
 348              	.LVL26:
 349              	.LBB16:
 350              	.LBB17:
 435:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 436:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     FlagStatus       pwrclkchanged = RESET;
 437:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 438:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the parameters */
 439:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_LSE(RCC_OscInitStruct->LSEState));
 440:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 441:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Update LSE configuration in Backup Domain control register    */
 442:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Requires to enable write access to Backup Domain of necessary */
 443:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_PWR_IS_CLK_DISABLED())
 444:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 445:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_ENABLE();
 446:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 447:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 448:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 449:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 450:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 451:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Enable write access to Backup domain */
 452:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       SET_BIT(PWR->CR, PWR_CR_DBP);
 453:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 454:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait for Backup domain Write protection disable */
 455:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 456:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 457:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(HAL_IS_BIT_CLR(PWR->CR, PWR_CR_DBP))
 458:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 459:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart) > RCC_DBP_TIMEOUT_VALUE)
 460:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 461:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 462:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 463:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 464:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 465:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 466:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Set the new LSE configuration -----------------------------------------*/
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_LSE_CONFIG(RCC_OscInitStruct->LSEState);
 468:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 469:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_OscInitStruct->LSEState != RCC_LSE_OFF)
 470:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 471:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 472:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 473:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 474:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is ready */  
 475:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) == RESET)
 476:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 477:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 16


 478:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 479:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 480:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 481:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 482:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 483:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 484:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 485:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Get Start Tick */
 486:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       tickstart = HAL_GetTick();
 487:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 488:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Wait till LSE is disabled */  
 489:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while(__HAL_RCC_GET_FLAG(RCC_FLAG_LSERDY) != RESET)
 490:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 491:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > RCC_LSE_TIMEOUT_VALUE)
 492:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 493:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 494:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 495:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 496:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 497:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 498:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Require to disable power clock if necessary */
 499:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(pwrclkchanged == SET)
 500:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 501:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       __HAL_RCC_PWR_CLK_DISABLE();
 502:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 503:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 504:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 505:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 506:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL2 Configuration -----------------------*/
 507:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 508:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL2(RCC_OscInitStruct->PLL2.PLL2State));
 509:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL2.PLL2State) != RCC_PLL2_NONE)
 510:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 511:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* This bit can not be cleared if the PLL2 clock is used indirectly as system 
 512:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       clock (i.e. it is used as PLL clock entry that is used as system clock). */
 513:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((__HAL_RCC_GET_PLL_OSCSOURCE() == RCC_PLLSOURCE_HSE) && \
 514:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         (__HAL_RCC_GET_SYSCLK_SOURCE() == RCC_SYSCLKSOURCE_STATUS_PLLCLK) && \
 515:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         ((READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC)) == RCC_CFGR2_PREDIV1SRC_PLL2))
 516:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 517:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 518:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 519:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 520:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 521:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL2.PLL2State) == RCC_PLL2_ON)
 522:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 523:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 524:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL2_MUL(RCC_OscInitStruct->PLL2.PLL2MUL));
 525:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_HSE_PREDIV2(RCC_OscInitStruct->PLL2.HSEPrediv2Value));
 526:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 527:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Prediv2 can be written only when the PLLI2S is disabled. */
 528:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Return an error only if new value is different from the programmed value */
 529:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (HAL_IS_BIT_SET(RCC->CR,RCC_CR_PLL3ON) && \
 530:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           (__HAL_RCC_HSE_GET_PREDIV2() != RCC_OscInitStruct->PLL2.HSEPrediv2Value))
 531:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 532:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_ERROR;
 533:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 534:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 17


 535:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 536:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 537:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 538:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 539:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 540:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 541:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */
 542:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY) != RESET)
 543:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 544:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 545:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 546:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 547:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 548:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 549:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 550:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv2 factor --------------------------------*/
 551:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_HSE_PREDIV2_CONFIG(RCC_OscInitStruct->PLL2.HSEPrediv2Value);
 552:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 553:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL2 multiplication factors. */
 554:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_CONFIG(RCC_OscInitStruct->PLL2.PLL2MUL);
 555:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 556:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL2. */
 557:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_ENABLE();
 558:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 559:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 560:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 561:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 562:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is ready */
 563:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  == RESET)
 564:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 565:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 566:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 567:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 568:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 569:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 570:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 571:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 572:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 573:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****        /* Set PREDIV1 source to HSE */
 574:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         CLEAR_BIT(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC);
 575:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 576:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL2. */
 577:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL2_DISABLE();
 578:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 579:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 580:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 581:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 582:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL2 is disabled */  
 583:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLL2RDY)  != RESET)
 584:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 585:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL2_TIMEOUT_VALUE)
 586:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 587:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 588:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 589:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 590:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 591:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 18


 592:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 593:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 594:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
 595:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------------- PLL Configuration -----------------------*/
 596:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 597:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_PLL(RCC_OscInitStruct->PLL.PLLState));
 598:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if ((RCC_OscInitStruct->PLL.PLLState) != RCC_PLL_NONE)
 599:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 600:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check if the PLL is used as system clock or not */
 601:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 602:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 603:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if((RCC_OscInitStruct->PLL.PLLState) == RCC_PLL_ON)
 604:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 605:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Check the parameters */
 606:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLLSOURCE(RCC_OscInitStruct->PLL.PLLSource));
 607:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         assert_param(IS_RCC_PLL_MUL(RCC_OscInitStruct->PLL.PLLMUL));
 608:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 609:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 610:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 611:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 612:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 613:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 614:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 615:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */
 616:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 617:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 618:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 619:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 620:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 621:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 622:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 623:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 624:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the HSE prediv factor --------------------------------*/
 625:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* It can be written only when the PLL is disabled. Not used in PLL source is different tha
 626:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(RCC_OscInitStruct->PLL.PLLSource == RCC_PLLSOURCE_HSE)
 627:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 628:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Check the parameter */
 629:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_HSE_PREDIV(RCC_OscInitStruct->HSEPredivValue));
 630:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 631:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           assert_param(IS_RCC_PREDIV1_SOURCE(RCC_OscInitStruct->Prediv1Source));
 632:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           
 633:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 source */
 634:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           SET_BIT(RCC->CFGR2, RCC_OscInitStruct->Prediv1Source);
 635:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
 636:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 637:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* Set PREDIV1 Value */
 638:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           __HAL_RCC_HSE_PREDIV_CONFIG(RCC_OscInitStruct->HSEPredivValue);
 639:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 640:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 641:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Configure the main PLL clock source and multiplication factors. */
 642:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_CONFIG(RCC_OscInitStruct->PLL.PLLSource,
 643:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 644:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Enable the main PLL. */
 645:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_ENABLE();
 646:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 647:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 648:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 19


 649:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 650:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is ready */
 651:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  == RESET)
 652:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 653:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 654:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 655:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 656:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 657:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 658:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 659:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
 660:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 661:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Disable the main PLL. */
 662:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         __HAL_RCC_PLL_DISABLE();
 663:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 664:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Get Start Tick */
 665:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         tickstart = HAL_GetTick();
 666:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 667:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* Wait till PLL is disabled */  
 668:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         while(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY)  != RESET)
 669:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 670:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           if((HAL_GetTick() - tickstart ) > PLL_TIMEOUT_VALUE)
 671:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 672:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             return HAL_TIMEOUT;
 673:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           }
 674:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 675:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 676:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 677:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 678:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 679:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 680:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 681:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 682:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 683:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 684:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 685:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 686:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 687:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Initializes the CPU, AHB and APB buses clocks according to the specified 
 688:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         parameters in the RCC_ClkInitStruct.
 689:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_OscInitTypeDef structure that
 690:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         contains the configuration information for the RCC peripheral.
 691:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  FLatency FLASH Latency                   
 692:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          The value of this parameter depend on device used within the same series
 693:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
 694:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated by @ref HAL_RCC_GetHCLKFreq() function called within this function
 695:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 696:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The HSI is used (enabled by hardware) as system clock source after
 697:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         start-up from Reset, wake-up from STOP and STANDBY mode, or in case
 698:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         of failure of the HSE used directly or indirectly as system clock
 699:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         (if the Clock Security System CSS is enabled).
 700:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 701:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   A switch from one clock source to another occurs only if the target
 702:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         clock source is ready (clock stable after start-up delay or PLL locked). 
 703:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         If a clock source which is not yet ready is selected, the switch will
 704:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         occur when the clock source will be ready. 
 705:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         You can use @ref HAL_RCC_GetClockConfig() function to know which clock is
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 20


 706:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         currently used as system clock source.
 707:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HAL status
 708:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 709:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** HAL_StatusTypeDef HAL_RCC_ClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t FLatency)
 710:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 711:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 712:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 713:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 714:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
 715:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_CLOCKTYPE(RCC_ClkInitStruct->ClockType));
 716:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_FLASH_LATENCY(FLatency));
 717:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 718:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* To correctly read data from FLASH memory, the number of wait states (LATENCY) 
 719:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   must be correctly programmed according to the frequency of the CPU clock 
 720:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     (HCLK) of the device. */
 721:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 722:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 723:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Increasing the number of wait states because of higher CPU frequency */
 724:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency > (FLASH->ACR & FLASH_ACR_LATENCY))
 725:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 726:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 727:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 728:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 729:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 730:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 731:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 732:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 733:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 734:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 735:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 736:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 737:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 738:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- HCLK Configuration --------------------------*/
 739:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_HCLK) == RCC_CLOCKTYPE_HCLK)
 740:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 741:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_HCLK(RCC_ClkInitStruct->AHBCLKDivider));
 742:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_HPRE, RCC_ClkInitStruct->AHBCLKDivider);
 743:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 744:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 745:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*------------------------- SYSCLK Configuration ---------------------------*/ 
 746:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_SYSCLK) == RCC_CLOCKTYPE_SYSCLK)
 747:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 748:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_SYSCLKSOURCE(RCC_ClkInitStruct->SYSCLKSource));
 749:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 750:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSE is selected as System Clock Source */
 751:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 752:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 753:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSE ready flag */  
 754:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSERDY) == RESET)
 755:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 756:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 757:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 758:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 759:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* PLL is selected as System Clock Source */
 760:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 761:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 762:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the PLL ready flag */  
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 21


 763:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_PLLRDY) == RESET)
 764:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 765:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 766:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 767:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 768:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* HSI is selected as System Clock Source */
 769:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 770:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 771:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       /* Check the HSI ready flag */  
 772:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if(__HAL_RCC_GET_FLAG(RCC_FLAG_HSIRDY) == RESET)
 773:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 774:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         return HAL_ERROR;
 775:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 776:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 777:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_SYSCLK_CONFIG(RCC_ClkInitStruct->SYSCLKSource);
 778:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 779:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Get Start Tick */
 780:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     tickstart = HAL_GetTick();
 781:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 782:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_HSE)
 783:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 784:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSE)
 785:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 786:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 787:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 788:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 789:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 790:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 791:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 792:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else if(RCC_ClkInitStruct->SYSCLKSource == RCC_SYSCLKSOURCE_PLLCLK)
 793:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 794:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_PLLCLK)
 795:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 796:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 797:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 798:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 799:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 800:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 801:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 802:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     else
 803:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 804:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       while (__HAL_RCC_GET_SYSCLK_SOURCE() != RCC_SYSCLKSOURCE_STATUS_HSI)
 805:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 806:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if((HAL_GetTick() - tickstart ) > CLOCKSWITCH_TIMEOUT_VALUE)
 807:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 808:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           return HAL_TIMEOUT;
 809:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 810:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 811:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }      
 812:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 813:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(FLASH_ACR_LATENCY)
 814:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Decreasing the number of wait states because of lower CPU frequency */
 815:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(FLatency < (FLASH->ACR & FLASH_ACR_LATENCY))
 816:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 817:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Program the new number of wait states to the LATENCY bits in the FLASH_ACR register */
 818:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_FLASH_SET_LATENCY(FLatency);
 819:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 22


 820:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check that the new number of wait states is taken into account to access the Flash
 821:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     memory by reading the FLASH_ACR register */
 822:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     if((FLASH->ACR & FLASH_ACR_LATENCY) != FLatency)
 823:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 824:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       return HAL_ERROR;
 825:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 826:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }    
 827:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* FLASH_ACR_LATENCY */
 828:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 829:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK1 Configuration ---------------------------*/ 
 830:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK1) == RCC_CLOCKTYPE_PCLK1)
 831:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 832:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB1CLKDivider));
 833:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE1, RCC_ClkInitStruct->APB1CLKDivider);
 834:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 835:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 836:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /*-------------------------- PCLK2 Configuration ---------------------------*/ 
 837:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(((RCC_ClkInitStruct->ClockType) & RCC_CLOCKTYPE_PCLK2) == RCC_CLOCKTYPE_PCLK2)
 838:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 839:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     assert_param(IS_RCC_PCLK(RCC_ClkInitStruct->APB2CLKDivider));
 840:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     MODIFY_REG(RCC->CFGR, RCC_CFGR_PPRE2, ((RCC_ClkInitStruct->APB2CLKDivider) << 3));
 841:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 842:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****  
 843:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Update the SystemCoreClock global variable */
 844:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   SystemCoreClock = HAL_RCC_GetSysClockFreq() >> AHBPrescTable[(RCC->CFGR & RCC_CFGR_HPRE)>> RCC_CF
 845:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 846:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the source of time base considering new system clocks settings*/
 847:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_InitTick (TICK_INT_PRIORITY);
 848:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 849:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return HAL_OK;
 850:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 851:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 852:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 853:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @}
 854:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 855:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 856:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /** @defgroup RCC_Exported_Functions_Group2 Peripheral Control functions
 857:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *  @brief   RCC clocks control functions
 858:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *
 859:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @verbatim   
 860:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================
 861:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   ##### Peripheral Control functions #####
 862:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   ===============================================================================  
 863:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     [..]
 864:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     This subsection provides a set of functions allowing to control the RCC Clocks 
 865:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     frequencies.
 866:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 867:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endverbatim
 868:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @{
 869:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 870:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 871:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 872:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Selects the clock source to output on MCO pin.
 873:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   MCO pin should be configured in alternate function mode.
 874:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOx specifies the output direction for the clock source.
 875:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 876:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1 Clock source to output on MCO1 pin(PA8).
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 23


 877:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCOSource specifies the clock source to output.
 878:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 879:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_NOCLOCK     No clock selected as MCO clock
 880:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_SYSCLK      System clock selected as MCO clock
 881:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSI         HSI selected as MCO clock
 882:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_HSE         HSE selected as MCO clock
 883:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F105xC
 884:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 885:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 886:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 887:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE      XT1 external 3-25 MHz oscillator clock selecte
 888:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 889:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 890:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @if STM32F107xC
 891:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLLCLK       PLL clock divided by 2 selected as MCO source
 892:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL2CLK      PLL2 clock selected as MCO source
 893:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK_DIV2 PLL3 clock divided by 2 selected as MCO source
 894:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_EXT_HSE XT1  external 3-25 MHz oscillator clock selected as
 895:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCO1SOURCE_PLL3CLK      PLL3 clock selected as MCO source
 896:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   @endif
 897:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_MCODiv specifies the MCO DIV.
 898:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *          This parameter can be one of the following values:
 899:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *            @arg @ref RCC_MCODIV_1 no division applied to MCO clock
 900:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 901:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 902:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_MCOConfig(uint32_t RCC_MCOx, uint32_t RCC_MCOSource, uint32_t RCC_MCODiv)
 903:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 904:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 905:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 906:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 907:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO(RCC_MCOx));
 908:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCODIV(RCC_MCODiv));
 909:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(IS_RCC_MCO1SOURCE(RCC_MCOSource));
 910:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 911:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Prevent unused argument(s) compilation warning */
 912:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCOx);
 913:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   UNUSED(RCC_MCODiv);
 914:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 915:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO1 pin in alternate function mode */
 916:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Mode      = GPIO_MODE_AF_PP;
 917:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 918:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 919:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pin       = MCO1_PIN;
 920:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 921:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* MCO1 Clock Enable */
 922:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   MCO1_CLK_ENABLE();
 923:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 924:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   HAL_GPIO_Init(MCO1_GPIO_PORT, &gpio);
 925:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 926:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Configure the MCO clock source */
 927:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __HAL_RCC_MCO1_CONFIG(RCC_MCOSource, RCC_MCODiv);
 928:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 929:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 930:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 931:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Enables the Clock Security System.
 932:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   If a failure is detected on the HSE oscillator clock, this oscillator
 933:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         is automatically disabled and an interrupt is generated to inform the
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 24


 934:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         software about the failure (Clock Security System Interrupt, CSSI),
 935:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         allowing the MCU to perform rescue operations. The CSSI is linked to 
 936:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         the Cortex-M3 NMI (Non-Maskable Interrupt) exception vector.  
 937:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 938:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 939:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_EnableCSS(void)
 940:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 941:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 942:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 943:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 944:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 945:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Disables the Clock Security System.
 946:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
 947:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 948:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_DisableCSS(void)
 949:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 950:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 951:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 952:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 953:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
 954:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the SYSCLK frequency     
 955:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The system frequency computed by this function is not the real 
 956:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         frequency in the chip. It is calculated based on the predefined 
 957:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         constant and the selected clock source:
 958:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSI, function returns values based on HSI_VALUE(*)
 959:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is HSE, function returns a value based on HSE_VALUE
 960:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**)
 961:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     If SYSCLK source is PLL, function returns a value based on HSE_VALUE
 962:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           divided by PREDIV factor(**) or HSI_VALUE(*) multiplied by the PLL factor.
 963:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (*) HSI_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 964:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               8 MHz) but the real value may vary depending on the variations
 965:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *               in voltage and temperature.
 966:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note     (**) HSE_VALUE is a constant defined in stm32f1xx_hal_conf.h file (default value
 967:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                8 MHz), user has to ensure that HSE_VALUE is same as the real
 968:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                frequency of the crystal used. Otherwise, this function may
 969:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                have wrong result.
 970:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *                  
 971:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The result of this function could be not correct when using fractional
 972:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         value for HSE crystal.
 973:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 974:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   This function can be used by the user application to compute the 
 975:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         baud-rate for the communication peripherals or configure other parameters.
 976:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *           
 977:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time SYSCLK changes, this function must be called to update the
 978:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right SYSCLK value. Otherwise, any configuration based on this function will be incorre
 979:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         
 980:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval SYSCLK frequency
 981:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
 982:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetSysClockFreq(void)
 983:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
 984:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 985:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[14] = {0, 0, 4, 5, 6, 7, 8, 9, 0, 0, 0, 0, 0, 13};
 986:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
 987:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 988:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPLLMULFactorTable[16] = {2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 16};
 989:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 990:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[16] = {1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16};
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 25


 991:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 992:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   const uint8_t aPredivFactorTable[2] = {1, 2};
 993:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 994:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 995:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
 996:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tmpreg = 0U, prediv = 0U, pllclk = 0U, pllmul = 0U;
 997:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t sysclockfreq = 0U;
 998:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 999:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t prediv2 = 0U, pll2mul = 0U;
1000:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
1001:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1002:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   tmpreg = RCC->CFGR;
1003:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1004:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get SYSCLK source -------------------------------------------------------*/
1005:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   switch (tmpreg & RCC_CFGR_SWS)
1006:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1007:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSE:  /* HSE used as system clock */
1008:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1009:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSE_VALUE;
1010:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1011:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1012:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_PLLCLK:  /* PLL used as system clock */
1013:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1014:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pllmul = aPLLMULFactorTable[(uint32_t)(tmpreg & RCC_CFGR_PLLMULL) >> RCC_CFGR_PLLMULL_Pos];
1015:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
1016:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1017:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
1018:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR2 & RCC_CFGR2_PREDIV1) >> RCC_CFGR2_PREDIV1
1019:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1020:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         prediv = aPredivFactorTable[(uint32_t)(RCC->CFGR & RCC_CFGR_PLLXTPRE) >> RCC_CFGR_PLLXTPRE_
1021:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
1022:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1023:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1024:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if(HAL_IS_BIT_SET(RCC->CFGR2, RCC_CFGR2_PREDIV1SRC))
1025:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1026:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLL2 selected as Prediv1 source */
1027:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* PLLCLK = PLL2CLK / PREDIV1 * PLLMUL with PLL2CLK = HSE/PREDIV2 * PLL2MUL */
1028:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           prediv2 = ((RCC->CFGR2 & RCC_CFGR2_PREDIV2) >> RCC_CFGR2_PREDIV2_Pos) + 1;
1029:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pll2mul = ((RCC->CFGR2 & RCC_CFGR2_PLL2MUL) >> RCC_CFGR2_PLL2MUL_Pos) + 2;
1030:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((((HSE_VALUE / prediv2) * pll2mul) / prediv) * pllmul);
1031:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1032:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         else
1033:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1034:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1035:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1036:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1037:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
1038:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* If PLLMUL was set to 13 means that it was to cover the case PLLMUL 6.5 (avoid using floa
1039:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* In this case need to divide pllclk by 2 */
1040:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         if (pllmul == aPLLMULFactorTable[(uint32_t)(RCC_CFGR_PLLMULL6_5) >> RCC_CFGR_PLLMULL_Pos])
1041:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
1042:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****             pllclk = pllclk / 2;
1043:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
1044:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1045:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSE used as PLL clock source : PLLCLK = HSE/PREDIV1 * PLLMUL */
1046:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSE_VALUE / prediv) * pllmul);
1047:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 26


1048:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1049:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       else
1050:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
1051:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         /* HSI used as PLL clock source : PLLCLK = HSI/2 * PLLMUL */
1052:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         pllclk = (uint32_t)((HSI_VALUE >> 1) * pllmul);
1053:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
1054:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = pllclk;
1055:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1056:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1057:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     case RCC_SYSCLKSOURCE_STATUS_HSI:  /* HSI used as system clock source */
1058:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     default: /* HSI used as system clock */
1059:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
1060:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       sysclockfreq = HSI_VALUE;
1061:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
1062:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
1063:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1064:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return sysclockfreq;
1065:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1066:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1067:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1068:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the HCLK frequency     
1069:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time HCLK changes, this function must be called to update the
1070:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right HCLK value. Otherwise, any configuration based on this function will be incorrect
1071:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * 
1072:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   The SystemCoreClock CMSIS variable is used to store System Clock Frequency 
1073:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         and updated within this function
1074:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval HCLK frequency
1075:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1076:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetHCLKFreq(void)
1077:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1078:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
1079:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1080:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1081:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1082:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK1 frequency     
1083:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK1 changes, this function must be called to update the
1084:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK1 value. Otherwise, any configuration based on this function will be incorrec
1085:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK1 frequency
1086:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1087:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK1Freq(void)
1088:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1089:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
1090:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq() >> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE1) >> RCC_CFGR_PPRE1_Pos
1091:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
1092:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1093:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1094:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Returns the PCLK2 frequency     
1095:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note   Each time PCLK2 changes, this function must be called to update the
1096:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *         right PCLK2 value. Otherwise, any configuration based on this function will be incorrec
1097:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval PCLK2 frequency
1098:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1099:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** uint32_t HAL_RCC_GetPCLK2Freq(void)
1100:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1101:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
1102:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return (HAL_RCC_GetHCLKFreq()>> APBPrescTable[(RCC->CFGR & RCC_CFGR_PPRE2) >> RCC_CFGR_PPRE2_Pos]
1103:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
1104:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 27


1105:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1106:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Configures the RCC_OscInitStruct according to the internal 
1107:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1108:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_OscInitStruct pointer to an RCC_OscInitTypeDef structure that 
1109:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * will be configured.
1110:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1111:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1112:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetOscConfig(RCC_OscInitTypeDef  *RCC_OscInitStruct)
1113:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1114:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1115:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_OscInitStruct != NULL);
1116:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1117:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Oscillator type parameter ---------------*/
1118:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->OscillatorType = RCC_OSCILLATORTYPE_HSE | RCC_OSCILLATORTYPE_HSI  \
1119:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
1120:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1121:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
1122:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Prediv1 source --------------------------------------------------*/
1123:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->Prediv1Source = READ_BIT(RCC->CFGR2,RCC_CFGR2_PREDIV1SRC);
1124:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CFGR2_PREDIV1SRC */
1125:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1126:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSE configuration -----------------------------------------------*/
1127:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSEBYP) == RCC_CR_HSEBYP)
1128:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1129:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_BYPASS;
1130:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1131:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->CR &RCC_CR_HSEON) == RCC_CR_HSEON)
1132:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1133:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_ON;
1134:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1135:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1136:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1137:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSEState = RCC_HSE_OFF;
1138:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1139:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSEPredivValue = __HAL_RCC_HSE_GET_PREDIV();
1140:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1141:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HSI configuration -----------------------------------------------*/
1142:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_HSION) == RCC_CR_HSION)
1143:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1144:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_ON;
1145:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1146:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1147:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1148:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->HSIState = RCC_HSI_OFF;
1149:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1150:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1151:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->HSICalibrationValue = (uint32_t)((RCC->CR & RCC_CR_HSITRIM) >> RCC_CR_HSITRIM_
1152:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1153:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSE configuration -----------------------------------------------*/
1154:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->BDCR &RCC_BDCR_LSEBYP) == RCC_BDCR_LSEBYP)
1155:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1156:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_BYPASS;
1157:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1158:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else if((RCC->BDCR &RCC_BDCR_LSEON) == RCC_BDCR_LSEON)
1159:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1160:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_ON;
1161:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 28


1162:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1163:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1164:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSEState = RCC_LSE_OFF;
1165:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1166:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1167:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the LSI configuration -----------------------------------------------*/
1168:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CSR &RCC_CSR_LSION) == RCC_CSR_LSION)
1169:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1170:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_ON;
1171:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1172:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1173:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1174:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->LSIState = RCC_LSI_OFF;
1175:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1176:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1177:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1178:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL configuration -----------------------------------------------*/
1179:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLLON) == RCC_CR_PLLON)
1180:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1181:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_ON;
1182:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1183:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1184:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1185:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL.PLLState = RCC_PLL_OFF;
1186:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1187:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLSource = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLSRC);
1188:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
1189:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
1190:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the PLL2 configuration -----------------------------------------------*/
1191:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if((RCC->CR &RCC_CR_PLL2ON) == RCC_CR_PLL2ON)
1192:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1193:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_ON;
1194:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1195:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   else
1196:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1197:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     RCC_OscInitStruct->PLL2.PLL2State = RCC_PLL2_OFF;
1198:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1199:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.HSEPrediv2Value = __HAL_RCC_HSE_GET_PREDIV2();
1200:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL2.PLL2MUL = (uint32_t)(RCC->CFGR2 & RCC_CFGR2_PLL2MUL);
1201:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /* RCC_CR_PLL2ON */
1202:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1203:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1204:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1205:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  Get the RCC_ClkInitStruct according to the internal 
1206:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * RCC configuration registers.
1207:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  RCC_ClkInitStruct pointer to an RCC_ClkInitTypeDef structure that 
1208:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * contains the current clock configuration.
1209:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  pFLatency Pointer on the Flash Latency.
1210:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1211:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1212:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_GetClockConfig(RCC_ClkInitTypeDef  *RCC_ClkInitStruct, uint32_t *pFLatency)
1213:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1214:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
1215:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(RCC_ClkInitStruct != NULL);
1216:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   assert_param(pFLatency != NULL);
1217:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1218:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Set all possible values for the Clock type parameter --------------------*/
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 29


1219:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->ClockType = RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_PCLK1 | 
1220:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1221:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the SYSCLK configuration --------------------------------------------*/ 
1222:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->SYSCLKSource = (uint32_t)(RCC->CFGR & RCC_CFGR_SW);
1223:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1224:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the HCLK configuration ----------------------------------------------*/ 
1225:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->AHBCLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_HPRE); 
1226:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1227:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB1 configuration ----------------------------------------------*/ 
1228:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB1CLKDivider = (uint32_t)(RCC->CFGR & RCC_CFGR_PPRE1);   
1229:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1230:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the APB2 configuration ----------------------------------------------*/ 
1231:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_ClkInitStruct->APB2CLKDivider = (uint32_t)((RCC->CFGR & RCC_CFGR_PPRE2) >> 3);
1232:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
1233:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if   defined(FLASH_ACR_LATENCY)
1234:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get the Flash Wait State (Latency) configuration ------------------------*/   
1235:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)(FLASH->ACR & FLASH_ACR_LATENCY); 
1236:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
1237:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* For VALUE lines devices, only LATENCY_0 can be set*/
1238:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *pFLatency = (uint32_t)FLASH_LATENCY_0; 
1239:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif
1240:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1241:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1242:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1243:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief This function handles the RCC CSS interrupt request.
1244:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @note This API should be called under the NMI_Handler().
1245:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1246:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1247:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** void HAL_RCC_NMI_IRQHandler(void)
1248:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1249:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
1250:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   if(__HAL_RCC_GET_IT(RCC_IT_CSS))
1251:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1252:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* RCC Clock Security System interrupt user callback */
1253:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     HAL_RCC_CSSCallback();
1254:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
1255:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Clear RCC CSS pending bit */
1256:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __HAL_RCC_CLEAR_IT(RCC_IT_CSS);
1257:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
1258:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1259:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1260:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1261:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  This function provides delay (in milliseconds) based on CPU cycles method.
1262:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @param  mdelay: specifies the delay time length, in milliseconds.
1263:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval None
1264:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1265:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** static void RCC_Delay(uint32_t mdelay)
1266:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
1267:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   __IO uint32_t Delay = mdelay * (SystemCoreClock / 8U / 1000U);
 351              		.loc 1 1267 0
 352 0168 454B     		ldr	r3, .L99+12
 353 016a 4FF4FA52 		mov	r2, #8000
 354 016e 1B68     		ldr	r3, [r3]
 355 0170 B3FBF2F3 		udiv	r3, r3, r2
 356 0174 0193     		str	r3, [sp, #4]
 357              	.L37:
 358              	.LBB18:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 30


 359              	.LBB19:
 360              		.file 2 "../Drivers/CMSIS/Include/cmsis_gcc.h"
   1:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**************************************************************************//**
   2:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @file     cmsis_gcc.h
   3:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @brief    CMSIS Cortex-M Core Function/Instruction Header File
   4:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @version  V4.30
   5:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * @date     20. October 2015
   6:../Drivers/CMSIS/Include/cmsis_gcc.h ****  ******************************************************************************/
   7:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Copyright (c) 2009 - 2015 ARM LIMITED
   8:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
   9:../Drivers/CMSIS/Include/cmsis_gcc.h ****    All rights reserved.
  10:../Drivers/CMSIS/Include/cmsis_gcc.h ****    Redistribution and use in source and binary forms, with or without
  11:../Drivers/CMSIS/Include/cmsis_gcc.h ****    modification, are permitted provided that the following conditions are met:
  12:../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions of source code must retain the above copyright
  13:../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer.
  14:../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Redistributions in binary form must reproduce the above copyright
  15:../Drivers/CMSIS/Include/cmsis_gcc.h ****      notice, this list of conditions and the following disclaimer in the
  16:../Drivers/CMSIS/Include/cmsis_gcc.h ****      documentation and/or other materials provided with the distribution.
  17:../Drivers/CMSIS/Include/cmsis_gcc.h ****    - Neither the name of ARM nor the names of its contributors may be used
  18:../Drivers/CMSIS/Include/cmsis_gcc.h ****      to endorse or promote products derived from this software without
  19:../Drivers/CMSIS/Include/cmsis_gcc.h ****      specific prior written permission.
  20:../Drivers/CMSIS/Include/cmsis_gcc.h ****    *
  21:../Drivers/CMSIS/Include/cmsis_gcc.h ****    THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS "AS IS"
  22:../Drivers/CMSIS/Include/cmsis_gcc.h ****    AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE
  23:../Drivers/CMSIS/Include/cmsis_gcc.h ****    IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE
  24:../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARE DISCLAIMED. IN NO EVENT SHALL COPYRIGHT HOLDERS AND CONTRIBUTORS BE
  25:../Drivers/CMSIS/Include/cmsis_gcc.h ****    LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
  26:../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
  27:../Drivers/CMSIS/Include/cmsis_gcc.h ****    SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
  28:../Drivers/CMSIS/Include/cmsis_gcc.h ****    INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
  29:../Drivers/CMSIS/Include/cmsis_gcc.h ****    CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
  30:../Drivers/CMSIS/Include/cmsis_gcc.h ****    ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
  31:../Drivers/CMSIS/Include/cmsis_gcc.h ****    POSSIBILITY OF SUCH DAMAGE.
  32:../Drivers/CMSIS/Include/cmsis_gcc.h ****    ---------------------------------------------------------------------------*/
  33:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  34:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  35:../Drivers/CMSIS/Include/cmsis_gcc.h **** #ifndef __CMSIS_GCC_H
  36:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_H
  37:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  38:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ignore some GCC warnings */
  39:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined ( __GNUC__ )
  40:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic push
  41:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wsign-conversion"
  42:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wconversion"
  43:../Drivers/CMSIS/Include/cmsis_gcc.h **** #pragma GCC diagnostic ignored "-Wunused-parameter"
  44:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
  45:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  46:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  47:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ###########################  Core Function Access  ########################### */
  48:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \ingroup  CMSIS_Core_FunctionInterface
  49:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \defgroup CMSIS_Core_RegAccFunctions CMSIS Core Register Access Functions
  50:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
  51:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  52:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  53:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  54:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable IRQ Interrupts
  55:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables IRQ interrupts by clearing the I-bit in the CPSR.
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 31


  56:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
  57:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  58:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_irq(void)
  59:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  60:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie i" : : : "memory");
  61:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  62:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  63:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  64:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  65:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable IRQ Interrupts
  66:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables IRQ interrupts by setting the I-bit in the CPSR.
  67:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Can only be executed in Privileged modes.
  68:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  69:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_irq(void)
  70:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  71:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid i" : : : "memory");
  72:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  73:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  74:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  75:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  76:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Control Register
  77:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the Control Register.
  78:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Control Register value
  79:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  80:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_CONTROL(void)
  81:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  82:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
  83:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  84:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, control" : "=r" (result) );
  85:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
  86:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  87:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  88:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  89:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
  90:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Control Register
  91:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Writes the given value to the Control Register.
  92:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    control  Control Register value to set
  93:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
  94:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_CONTROL(uint32_t control)
  95:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
  96:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR control, %0" : : "r" (control) : "memory");
  97:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
  98:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
  99:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 100:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 101:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get IPSR Register
 102:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the IPSR Register.
 103:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               IPSR Register value
 104:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 105:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_IPSR(void)
 106:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 107:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 108:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 109:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, ipsr" : "=r" (result) );
 110:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 111:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 112:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 32


 113:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 114:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 115:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get APSR Register
 116:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the APSR Register.
 117:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               APSR Register value
 118:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 119:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_APSR(void)
 120:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 121:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 122:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 123:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, apsr" : "=r" (result) );
 124:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 125:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 126:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 127:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 128:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 129:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get xPSR Register
 130:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the content of the xPSR Register.
 131:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 132:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \return               xPSR Register value
 133:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 134:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_xPSR(void)
 135:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 136:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 137:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 138:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, xpsr" : "=r" (result) );
 139:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 140:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 141:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 142:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 143:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 144:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Process Stack Pointer
 145:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Process Stack Pointer (PSP).
 146:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               PSP Register value
 147:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 148:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PSP(void)
 149:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 150:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 151:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 152:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, psp\n"  : "=r" (result) );
 153:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 154:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 155:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 156:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 157:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 158:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Process Stack Pointer
 159:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Process Stack Pointer (PSP).
 160:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    topOfProcStack  Process Stack Pointer value to set
 161:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 162:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PSP(uint32_t topOfProcStack)
 163:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 164:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR psp, %0\n" : : "r" (topOfProcStack) : "sp");
 165:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 166:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 167:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 168:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 169:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Main Stack Pointer
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 33


 170:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Main Stack Pointer (MSP).
 171:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               MSP Register value
 172:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 173:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_MSP(void)
 174:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 175:../Drivers/CMSIS/Include/cmsis_gcc.h ****   register uint32_t result;
 176:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 177:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, msp\n" : "=r" (result) );
 178:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 179:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 180:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 181:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 182:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 183:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Main Stack Pointer
 184:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Main Stack Pointer (MSP).
 185:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 186:../Drivers/CMSIS/Include/cmsis_gcc.h ****     \param [in]    topOfMainStack  Main Stack Pointer value to set
 187:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 188:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_MSP(uint32_t topOfMainStack)
 189:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 190:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR msp, %0\n" : : "r" (topOfMainStack) : "sp");
 191:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 192:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 193:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 194:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 195:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Priority Mask
 196:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current state of the priority mask bit from the Priority Mask Register.
 197:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Priority Mask value
 198:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 199:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_PRIMASK(void)
 200:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 201:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 202:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 203:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, primask" : "=r" (result) );
 204:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 205:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 206:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 207:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 208:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 209:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Priority Mask
 210:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Priority Mask Register.
 211:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    priMask  Priority Mask
 212:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 213:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_PRIMASK(uint32_t priMask)
 214:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 215:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR primask, %0" : : "r" (priMask) : "memory");
 216:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 217:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 218:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 219:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M >= 0x03U)
 220:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 221:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 222:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Enable FIQ
 223:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Enables FIQ interrupts by clearing the F-bit in the CPSR.
 224:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 225:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 226:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __enable_fault_irq(void)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 34


 227:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 228:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsie f" : : : "memory");
 229:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 230:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 231:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 232:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 233:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Disable FIQ
 234:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Disables FIQ interrupts by setting the F-bit in the CPSR.
 235:../Drivers/CMSIS/Include/cmsis_gcc.h ****            Can only be executed in Privileged modes.
 236:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 237:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __disable_fault_irq(void)
 238:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 239:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("cpsid f" : : : "memory");
 240:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 241:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 242:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 243:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 244:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Base Priority
 245:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Base Priority register.
 246:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Base Priority register value
 247:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 248:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_BASEPRI(void)
 249:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 250:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 251:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 252:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, basepri" : "=r" (result) );
 253:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 254:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 255:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 256:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 257:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 258:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority
 259:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register.
 260:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 261:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 262:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI(uint32_t value)
 263:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 264:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri, %0" : : "r" (value) : "memory");
 265:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 266:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 267:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 268:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 269:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Base Priority with condition
 270:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Base Priority register only if BASEPRI masking is disable
 271:../Drivers/CMSIS/Include/cmsis_gcc.h ****            or the new value increases the BASEPRI priority level.
 272:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    basePri  Base Priority value to set
 273:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 274:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_BASEPRI_MAX(uint32_t value)
 275:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 276:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR basepri_max, %0" : : "r" (value) : "memory");
 277:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 278:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 279:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 280:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 281:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get Fault Mask
 282:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Fault Mask register.
 283:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Fault Mask register value
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 35


 284:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 285:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FAULTMASK(void)
 286:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 287:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 288:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 289:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MRS %0, faultmask" : "=r" (result) );
 290:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 291:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 292:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 293:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 294:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 295:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set Fault Mask
 296:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Fault Mask register.
 297:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    faultMask  Fault Mask value to set
 298:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 299:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FAULTMASK(uint32_t faultMask)
 300:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 301:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("MSR faultmask, %0" : : "r" (faultMask) : "memory");
 302:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 303:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 304:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M >= 0x03U) */
 305:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 306:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 307:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if       (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U)
 308:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 309:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 310:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Get FPSCR
 311:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Returns the current value of the Floating Point Status/Control register.
 312:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \return               Floating Point Status/Control register value
 313:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 314:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE uint32_t __get_FPSCR(void)
 315:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 316:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 317:../Drivers/CMSIS/Include/cmsis_gcc.h ****   uint32_t result;
 318:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 319:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 320:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 321:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMRS %0, fpscr" : "=r" (result) );
 322:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 323:../Drivers/CMSIS/Include/cmsis_gcc.h ****   return(result);
 324:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 325:../Drivers/CMSIS/Include/cmsis_gcc.h ****    return(0);
 326:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 327:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 328:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 329:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 330:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 331:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   Set FPSCR
 332:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details Assigns the given value to the Floating Point Status/Control register.
 333:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \param [in]    fpscr  Floating Point Status/Control value to set
 334:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 335:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__( ( always_inline ) ) __STATIC_INLINE void __set_FPSCR(uint32_t fpscr)
 336:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 337:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if (__FPU_PRESENT == 1U) && (__FPU_USED == 1U)
 338:../Drivers/CMSIS/Include/cmsis_gcc.h ****   /* Empty asm statement works as a scheduling barrier */
 339:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 340:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("VMSR fpscr, %0" : : "r" (fpscr) : "vfpcc");
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 36


 341:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("");
 342:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 343:../Drivers/CMSIS/Include/cmsis_gcc.h **** }
 344:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 345:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif /* (__CORTEX_M == 0x04U) || (__CORTEX_M == 0x07U) */
 346:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 347:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 348:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 349:../Drivers/CMSIS/Include/cmsis_gcc.h **** /*@} end of CMSIS_Core_RegAccFunctions */
 350:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 351:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 352:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* ##########################  Core Instruction Access  ######################### */
 353:../Drivers/CMSIS/Include/cmsis_gcc.h **** /** \defgroup CMSIS_Core_InstructionInterface CMSIS Core Instruction Interface
 354:../Drivers/CMSIS/Include/cmsis_gcc.h ****   Access to dedicated instructions
 355:../Drivers/CMSIS/Include/cmsis_gcc.h ****   @{
 356:../Drivers/CMSIS/Include/cmsis_gcc.h **** */
 357:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 358:../Drivers/CMSIS/Include/cmsis_gcc.h **** /* Define macros for porting to both thumb1 and thumb2.
 359:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * For thumb1, use low register (r0-r7), specified by constraint "l"
 360:../Drivers/CMSIS/Include/cmsis_gcc.h ****  * Otherwise, use general registers, specified by constraint "r" */
 361:../Drivers/CMSIS/Include/cmsis_gcc.h **** #if defined (__thumb__) && !defined (__thumb2__)
 362:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=l" (r)
 363:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "l" (r)
 364:../Drivers/CMSIS/Include/cmsis_gcc.h **** #else
 365:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_OUT_REG(r) "=r" (r)
 366:../Drivers/CMSIS/Include/cmsis_gcc.h **** #define __CMSIS_GCC_USE_REG(r) "r" (r)
 367:../Drivers/CMSIS/Include/cmsis_gcc.h **** #endif
 368:../Drivers/CMSIS/Include/cmsis_gcc.h **** 
 369:../Drivers/CMSIS/Include/cmsis_gcc.h **** /**
 370:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \brief   No Operation
 371:../Drivers/CMSIS/Include/cmsis_gcc.h ****   \details No Operation does nothing. This instruction can be used for code alignment purposes.
 372:../Drivers/CMSIS/Include/cmsis_gcc.h ****  */
 373:../Drivers/CMSIS/Include/cmsis_gcc.h **** __attribute__((always_inline)) __STATIC_INLINE void __NOP(void)
 374:../Drivers/CMSIS/Include/cmsis_gcc.h **** {
 375:../Drivers/CMSIS/Include/cmsis_gcc.h ****   __ASM volatile ("nop");
 361              		.loc 2 375 0
 362              		.syntax unified
 363              	@ 375 "../Drivers/CMSIS/Include/cmsis_gcc.h" 1
 364 0176 00BF     		nop
 365              	@ 0 "" 2
 366              		.thumb
 367              		.syntax unified
 368              	.LBE19:
 369              	.LBE18:
1268:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   do 
1269:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
1270:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     __NOP();
1271:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   } 
1272:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   while (Delay --);
 370              		.loc 1 1272 0
 371 0178 019B     		ldr	r3, [sp, #4]
 372 017a 5A1E     		subs	r2, r3, #1
 373 017c 0192     		str	r2, [sp, #4]
 374 017e 002B     		cmp	r3, #0
 375 0180 F9D1     		bne	.L37
 376 0182 DBE7     		b	.L38
 377              	.LVL27:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 37


 378              	.L34:
 379              	.LBE17:
 380              	.LBE16:
 418:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 381              		.loc 1 418 0
 382 0184 1A60     		str	r2, [r3]
 421:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 383              		.loc 1 421 0
 384 0186 FFF7FEFF 		bl	HAL_GetTick
 385              	.LVL28:
 386 018a 0646     		mov	r6, r0
 387              	.LVL29:
 388              	.L39:
 424:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 389              		.loc 1 424 0
 390 018c 636A     		ldr	r3, [r4, #36]
 391 018e 9F07     		lsls	r7, r3, #30
 392 0190 D4D5     		bpl	.L38
 426:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 393              		.loc 1 426 0
 394 0192 FFF7FEFF 		bl	HAL_GetTick
 395              	.LVL30:
 396 0196 801B     		subs	r0, r0, r6
 397 0198 0228     		cmp	r0, #2
 398 019a F7D9     		bls	.L39
 399 019c 7EE7     		b	.L19
 400              	.LVL31:
 401              	.L32:
 402              	.LBB20:
 443:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 403              		.loc 1 443 0
 404 019e 354C     		ldr	r4, .L99
 405 01a0 E369     		ldr	r3, [r4, #28]
 406 01a2 D800     		lsls	r0, r3, #3
 407 01a4 0AD4     		bmi	.L68
 408              	.LBB21:
 445:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 409              		.loc 1 445 0
 410 01a6 E369     		ldr	r3, [r4, #28]
 411              	.LBE21:
 446:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 412              		.loc 1 446 0
 413 01a8 0127     		movs	r7, #1
 414              	.LBB22:
 445:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       pwrclkchanged = SET;
 415              		.loc 1 445 0
 416 01aa 43F08053 		orr	r3, r3, #268435456
 417 01ae E361     		str	r3, [r4, #28]
 418 01b0 E369     		ldr	r3, [r4, #28]
 419 01b2 03F08053 		and	r3, r3, #268435456
 420 01b6 0093     		str	r3, [sp]
 421 01b8 009B     		ldr	r3, [sp]
 422              	.LVL32:
 423 01ba 00E0     		b	.L42
 424              	.LVL33:
 425              	.L68:
 426              	.LBE22:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 38


 436:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 427              		.loc 1 436 0
 428 01bc 0027     		movs	r7, #0
 429              	.LVL34:
 430              	.L42:
 449:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 431              		.loc 1 449 0
 432 01be 314E     		ldr	r6, .L99+16
 433 01c0 3368     		ldr	r3, [r6]
 434 01c2 D905     		lsls	r1, r3, #23
 435 01c4 03D5     		bpl	.L43
 436              	.L48:
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 437              		.loc 1 467 0
 438 01c6 EB68     		ldr	r3, [r5, #12]
 439 01c8 012B     		cmp	r3, #1
 440 01ca 11D1     		bne	.L90
 441 01cc 25E0     		b	.L94
 442              	.L43:
 452:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 443              		.loc 1 452 0
 444 01ce 3368     		ldr	r3, [r6]
 445 01d0 43F48073 		orr	r3, r3, #256
 446 01d4 3360     		str	r3, [r6]
 455:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 447              		.loc 1 455 0
 448 01d6 FFF7FEFF 		bl	HAL_GetTick
 449              	.LVL35:
 450 01da 8046     		mov	r8, r0
 451              	.LVL36:
 452              	.L46:
 457:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 453              		.loc 1 457 0
 454 01dc 3368     		ldr	r3, [r6]
 455 01de DA05     		lsls	r2, r3, #23
 456 01e0 F1D4     		bmi	.L48
 459:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 457              		.loc 1 459 0
 458 01e2 FFF7FEFF 		bl	HAL_GetTick
 459              	.LVL37:
 460 01e6 C8EB0000 		rsb	r0, r8, r0
 461 01ea 6428     		cmp	r0, #100
 462 01ec F6D9     		bls	.L46
 463 01ee 55E7     		b	.L19
 464              	.LVL38:
 465              	.L90:
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 466              		.loc 1 467 0 discriminator 2
 467 01f0 6BB9     		cbnz	r3, .L50
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 468              		.loc 1 467 0 is_stmt 0 discriminator 3
 469 01f2 236A     		ldr	r3, [r4, #32]
 491:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 470              		.loc 1 491 0 is_stmt 1 discriminator 3
 471 01f4 41F28838 		movw	r8, #5000
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 472              		.loc 1 467 0 discriminator 3
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 39


 473 01f8 23F00103 		bic	r3, r3, #1
 474 01fc 2362     		str	r3, [r4, #32]
 475 01fe 236A     		ldr	r3, [r4, #32]
 476 0200 23F00403 		bic	r3, r3, #4
 477 0204 2362     		str	r3, [r4, #32]
 486:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 478              		.loc 1 486 0 discriminator 3
 479 0206 FFF7FEFF 		bl	HAL_GetTick
 480              	.LVL39:
 481 020a 0646     		mov	r6, r0
 482              	.LVL40:
 489:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 483              		.loc 1 489 0 discriminator 3
 484 020c 25E0     		b	.L51
 485              	.LVL41:
 486              	.L50:
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 487              		.loc 1 467 0 discriminator 4
 488 020e 052B     		cmp	r3, #5
 489 0210 236A     		ldr	r3, [r4, #32]
 490 0212 06D1     		bne	.L52
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 491              		.loc 1 467 0 is_stmt 0 discriminator 5
 492 0214 43F00403 		orr	r3, r3, #4
 493 0218 2362     		str	r3, [r4, #32]
 494              	.L94:
 495 021a 236A     		ldr	r3, [r4, #32]
 496 021c 43F00103 		orr	r3, r3, #1
 497 0220 05E0     		b	.L92
 498              	.L52:
 467:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     /* Check the LSE State */
 499              		.loc 1 467 0 discriminator 6
 500 0222 23F00103 		bic	r3, r3, #1
 501 0226 2362     		str	r3, [r4, #32]
 502 0228 236A     		ldr	r3, [r4, #32]
 503 022a 23F00403 		bic	r3, r3, #4
 504              	.L92:
 505 022e 2362     		str	r3, [r4, #32]
 472:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 506              		.loc 1 472 0 is_stmt 1 discriminator 6
 507 0230 FFF7FEFF 		bl	HAL_GetTick
 508              	.LVL42:
 477:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 509              		.loc 1 477 0 discriminator 6
 510 0234 41F28836 		movw	r6, #5000
 472:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       
 511              		.loc 1 472 0 discriminator 6
 512 0238 8046     		mov	r8, r0
 513              	.LVL43:
 514              	.L67:
 475:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 515              		.loc 1 475 0
 516 023a 236A     		ldr	r3, [r4, #32]
 517 023c 9B07     		lsls	r3, r3, #30
 518 023e 0FD4     		bmi	.L56
 477:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 519              		.loc 1 477 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 40


 520 0240 FFF7FEFF 		bl	HAL_GetTick
 521              	.LVL44:
 522 0244 C8EB0000 		rsb	r0, r8, r0
 523 0248 B042     		cmp	r0, r6
 524 024a F6D9     		bls	.L67
 525 024c 26E7     		b	.L19
 526              	.LVL45:
 527              	.L55:
 491:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 528              		.loc 1 491 0
 529 024e FFF7FEFF 		bl	HAL_GetTick
 530              	.LVL46:
 531 0252 801B     		subs	r0, r0, r6
 532 0254 4045     		cmp	r0, r8
 533 0256 3FF621AF 		bhi	.L19
 534              	.L51:
 489:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 535              		.loc 1 489 0
 536 025a 236A     		ldr	r3, [r4, #32]
 537 025c 9807     		lsls	r0, r3, #30
 538 025e F6D4     		bmi	.L55
 539              	.LVL47:
 540              	.L56:
 499:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 541              		.loc 1 499 0
 542 0260 1FB1     		cbz	r7, .L41
 501:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 543              		.loc 1 501 0
 544 0262 E369     		ldr	r3, [r4, #28]
 545 0264 23F08053 		bic	r3, r3, #268435456
 546 0268 E361     		str	r3, [r4, #28]
 547              	.LVL48:
 548              	.L41:
 549              	.LBE20:
 598:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 550              		.loc 1 598 0
 551 026a EA69     		ldr	r2, [r5, #28]
 552 026c 62B9     		cbnz	r2, .L57
 553              	.LVL49:
 554              	.L64:
 683:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 555              		.loc 1 683 0
 556 026e 0020     		movs	r0, #0
 557 0270 4EE0     		b	.L89
 558              	.L100:
 559 0272 00BF     		.align	2
 560              	.L99:
 561 0274 00100240 		.word	1073876992
 562 0278 00004242 		.word	1111621632
 563 027c 80044242 		.word	1111622784
 564 0280 00000000 		.word	SystemCoreClock
 565 0284 00700040 		.word	1073770496
 566              	.LVL50:
 567              	.L57:
 601:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     { 
 568              		.loc 1 601 0
 569 0288 234C     		ldr	r4, .L101
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 41


 570 028a 6368     		ldr	r3, [r4, #4]
 571 028c 03F00C03 		and	r3, r3, #12
 572 0290 082B     		cmp	r3, #8
 573 0292 3FF4D3AE 		beq	.L25
 574 0296 214E     		ldr	r6, .L101+4
 575 0298 0023     		movs	r3, #0
 603:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 576              		.loc 1 603 0
 577 029a 022A     		cmp	r2, #2
 610:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 578              		.loc 1 610 0
 579 029c 3360     		str	r3, [r6]
 603:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 580              		.loc 1 603 0
 581 029e 2BD1     		bne	.L58
 613:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 582              		.loc 1 613 0
 583 02a0 FFF7FEFF 		bl	HAL_GetTick
 584              	.LVL51:
 585 02a4 0746     		mov	r7, r0
 586              	.LVL52:
 587              	.L59:
 616:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 588              		.loc 1 616 0
 589 02a6 2268     		ldr	r2, [r4]
 590 02a8 1B4B     		ldr	r3, .L101
 591 02aa 9101     		lsls	r1, r2, #6
 592 02ac 05D5     		bpl	.L98
 618:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 593              		.loc 1 618 0
 594 02ae FFF7FEFF 		bl	HAL_GetTick
 595              	.LVL53:
 596 02b2 C01B     		subs	r0, r0, r7
 597 02b4 0228     		cmp	r0, #2
 598 02b6 F6D9     		bls	.L59
 599 02b8 F0E6     		b	.L19
 600              	.L98:
 626:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 601              		.loc 1 626 0
 602 02ba 2F6A     		ldr	r7, [r5, #32]
 603              	.LVL54:
 604 02bc B7F5803F 		cmp	r7, #65536
 605 02c0 05D1     		bne	.L61
 638:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
 606              		.loc 1 638 0
 607 02c2 5968     		ldr	r1, [r3, #4]
 608 02c4 21F40030 		bic	r0, r1, #131072
 609 02c8 A968     		ldr	r1, [r5, #8]
 610 02ca 0143     		orrs	r1, r1, r0
 611 02cc 5960     		str	r1, [r3, #4]
 612              	.L61:
 642:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                              RCC_OscInitStruct->PLL.PLLMUL);
 613              		.loc 1 642 0
 614 02ce 6A6A     		ldr	r2, [r5, #36]
 615 02d0 6368     		ldr	r3, [r4, #4]
 616 02d2 3A43     		orrs	r2, r2, r7
 617 02d4 23F47413 		bic	r3, r3, #3997696
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 42


 618 02d8 1343     		orrs	r3, r3, r2
 619 02da 6360     		str	r3, [r4, #4]
 645:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 620              		.loc 1 645 0
 621 02dc 0123     		movs	r3, #1
 622 02de 3360     		str	r3, [r6]
 648:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 623              		.loc 1 648 0
 624 02e0 FFF7FEFF 		bl	HAL_GetTick
 625              	.LVL55:
 626 02e4 0546     		mov	r5, r0
 627              	.LVL56:
 628              	.L62:
 651:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 629              		.loc 1 651 0
 630 02e6 2368     		ldr	r3, [r4]
 631 02e8 9A01     		lsls	r2, r3, #6
 632 02ea C0D4     		bmi	.L64
 653:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 633              		.loc 1 653 0
 634 02ec FFF7FEFF 		bl	HAL_GetTick
 635              	.LVL57:
 636 02f0 401B     		subs	r0, r0, r5
 637 02f2 0228     		cmp	r0, #2
 638 02f4 F7D9     		bls	.L62
 639 02f6 D1E6     		b	.L19
 640              	.LVL58:
 641              	.L58:
 665:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         
 642              		.loc 1 665 0
 643 02f8 FFF7FEFF 		bl	HAL_GetTick
 644              	.LVL59:
 645 02fc 0546     		mov	r5, r0
 646              	.LVL60:
 647              	.L65:
 668:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 648              		.loc 1 668 0
 649 02fe 2368     		ldr	r3, [r4]
 650 0300 9B01     		lsls	r3, r3, #6
 651 0302 B4D5     		bpl	.L64
 670:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****           {
 652              		.loc 1 670 0
 653 0304 FFF7FEFF 		bl	HAL_GetTick
 654              	.LVL61:
 655 0308 401B     		subs	r0, r0, r5
 656 030a 0228     		cmp	r0, #2
 657 030c F7D9     		bls	.L65
 658 030e C5E6     		b	.L19
 659              	.LVL62:
 660              	.L89:
 684:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 661              		.loc 1 684 0
 662 0310 02B0     		add	sp, sp, #8
 663              	.LCFI1:
 664              		.cfi_def_cfa_offset 24
 665              		@ sp needed
 666 0312 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 43


 667              	.L102:
 668 0316 00BF     		.align	2
 669              	.L101:
 670 0318 00100240 		.word	1073876992
 671 031c 60004242 		.word	1111621728
 672              		.cfi_endproc
 673              	.LFE65:
 675              		.section	.text.HAL_RCC_MCOConfig,"ax",%progbits
 676              		.align	1
 677              		.global	HAL_RCC_MCOConfig
 678              		.thumb
 679              		.thumb_func
 681              	HAL_RCC_MCOConfig:
 682              	.LFB67:
 903:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 683              		.loc 1 903 0
 684              		.cfi_startproc
 685              		@ args = 0, pretend = 0, frame = 24
 686              		@ frame_needed = 0, uses_anonymous_args = 0
 687              	.LVL63:
 688 0000 30B5     		push	{r4, r5, lr}
 689              	.LCFI2:
 690              		.cfi_def_cfa_offset 12
 691              		.cfi_offset 4, -12
 692              		.cfi_offset 5, -8
 693              		.cfi_offset 14, -4
 694 0002 87B0     		sub	sp, sp, #28
 695              	.LCFI3:
 696              		.cfi_def_cfa_offset 40
 904:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 697              		.loc 1 904 0
 698 0004 1022     		movs	r2, #16
 699              	.LVL64:
 903:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   GPIO_InitTypeDef gpio = {0U};
 700              		.loc 1 903 0
 701 0006 0D46     		mov	r5, r1
 904:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 702              		.loc 1 904 0
 703 0008 02A8     		add	r0, sp, #8
 704              	.LVL65:
 705 000a 0021     		movs	r1, #0
 706              	.LVL66:
 707 000c FFF7FEFF 		bl	memset
 708              	.LVL67:
 916:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Speed     = GPIO_SPEED_FREQ_HIGH;
 709              		.loc 1 916 0
 710 0010 0223     		movs	r3, #2
 711 0012 0393     		str	r3, [sp, #12]
 917:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   gpio.Pull      = GPIO_NOPULL;
 712              		.loc 1 917 0
 713 0014 0323     		movs	r3, #3
 714 0016 0593     		str	r3, [sp, #20]
 715              	.LBB23:
 922:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 716              		.loc 1 922 0
 717 0018 0B4C     		ldr	r4, .L104
 718              	.LBE23:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 44


 919:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 719              		.loc 1 919 0
 720 001a 4FF48073 		mov	r3, #256
 721 001e 0293     		str	r3, [sp, #8]
 722              	.LBB24:
 922:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 723              		.loc 1 922 0
 724 0020 A369     		ldr	r3, [r4, #24]
 725              	.LBE24:
 924:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 726              		.loc 1 924 0
 727 0022 02A9     		add	r1, sp, #8
 728              	.LBB25:
 922:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 729              		.loc 1 922 0
 730 0024 43F00403 		orr	r3, r3, #4
 731 0028 A361     		str	r3, [r4, #24]
 732 002a A369     		ldr	r3, [r4, #24]
 733              	.LBE25:
 924:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 734              		.loc 1 924 0
 735 002c 0748     		ldr	r0, .L104+4
 736              	.LBB26:
 922:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 737              		.loc 1 922 0
 738 002e 03F00403 		and	r3, r3, #4
 739 0032 0193     		str	r3, [sp, #4]
 740 0034 019B     		ldr	r3, [sp, #4]
 741              	.LBE26:
 924:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 742              		.loc 1 924 0
 743 0036 FFF7FEFF 		bl	HAL_GPIO_Init
 744              	.LVL68:
 927:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 745              		.loc 1 927 0
 746 003a 6368     		ldr	r3, [r4, #4]
 747 003c 23F0E063 		bic	r3, r3, #117440512
 748 0040 1D43     		orrs	r5, r5, r3
 749              	.LVL69:
 750 0042 6560     		str	r5, [r4, #4]
 928:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 751              		.loc 1 928 0
 752 0044 07B0     		add	sp, sp, #28
 753              	.LCFI4:
 754              		.cfi_def_cfa_offset 12
 755              		@ sp needed
 756 0046 30BD     		pop	{r4, r5, pc}
 757              	.L105:
 758              		.align	2
 759              	.L104:
 760 0048 00100240 		.word	1073876992
 761 004c 00080140 		.word	1073809408
 762              		.cfi_endproc
 763              	.LFE67:
 765              		.section	.text.HAL_RCC_EnableCSS,"ax",%progbits
 766              		.align	1
 767              		.global	HAL_RCC_EnableCSS
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 45


 768              		.thumb
 769              		.thumb_func
 771              	HAL_RCC_EnableCSS:
 772              	.LFB68:
 940:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)ENABLE;
 773              		.loc 1 940 0
 774              		.cfi_startproc
 775              		@ args = 0, pretend = 0, frame = 0
 776              		@ frame_needed = 0, uses_anonymous_args = 0
 777              		@ link register save eliminated.
 941:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 778              		.loc 1 941 0
 779 0000 014B     		ldr	r3, .L107
 780 0002 0122     		movs	r2, #1
 781 0004 1A60     		str	r2, [r3]
 782 0006 7047     		bx	lr
 783              	.L108:
 784              		.align	2
 785              	.L107:
 786 0008 4C004242 		.word	1111621708
 787              		.cfi_endproc
 788              	.LFE68:
 790              		.section	.text.HAL_RCC_DisableCSS,"ax",%progbits
 791              		.align	1
 792              		.global	HAL_RCC_DisableCSS
 793              		.thumb
 794              		.thumb_func
 796              	HAL_RCC_DisableCSS:
 797              	.LFB69:
 949:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   *(__IO uint32_t *) RCC_CR_CSSON_BB = (uint32_t)DISABLE;
 798              		.loc 1 949 0
 799              		.cfi_startproc
 800              		@ args = 0, pretend = 0, frame = 0
 801              		@ frame_needed = 0, uses_anonymous_args = 0
 802              		@ link register save eliminated.
 950:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 803              		.loc 1 950 0
 804 0000 014B     		ldr	r3, .L110
 805 0002 0022     		movs	r2, #0
 806 0004 1A60     		str	r2, [r3]
 807 0006 7047     		bx	lr
 808              	.L111:
 809              		.align	2
 810              	.L110:
 811 0008 4C004242 		.word	1111621708
 812              		.cfi_endproc
 813              	.LFE69:
 815              		.section	.text.HAL_RCC_GetSysClockFreq,"ax",%progbits
 816              		.align	1
 817              		.global	HAL_RCC_GetSysClockFreq
 818              		.thumb
 819              		.thumb_func
 821              	HAL_RCC_GetSysClockFreq:
 822              	.LFB70:
 983:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 823              		.loc 1 983 0
 824              		.cfi_startproc
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 46


 825              		@ args = 0, pretend = 0, frame = 24
 826              		@ frame_needed = 0, uses_anonymous_args = 0
 988:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 827              		.loc 1 988 0
 828 0000 184B     		ldr	r3, .L121
 983:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 829              		.loc 1 983 0
 830 0002 70B5     		push	{r4, r5, r6, lr}
 831              	.LCFI5:
 832              		.cfi_def_cfa_offset 16
 833              		.cfi_offset 4, -16
 834              		.cfi_offset 5, -12
 835              		.cfi_offset 6, -8
 836              		.cfi_offset 14, -4
 988:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 837              		.loc 1 988 0
 838 0004 03F11005 		add	r5, r3, #16
 839 0008 2E46     		mov	r6, r5
 983:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1SRC)
 840              		.loc 1 983 0
 841 000a 86B0     		sub	sp, sp, #24
 842              	.LCFI6:
 843              		.cfi_def_cfa_offset 40
 988:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CFGR2_PREDIV1)
 844              		.loc 1 988 0
 845 000c 02AC     		add	r4, sp, #8
 846              	.L113:
 847 000e 2246     		mov	r2, r4
 848 0010 1868     		ldr	r0, [r3]	@ unaligned
 849 0012 5968     		ldr	r1, [r3, #4]	@ unaligned
 850 0014 0833     		adds	r3, r3, #8
 851 0016 03C2     		stmia	r2!, {r0, r1}
 852 0018 AB42     		cmp	r3, r5
 853 001a 1446     		mov	r4, r2
 854 001c F7D1     		bne	.L113
 992:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 855              		.loc 1 992 0
 856 001e 3388     		ldrh	r3, [r6]	@ unaligned
1002:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 857              		.loc 1 1002 0
 858 0020 1149     		ldr	r1, .L121+4
 992:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 859              		.loc 1 992 0
 860 0022 ADF80430 		strh	r3, [sp, #4]	@ unaligned
 861              	.LVL70:
1002:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 862              		.loc 1 1002 0
 863 0026 4A68     		ldr	r2, [r1, #4]
 864              	.LVL71:
1005:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 865              		.loc 1 1005 0
 866 0028 02F00C03 		and	r3, r2, #12
 867 002c 082B     		cmp	r3, #8
 868 002e 16D1     		bne	.L119
1014:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 869              		.loc 1 1014 0
 870 0030 C2F38343 		ubfx	r3, r2, #18, #4
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 47


 871 0034 06A8     		add	r0, sp, #24
1015:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 872              		.loc 1 1015 0
 873 0036 D203     		lsls	r2, r2, #15
 874              	.LVL72:
1020:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1*/
 875              		.loc 1 1020 0
 876 0038 41BF     		itttt	mi
 877 003a 4A68     		ldrmi	r2, [r1, #4]
 878 003c 0146     		movmi	r1, r0
 879 003e C2F34042 		ubfxmi	r2, r2, #17, #1
 880 0042 5218     		addmi	r2, r2, r1
1014:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 881              		.loc 1 1014 0
 882 0044 0344     		add	r3, r3, r0
1046:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 883              		.loc 1 1046 0
 884 0046 44BF     		itt	mi
 885 0048 12F8140C 		ldrbmi	r0, [r2, #-20]	@ zero_extendqisi2
 886 004c 074A     		ldrmi	r2, .L121+8
1014:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       if ((tmpreg & RCC_CFGR_PLLSRC) != RCC_PLLSOURCE_HSI_DIV2)
 887              		.loc 1 1014 0
 888 004e 13F8103C 		ldrb	r3, [r3, #-16]	@ zero_extendqisi2
 889              	.LVL73:
1046:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #endif /*RCC_CFGR2_PREDIV1SRC*/
 890              		.loc 1 1046 0
 891 0052 4CBF     		ite	mi
 892 0054 B2FBF0F0 		udivmi	r0, r2, r0
1052:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       }
 893              		.loc 1 1052 0
 894 0058 0548     		ldrpl	r0, .L121+12
 895 005a 5843     		muls	r0, r3, r0
 896              	.LVL74:
 897 005c 00E0     		b	.L114
 898              	.LVL75:
 899              	.L119:
1009:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       break;
 900              		.loc 1 1009 0
 901 005e 0348     		ldr	r0, .L121+8
 902              	.LVL76:
 903              	.L114:
1065:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 904              		.loc 1 1065 0
 905 0060 06B0     		add	sp, sp, #24
 906              	.LCFI7:
 907              		.cfi_def_cfa_offset 16
 908              		@ sp needed
 909 0062 70BD     		pop	{r4, r5, r6, pc}
 910              	.L122:
 911              		.align	2
 912              	.L121:
 913 0064 00000000 		.word	.LANCHOR0
 914 0068 00100240 		.word	1073876992
 915 006c 00127A00 		.word	8000000
 916 0070 00093D00 		.word	4000000
 917              		.cfi_endproc
 918              	.LFE70:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 48


 920              		.section	.text.HAL_RCC_ClockConfig,"ax",%progbits
 921              		.align	1
 922              		.global	HAL_RCC_ClockConfig
 923              		.thumb
 924              		.thumb_func
 926              	HAL_RCC_ClockConfig:
 927              	.LFB66:
 710:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 928              		.loc 1 710 0
 929              		.cfi_startproc
 930              		@ args = 0, pretend = 0, frame = 0
 931              		@ frame_needed = 0, uses_anonymous_args = 0
 932              	.LVL77:
 724:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 933              		.loc 1 724 0
 934 0000 4C4A     		ldr	r2, .L168
 710:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 935              		.loc 1 710 0
 936 0002 2DE9F041 		push	{r4, r5, r6, r7, r8, lr}
 937              	.LCFI8:
 938              		.cfi_def_cfa_offset 24
 939              		.cfi_offset 4, -24
 940              		.cfi_offset 5, -20
 941              		.cfi_offset 6, -16
 942              		.cfi_offset 7, -12
 943              		.cfi_offset 8, -8
 944              		.cfi_offset 14, -4
 724:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 945              		.loc 1 724 0
 946 0006 1368     		ldr	r3, [r2]
 710:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 947              		.loc 1 710 0
 948 0008 0546     		mov	r5, r0
 724:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 949              		.loc 1 724 0
 950 000a 03F00703 		and	r3, r3, #7
 951 000e 8B42     		cmp	r3, r1
 710:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   uint32_t tickstart = 0U;
 952              		.loc 1 710 0
 953 0010 0E46     		mov	r6, r1
 724:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 954              		.loc 1 724 0
 955 0012 0AD3     		bcc	.L124
 956              	.L127:
 739:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 957              		.loc 1 739 0
 958 0014 2968     		ldr	r1, [r5]
 959              	.LVL78:
 960 0016 8807     		lsls	r0, r1, #30
 961              	.LVL79:
 962 0018 14D5     		bpl	.L126
 742:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 963              		.loc 1 742 0
 964 001a 4748     		ldr	r0, .L168+4
 965 001c 4368     		ldr	r3, [r0, #4]
 966 001e 23F0F002 		bic	r2, r3, #240
 967 0022 AB68     		ldr	r3, [r5, #8]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 49


 968 0024 1343     		orrs	r3, r3, r2
 969 0026 4360     		str	r3, [r0, #4]
 970 0028 0CE0     		b	.L126
 971              	.LVL80:
 972              	.L124:
 727:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 973              		.loc 1 727 0
 974 002a 1368     		ldr	r3, [r2]
 975 002c 23F00703 		bic	r3, r3, #7
 976 0030 0B43     		orrs	r3, r3, r1
 977 0032 1360     		str	r3, [r2]
 731:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 978              		.loc 1 731 0
 979 0034 1368     		ldr	r3, [r2]
 980 0036 03F00703 		and	r3, r3, #7
 981 003a 9942     		cmp	r1, r3
 982 003c EAD0     		beq	.L127
 983              	.LVL81:
 984              	.L133:
 733:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     }
 985              		.loc 1 733 0
 986 003e 0120     		movs	r0, #1
 987 0040 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 988              	.LVL82:
 989              	.L126:
 746:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 990              		.loc 1 746 0
 991 0044 CA07     		lsls	r2, r1, #31
 992 0046 06D4     		bmi	.L129
 993              	.LVL83:
 994              	.L139:
 815:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {    
 995              		.loc 1 815 0
 996 0048 3A4A     		ldr	r2, .L168
 997 004a 1368     		ldr	r3, [r2]
 998 004c 03F00703 		and	r3, r3, #7
 999 0050 9E42     		cmp	r6, r3
 1000 0052 41D3     		bcc	.L130
 1001 0054 4AE0     		b	.L131
 1002              	.LVL84:
 1003              	.L129:
 751:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1004              		.loc 1 751 0
 1005 0056 6B68     		ldr	r3, [r5, #4]
 1006 0058 374C     		ldr	r4, .L168+4
 1007 005a 012B     		cmp	r3, #1
 754:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1008              		.loc 1 754 0
 1009 005c 2268     		ldr	r2, [r4]
 751:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1010              		.loc 1 751 0
 1011 005e 02D1     		bne	.L132
 754:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1012              		.loc 1 754 0
 1013 0060 12F4003F 		tst	r2, #131072
 1014 0064 06E0     		b	.L166
 1015              	.L132:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 50


 760:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1016              		.loc 1 760 0
 1017 0066 022B     		cmp	r3, #2
 1018 0068 02D1     		bne	.L135
 763:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1019              		.loc 1 763 0
 1020 006a 12F0007F 		tst	r2, #33554432
 1021 006e 01E0     		b	.L166
 1022              	.L135:
 772:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1023              		.loc 1 772 0
 1024 0070 12F0020F 		tst	r2, #2
 1025              	.L166:
 1026 0074 E3D0     		beq	.L133
 777:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1027              		.loc 1 777 0
 1028 0076 6268     		ldr	r2, [r4, #4]
 786:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1029              		.loc 1 786 0
 1030 0078 41F28838 		movw	r8, #5000
 777:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1031              		.loc 1 777 0
 1032 007c 22F00302 		bic	r2, r2, #3
 1033 0080 1343     		orrs	r3, r3, r2
 1034 0082 6360     		str	r3, [r4, #4]
 780:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1035              		.loc 1 780 0
 1036 0084 FFF7FEFF 		bl	HAL_GetTick
 1037              	.LVL85:
 782:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1038              		.loc 1 782 0
 1039 0088 6B68     		ldr	r3, [r5, #4]
 780:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1040              		.loc 1 780 0
 1041 008a 0746     		mov	r7, r0
 1042              	.LVL86:
 782:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1043              		.loc 1 782 0
 1044 008c 012B     		cmp	r3, #1
 1045 008e 0CD1     		bne	.L163
 1046              	.LVL87:
 1047              	.L136:
 784:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1048              		.loc 1 784 0
 1049 0090 6368     		ldr	r3, [r4, #4]
 1050 0092 03F00C03 		and	r3, r3, #12
 1051 0096 042B     		cmp	r3, #4
 1052 0098 D6D0     		beq	.L139
 786:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1053              		.loc 1 786 0
 1054 009a FFF7FEFF 		bl	HAL_GetTick
 1055              	.LVL88:
 1056 009e C01B     		subs	r0, r0, r7
 1057 00a0 4045     		cmp	r0, r8
 1058 00a2 F5D9     		bls	.L136
 1059              	.L142:
 788:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         }
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 51


 1060              		.loc 1 788 0
 1061 00a4 0320     		movs	r0, #3
 1062 00a6 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1063              	.LVL89:
 1064              	.L163:
 792:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1065              		.loc 1 792 0
 1066 00aa 022B     		cmp	r3, #2
 1067 00ac 0FD1     		bne	.L141
 1068              	.LVL90:
 1069              	.L140:
 794:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1070              		.loc 1 794 0
 1071 00ae 6368     		ldr	r3, [r4, #4]
 1072 00b0 03F00C03 		and	r3, r3, #12
 1073 00b4 082B     		cmp	r3, #8
 1074 00b6 C7D0     		beq	.L139
 796:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1075              		.loc 1 796 0
 1076 00b8 FFF7FEFF 		bl	HAL_GetTick
 1077              	.LVL91:
 1078 00bc C01B     		subs	r0, r0, r7
 1079 00be 4045     		cmp	r0, r8
 1080 00c0 F5D9     		bls	.L140
 1081 00c2 EFE7     		b	.L142
 1082              	.L144:
 806:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****         {
 1083              		.loc 1 806 0
 1084 00c4 FFF7FEFF 		bl	HAL_GetTick
 1085              	.LVL92:
 1086 00c8 C01B     		subs	r0, r0, r7
 1087 00ca 4045     		cmp	r0, r8
 1088 00cc EAD8     		bhi	.L142
 1089              	.L141:
 804:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****       {
 1090              		.loc 1 804 0
 1091 00ce 6368     		ldr	r3, [r4, #4]
 1092 00d0 13F00C0F 		tst	r3, #12
 1093 00d4 F6D1     		bne	.L144
 1094 00d6 B7E7     		b	.L139
 1095              	.LVL93:
 1096              	.L130:
 818:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1097              		.loc 1 818 0
 1098 00d8 1368     		ldr	r3, [r2]
 1099 00da 23F00703 		bic	r3, r3, #7
 1100 00de 3343     		orrs	r3, r3, r6
 1101 00e0 1360     		str	r3, [r2]
 822:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     {
 1102              		.loc 1 822 0
 1103 00e2 1368     		ldr	r3, [r2]
 1104 00e4 03F00703 		and	r3, r3, #7
 1105 00e8 9E42     		cmp	r6, r3
 1106 00ea A8D1     		bne	.L133
 1107              	.L131:
 830:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1108              		.loc 1 830 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 52


 1109 00ec 2968     		ldr	r1, [r5]
 1110 00ee 124C     		ldr	r4, .L168+4
 1111 00f0 11F0040F 		tst	r1, #4
 1112 00f4 05D0     		beq	.L146
 833:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1113              		.loc 1 833 0
 1114 00f6 6368     		ldr	r3, [r4, #4]
 1115 00f8 23F4E062 		bic	r2, r3, #1792
 1116 00fc EB68     		ldr	r3, [r5, #12]
 1117 00fe 1343     		orrs	r3, r3, r2
 1118 0100 6360     		str	r3, [r4, #4]
 1119              	.L146:
 837:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1120              		.loc 1 837 0
 1121 0102 0B07     		lsls	r3, r1, #28
 1122 0104 06D5     		bpl	.L147
 840:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1123              		.loc 1 840 0
 1124 0106 6368     		ldr	r3, [r4, #4]
 1125 0108 2A69     		ldr	r2, [r5, #16]
 1126 010a 23F46053 		bic	r3, r3, #14336
 1127 010e 43EAC203 		orr	r3, r3, r2, lsl #3
 1128 0112 6360     		str	r3, [r4, #4]
 1129              	.L147:
 844:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1130              		.loc 1 844 0
 1131 0114 FFF7FEFF 		bl	HAL_RCC_GetSysClockFreq
 1132              	.LVL94:
 1133 0118 6368     		ldr	r3, [r4, #4]
 1134 011a 084A     		ldr	r2, .L168+8
 1135 011c C3F30313 		ubfx	r3, r3, #4, #4
 1136 0120 D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1137 0122 D840     		lsrs	r0, r0, r3
 1138 0124 064B     		ldr	r3, .L168+12
 1139 0126 1860     		str	r0, [r3]
 847:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1140              		.loc 1 847 0
 1141 0128 0020     		movs	r0, #0
 1142 012a FFF7FEFF 		bl	HAL_InitTick
 1143              	.LVL95:
 849:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
 1144              		.loc 1 849 0
 1145 012e 0020     		movs	r0, #0
 850:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1146              		.loc 1 850 0
 1147 0130 BDE8F081 		pop	{r4, r5, r6, r7, r8, pc}
 1148              	.LVL96:
 1149              	.L169:
 1150              		.align	2
 1151              	.L168:
 1152 0134 00200240 		.word	1073881088
 1153 0138 00100240 		.word	1073876992
 1154 013c 00000000 		.word	AHBPrescTable
 1155 0140 00000000 		.word	SystemCoreClock
 1156              		.cfi_endproc
 1157              	.LFE66:
 1159              		.section	.text.HAL_RCC_GetHCLKFreq,"ax",%progbits
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 53


 1160              		.align	1
 1161              		.global	HAL_RCC_GetHCLKFreq
 1162              		.thumb
 1163              		.thumb_func
 1165              	HAL_RCC_GetHCLKFreq:
 1166              	.LFB71:
1077:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   return SystemCoreClock;
 1167              		.loc 1 1077 0
 1168              		.cfi_startproc
 1169              		@ args = 0, pretend = 0, frame = 0
 1170              		@ frame_needed = 0, uses_anonymous_args = 0
 1171              		@ link register save eliminated.
1079:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1172              		.loc 1 1079 0
 1173 0000 014B     		ldr	r3, .L171
 1174 0002 1868     		ldr	r0, [r3]
 1175 0004 7047     		bx	lr
 1176              	.L172:
 1177 0006 00BF     		.align	2
 1178              	.L171:
 1179 0008 00000000 		.word	SystemCoreClock
 1180              		.cfi_endproc
 1181              	.LFE71:
 1183              		.section	.text.HAL_RCC_GetPCLK1Freq,"ax",%progbits
 1184              		.align	1
 1185              		.global	HAL_RCC_GetPCLK1Freq
 1186              		.thumb
 1187              		.thumb_func
 1189              	HAL_RCC_GetPCLK1Freq:
 1190              	.LFB72:
1088:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK1 frequency ---------------------------*/
 1191              		.loc 1 1088 0
 1192              		.cfi_startproc
 1193              		@ args = 0, pretend = 0, frame = 0
 1194              		@ frame_needed = 0, uses_anonymous_args = 0
 1195              		@ link register save eliminated.
1090:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }    
 1196              		.loc 1 1090 0
 1197 0000 044B     		ldr	r3, .L174
 1198 0002 054A     		ldr	r2, .L174+4
 1199 0004 5B68     		ldr	r3, [r3, #4]
 1200 0006 C3F30223 		ubfx	r3, r3, #8, #3
 1201 000a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1202 000c 034A     		ldr	r2, .L174+8
 1203 000e 1068     		ldr	r0, [r2]
1091:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1204              		.loc 1 1091 0
 1205 0010 D840     		lsrs	r0, r0, r3
 1206 0012 7047     		bx	lr
 1207              	.L175:
 1208              		.align	2
 1209              	.L174:
 1210 0014 00100240 		.word	1073876992
 1211 0018 00000000 		.word	APBPrescTable
 1212 001c 00000000 		.word	SystemCoreClock
 1213              		.cfi_endproc
 1214              	.LFE72:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 54


 1216              		.section	.text.HAL_RCC_GetPCLK2Freq,"ax",%progbits
 1217              		.align	1
 1218              		.global	HAL_RCC_GetPCLK2Freq
 1219              		.thumb
 1220              		.thumb_func
 1222              	HAL_RCC_GetPCLK2Freq:
 1223              	.LFB73:
1100:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Get HCLK source and Compute PCLK2 frequency ---------------------------*/
 1224              		.loc 1 1100 0
 1225              		.cfi_startproc
 1226              		@ args = 0, pretend = 0, frame = 0
 1227              		@ frame_needed = 0, uses_anonymous_args = 0
 1228              		@ link register save eliminated.
1102:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** } 
 1229              		.loc 1 1102 0
 1230 0000 044B     		ldr	r3, .L177
 1231 0002 054A     		ldr	r2, .L177+4
 1232 0004 5B68     		ldr	r3, [r3, #4]
 1233 0006 C3F3C223 		ubfx	r3, r3, #11, #3
 1234 000a D35C     		ldrb	r3, [r2, r3]	@ zero_extendqisi2
 1235 000c 034A     		ldr	r2, .L177+8
 1236 000e 1068     		ldr	r0, [r2]
1103:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1237              		.loc 1 1103 0
 1238 0010 D840     		lsrs	r0, r0, r3
 1239 0012 7047     		bx	lr
 1240              	.L178:
 1241              		.align	2
 1242              	.L177:
 1243 0014 00100240 		.word	1073876992
 1244 0018 00000000 		.word	APBPrescTable
 1245 001c 00000000 		.word	SystemCoreClock
 1246              		.cfi_endproc
 1247              	.LFE73:
 1249              		.section	.text.HAL_RCC_GetOscConfig,"ax",%progbits
 1250              		.align	1
 1251              		.global	HAL_RCC_GetOscConfig
 1252              		.thumb
 1253              		.thumb_func
 1255              	HAL_RCC_GetOscConfig:
 1256              	.LFB74:
1113:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1257              		.loc 1 1113 0
 1258              		.cfi_startproc
 1259              		@ args = 0, pretend = 0, frame = 0
 1260              		@ frame_needed = 0, uses_anonymous_args = 0
 1261              		@ link register save eliminated.
 1262              	.LVL97:
1118:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****                   | RCC_OSCILLATORTYPE_LSE | RCC_OSCILLATORTYPE_LSI;
 1263              		.loc 1 1118 0
 1264 0000 0F23     		movs	r3, #15
 1265 0002 0360     		str	r3, [r0]
1127:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1266              		.loc 1 1127 0
 1267 0004 1E4B     		ldr	r3, .L193
 1268 0006 1A68     		ldr	r2, [r3]
 1269 0008 5203     		lsls	r2, r2, #13
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 55


 1270 000a 02D5     		bpl	.L180
1129:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1271              		.loc 1 1129 0
 1272 000c 4FF4A022 		mov	r2, #327680
 1273 0010 05E0     		b	.L182
 1274              	.L180:
1131:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1275              		.loc 1 1131 0
 1276 0012 1A68     		ldr	r2, [r3]
 1277 0014 12F48032 		ands	r2, r2, #65536
1133:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1278              		.loc 1 1133 0
 1279 0018 18BF     		it	ne
 1280 001a 4FF48032 		movne	r2, #65536
 1281              	.L182:
1137:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1282              		.loc 1 1137 0
 1283 001e 4260     		str	r2, [r0, #4]
1139:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
 1284              		.loc 1 1139 0
 1285 0020 5A68     		ldr	r2, [r3, #4]
 1286 0022 02F40032 		and	r2, r2, #131072
 1287 0026 8260     		str	r2, [r0, #8]
1142:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1288              		.loc 1 1142 0
 1289 0028 1A68     		ldr	r2, [r3]
 1290 002a 12F00102 		ands	r2, r2, #1
1144:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1291              		.loc 1 1144 0
 1292 002e 18BF     		it	ne
 1293 0030 0122     		movne	r2, #1
1148:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1294              		.loc 1 1148 0
 1295 0032 0261     		str	r2, [r0, #16]
1151:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1296              		.loc 1 1151 0
 1297 0034 1A68     		ldr	r2, [r3]
 1298 0036 C2F3C402 		ubfx	r2, r2, #3, #5
 1299 003a 4261     		str	r2, [r0, #20]
1154:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1300              		.loc 1 1154 0
 1301 003c 1A6A     		ldr	r2, [r3, #32]
 1302 003e 5107     		lsls	r1, r2, #29
 1303 0040 01D5     		bpl	.L185
1156:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1304              		.loc 1 1156 0
 1305 0042 0522     		movs	r2, #5
 1306 0044 05E0     		b	.L187
 1307              	.L185:
1158:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1308              		.loc 1 1158 0
 1309 0046 0E4A     		ldr	r2, .L193
 1310 0048 126A     		ldr	r2, [r2, #32]
 1311 004a 12F00102 		ands	r2, r2, #1
1160:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1312              		.loc 1 1160 0
 1313 004e 18BF     		it	ne
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 56


 1314 0050 0122     		movne	r2, #1
 1315              	.L187:
1164:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1316              		.loc 1 1164 0
 1317 0052 C260     		str	r2, [r0, #12]
1168:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1318              		.loc 1 1168 0
 1319 0054 5A6A     		ldr	r2, [r3, #36]
 1320 0056 12F00102 		ands	r2, r2, #1
1170:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1321              		.loc 1 1170 0
 1322 005a 18BF     		it	ne
 1323 005c 0122     		movne	r2, #1
1174:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1324              		.loc 1 1174 0
 1325 005e 8261     		str	r2, [r0, #24]
1179:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1326              		.loc 1 1179 0
 1327 0060 1A68     		ldr	r2, [r3]
 1328 0062 D201     		lsls	r2, r2, #7
1181:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1329              		.loc 1 1181 0
 1330 0064 4CBF     		ite	mi
 1331 0066 0222     		movmi	r2, #2
1185:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1332              		.loc 1 1185 0
 1333 0068 0122     		movpl	r2, #1
 1334 006a C261     		str	r2, [r0, #28]
1187:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   RCC_OscInitStruct->PLL.PLLMUL = (uint32_t)(RCC->CFGR & RCC_CFGR_PLLMULL);
 1335              		.loc 1 1187 0
 1336 006c 5A68     		ldr	r2, [r3, #4]
 1337 006e 02F48032 		and	r2, r2, #65536
 1338 0072 0262     		str	r2, [r0, #32]
1188:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #if defined(RCC_CR_PLL2ON)
 1339              		.loc 1 1188 0
 1340 0074 5B68     		ldr	r3, [r3, #4]
 1341 0076 03F47013 		and	r3, r3, #3932160
 1342 007a 4362     		str	r3, [r0, #36]
 1343 007c 7047     		bx	lr
 1344              	.L194:
 1345 007e 00BF     		.align	2
 1346              	.L193:
 1347 0080 00100240 		.word	1073876992
 1348              		.cfi_endproc
 1349              	.LFE74:
 1351              		.section	.text.HAL_RCC_GetClockConfig,"ax",%progbits
 1352              		.align	1
 1353              		.global	HAL_RCC_GetClockConfig
 1354              		.thumb
 1355              		.thumb_func
 1357              	HAL_RCC_GetClockConfig:
 1358              	.LFB75:
1213:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check the parameters */
 1359              		.loc 1 1213 0
 1360              		.cfi_startproc
 1361              		@ args = 0, pretend = 0, frame = 0
 1362              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 57


 1363              		@ link register save eliminated.
 1364              	.LVL98:
1219:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1365              		.loc 1 1219 0
 1366 0000 0F23     		movs	r3, #15
 1367 0002 0360     		str	r3, [r0]
1222:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1368              		.loc 1 1222 0
 1369 0004 0B4B     		ldr	r3, .L196
 1370 0006 5A68     		ldr	r2, [r3, #4]
 1371 0008 02F00302 		and	r2, r2, #3
 1372 000c 4260     		str	r2, [r0, #4]
1225:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1373              		.loc 1 1225 0
 1374 000e 5A68     		ldr	r2, [r3, #4]
 1375 0010 02F0F002 		and	r2, r2, #240
 1376 0014 8260     		str	r2, [r0, #8]
1228:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1377              		.loc 1 1228 0
 1378 0016 5A68     		ldr	r2, [r3, #4]
 1379 0018 02F4E062 		and	r2, r2, #1792
 1380 001c C260     		str	r2, [r0, #12]
1231:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   
 1381              		.loc 1 1231 0
 1382 001e 5B68     		ldr	r3, [r3, #4]
 1383 0020 DB08     		lsrs	r3, r3, #3
 1384 0022 03F4E063 		and	r3, r3, #1792
 1385 0026 0361     		str	r3, [r0, #16]
1235:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** #else
 1386              		.loc 1 1235 0
 1387 0028 034B     		ldr	r3, .L196+4
 1388 002a 1B68     		ldr	r3, [r3]
 1389 002c 03F00703 		and	r3, r3, #7
 1390 0030 0B60     		str	r3, [r1]
 1391 0032 7047     		bx	lr
 1392              	.L197:
 1393              		.align	2
 1394              	.L196:
 1395 0034 00100240 		.word	1073876992
 1396 0038 00200240 		.word	1073881088
 1397              		.cfi_endproc
 1398              	.LFE75:
 1400              		.section	.text.HAL_RCC_CSSCallback,"ax",%progbits
 1401              		.align	1
 1402              		.weak	HAL_RCC_CSSCallback
 1403              		.thumb
 1404              		.thumb_func
 1406              	HAL_RCC_CSSCallback:
 1407              	.LFB78:
1273:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** }
1274:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** 
1275:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** /**
1276:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @brief  RCC Clock Security System interrupt callback
1277:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   * @retval none
1278:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   */
1279:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** __weak void HAL_RCC_CSSCallback(void)
1280:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 58


 1408              		.loc 1 1280 0
 1409              		.cfi_startproc
 1410              		@ args = 0, pretend = 0, frame = 0
 1411              		@ frame_needed = 0, uses_anonymous_args = 0
 1412              		@ link register save eliminated.
 1413 0000 7047     		bx	lr
 1414              		.cfi_endproc
 1415              	.LFE78:
 1417              		.section	.text.HAL_RCC_NMI_IRQHandler,"ax",%progbits
 1418              		.align	1
 1419              		.global	HAL_RCC_NMI_IRQHandler
 1420              		.thumb
 1421              		.thumb_func
 1423              	HAL_RCC_NMI_IRQHandler:
 1424              	.LFB76:
1248:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1425              		.loc 1 1248 0
 1426              		.cfi_startproc
 1427              		@ args = 0, pretend = 0, frame = 0
 1428              		@ frame_needed = 0, uses_anonymous_args = 0
1248:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   /* Check RCC CSSF flag  */
 1429              		.loc 1 1248 0
 1430 0000 08B5     		push	{r3, lr}
 1431              	.LCFI9:
 1432              		.cfi_def_cfa_offset 8
 1433              		.cfi_offset 3, -8
 1434              		.cfi_offset 14, -4
1250:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   {
 1435              		.loc 1 1250 0
 1436 0002 054B     		ldr	r3, .L204
 1437 0004 9B68     		ldr	r3, [r3, #8]
 1438 0006 1B06     		lsls	r3, r3, #24
 1439 0008 04D5     		bpl	.L199
1253:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****     
 1440              		.loc 1 1253 0
 1441 000a FFF7FEFF 		bl	HAL_RCC_CSSCallback
 1442              	.LVL99:
1256:../Drivers/STM32F1xx_HAL_Driver/Src/stm32f1xx_hal_rcc.c ****   }
 1443              		.loc 1 1256 0
 1444 000e 034B     		ldr	r3, .L204+4
 1445 0010 8022     		movs	r2, #128
 1446 0012 1A70     		strb	r2, [r3]
 1447              	.L199:
 1448 0014 08BD     		pop	{r3, pc}
 1449              	.L205:
 1450 0016 00BF     		.align	2
 1451              	.L204:
 1452 0018 00100240 		.word	1073876992
 1453 001c 0A100240 		.word	1073877002
 1454              		.cfi_endproc
 1455              	.LFE76:
 1457              		.section	.rodata
 1458              		.set	.LANCHOR0,. + 0
 1459              	.LC0:
 1460 0000 02       		.byte	2
 1461 0001 03       		.byte	3
 1462 0002 04       		.byte	4
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 59


 1463 0003 05       		.byte	5
 1464 0004 06       		.byte	6
 1465 0005 07       		.byte	7
 1466 0006 08       		.byte	8
 1467 0007 09       		.byte	9
 1468 0008 0A       		.byte	10
 1469 0009 0B       		.byte	11
 1470 000a 0C       		.byte	12
 1471 000b 0D       		.byte	13
 1472 000c 0E       		.byte	14
 1473 000d 0F       		.byte	15
 1474 000e 10       		.byte	16
 1475 000f 10       		.byte	16
 1476              	.LC1:
 1477 0010 01       		.byte	1
 1478 0011 02       		.byte	2
 1479              		.text
 1480              	.Letext0:
 1481              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 1482              		.file 4 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
 1483              		.file 5 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 1484              		.file 6 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f1xx.h"
 1485              		.file 7 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 1486              		.file 8 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 1487              		.file 9 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 1488              		.file 10 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 1489              		.file 11 "../Drivers/CMSIS/Include/core_cm3.h"
 1490              		.file 12 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/system_stm32f1xx.h"
 1491              		.file 13 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s 			page 60


DEFINED SYMBOLS
                            *ABS*:0000000000000000 stm32f1xx_hal_rcc.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:20     .text.HAL_RCC_DeInit:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:25     .text.HAL_RCC_DeInit:0000000000000000 HAL_RCC_DeInit
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:67     .text.HAL_RCC_DeInit:0000000000000038 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:74     .text.HAL_RCC_OscConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:79     .text.HAL_RCC_OscConfig:0000000000000000 HAL_RCC_OscConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:561    .text.HAL_RCC_OscConfig:0000000000000274 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:569    .text.HAL_RCC_OscConfig:0000000000000288 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:670    .text.HAL_RCC_OscConfig:0000000000000318 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:676    .text.HAL_RCC_MCOConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:681    .text.HAL_RCC_MCOConfig:0000000000000000 HAL_RCC_MCOConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:760    .text.HAL_RCC_MCOConfig:0000000000000048 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:766    .text.HAL_RCC_EnableCSS:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:771    .text.HAL_RCC_EnableCSS:0000000000000000 HAL_RCC_EnableCSS
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:786    .text.HAL_RCC_EnableCSS:0000000000000008 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:791    .text.HAL_RCC_DisableCSS:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:796    .text.HAL_RCC_DisableCSS:0000000000000000 HAL_RCC_DisableCSS
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:811    .text.HAL_RCC_DisableCSS:0000000000000008 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:816    .text.HAL_RCC_GetSysClockFreq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:821    .text.HAL_RCC_GetSysClockFreq:0000000000000000 HAL_RCC_GetSysClockFreq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:913    .text.HAL_RCC_GetSysClockFreq:0000000000000064 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:921    .text.HAL_RCC_ClockConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:926    .text.HAL_RCC_ClockConfig:0000000000000000 HAL_RCC_ClockConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1152   .text.HAL_RCC_ClockConfig:0000000000000134 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1160   .text.HAL_RCC_GetHCLKFreq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1165   .text.HAL_RCC_GetHCLKFreq:0000000000000000 HAL_RCC_GetHCLKFreq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1179   .text.HAL_RCC_GetHCLKFreq:0000000000000008 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1184   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1189   .text.HAL_RCC_GetPCLK1Freq:0000000000000000 HAL_RCC_GetPCLK1Freq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1210   .text.HAL_RCC_GetPCLK1Freq:0000000000000014 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1217   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1222   .text.HAL_RCC_GetPCLK2Freq:0000000000000000 HAL_RCC_GetPCLK2Freq
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1243   .text.HAL_RCC_GetPCLK2Freq:0000000000000014 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1250   .text.HAL_RCC_GetOscConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1255   .text.HAL_RCC_GetOscConfig:0000000000000000 HAL_RCC_GetOscConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1347   .text.HAL_RCC_GetOscConfig:0000000000000080 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1352   .text.HAL_RCC_GetClockConfig:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1357   .text.HAL_RCC_GetClockConfig:0000000000000000 HAL_RCC_GetClockConfig
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1395   .text.HAL_RCC_GetClockConfig:0000000000000034 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1401   .text.HAL_RCC_CSSCallback:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1406   .text.HAL_RCC_CSSCallback:0000000000000000 HAL_RCC_CSSCallback
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1418   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1423   .text.HAL_RCC_NMI_IRQHandler:0000000000000000 HAL_RCC_NMI_IRQHandler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccORFZVd.s:1452   .text.HAL_RCC_NMI_IRQHandler:0000000000000018 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
SystemCoreClock
HAL_GetTick
memset
HAL_GPIO_Init
HAL_InitTick
AHBPrescTable
APBPrescTable
