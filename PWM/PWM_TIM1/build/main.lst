ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SysTick_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	SysTick_Handler
  22              		.thumb
  23              		.thumb_func
  25              	SysTick_Handler:
  26              	.LFB64:
  27              		.file 1 "main.c"
   1:main.c        **** // **************************************************************
   2:main.c        **** // Copyright (c) 2022 AARI Corporation. All rights reserved
   3:main.c        **** // Author Wei-Min Shen, 3-26-2022, 11-9-2022
   4:main.c        **** //
   5:main.c        **** // A demo for two timers to colaborate with each other:
   6:main.c        **** // 	Timer1's interrupt trun on  PC13/LED, and
   7:main.c        **** // 	Timer2's interrupt turn off PC13/LED
   8:main.c        **** //	To see these fast effects, gdb break on HAL_GPIO_TogglePin
   9:main.c        **** // ***************************************************************
  10:main.c        **** 
  11:main.c        **** #include "stm32f1xx_hal.h"
  12:main.c        **** 
  13:main.c        **** void GPIO_Init_for_PWM(); // see tim1_pwm.c
  14:main.c        **** void TIM1_PWM1_Init(); 	  // see tim1_pwm.c
  15:main.c        **** 
  16:main.c        **** // this is needed for HAL_Delay()
  17:main.c        **** void SysTick_Handler(void)	// this SysTick Timer is running at _MHZ
  18:main.c        **** {
  28              		.loc 1 18 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  19:main.c        ****   HAL_IncTick();                  	// at Hardware Abstraction Level (HAL), OR
  33              		.loc 1 19 0
  34 0000 FFF7FEBF 		b	HAL_IncTick
  35              	.LVL0:
  36              		.cfi_endproc
  37              	.LFE64:
  39              		.section	.text.SystemClock_Config,"ax",%progbits
  40              		.align	1
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 2


  41              		.global	SystemClock_Config
  42              		.thumb
  43              		.thumb_func
  45              	SystemClock_Config:
  46              	.LFB65:
  20:main.c        ****   //extern int32_t uwTick; uwTick++;	// equivelently, do it at the hardware level
  21:main.c        **** }
  22:main.c        **** 
  23:main.c        **** //
  24:main.c        **** // System Clock Configuration
  25:main.c        **** //
  26:main.c        **** //
  27:main.c        **** void SystemClock_Config(void) {
  47              		.loc 1 27 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 80
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 12
  54              		.cfi_offset 4, -12
  55              		.cfi_offset 5, -8
  56              		.cfi_offset 14, -4
  28:main.c        **** 
  29:main.c        ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  30:main.c        ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  31:main.c        ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
  32:main.c        **** 
  33:main.c        ****   // Initializes the CPU, AHB and APB busses clocks
  34:main.c        ****   RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
  35:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  57              		.loc 1 35 0
  58 0002 0123     		movs	r3, #1
  27:main.c        **** 
  59              		.loc 1 27 0
  60 0004 95B0     		sub	sp, sp, #84
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 96
  63              		.loc 1 35 0
  64 0006 0E93     		str	r3, [sp, #56]
  36:main.c        ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 36 0
  66 0008 1023     		movs	r3, #16
  34:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  67              		.loc 1 34 0
  68 000a 0224     		movs	r4, #2
  37:main.c        ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
  38:main.c        ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI_DIV2;
  69              		.loc 1 38 0
  70 000c 0025     		movs	r5, #0
  36:main.c        ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
  71              		.loc 1 36 0
  72 000e 0F93     		str	r3, [sp, #60]
  39:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  40:main.c        ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
  73              		.loc 1 40 0
  74 0010 0AA8     		add	r0, sp, #40
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 3


  39:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  75              		.loc 1 39 0
  76 0012 4FF46013 		mov	r3, #3670016
  77 0016 1393     		str	r3, [sp, #76]
  34:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  78              		.loc 1 34 0
  79 0018 0A94     		str	r4, [sp, #40]
  37:main.c        ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI_DIV2;
  80              		.loc 1 37 0
  81 001a 1194     		str	r4, [sp, #68]
  38:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  82              		.loc 1 38 0
  83 001c 1295     		str	r5, [sp, #72]
  84              		.loc 1 40 0
  85 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
  86              	.LVL1:
  41:main.c        **** 
  42:main.c        ****   // Initializes the CPU, AHB and APB busses clocks
  43:main.c        ****   RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK
  87              		.loc 1 43 0
  88 0022 0F23     		movs	r3, #15
  44:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  45:main.c        ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
  46:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  47:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  48:main.c        **** 
  49:main.c        ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2);
  89              		.loc 1 49 0
  90 0024 2146     		mov	r1, r4
  43:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  91              		.loc 1 43 0
  92 0026 0593     		str	r3, [sp, #20]
  93              		.loc 1 49 0
  94 0028 05A8     		add	r0, sp, #20
  46:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  95              		.loc 1 46 0
  96 002a 4FF48063 		mov	r3, #1024
  97 002e 0893     		str	r3, [sp, #32]
  44:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  98              		.loc 1 44 0
  99 0030 0694     		str	r4, [sp, #24]
  45:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 100              		.loc 1 45 0
 101 0032 0795     		str	r5, [sp, #28]
  47:main.c        **** 
 102              		.loc 1 47 0
 103 0034 0995     		str	r5, [sp, #36]
 104              		.loc 1 49 0
 105 0036 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 106              	.LVL2:
  50:main.c        **** 
  51:main.c        ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  52:main.c        ****   PeriphClkInit.AdcClockSelection    = RCC_ADCPCLK2_DIV8;  // 8 MHz
 107              		.loc 1 52 0
 108 003a 4FF44043 		mov	r3, #49152
  53:main.c        ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 109              		.loc 1 53 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 4


 110 003e 01A8     		add	r0, sp, #4
  52:main.c        ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 111              		.loc 1 52 0
 112 0040 0393     		str	r3, [sp, #12]
  51:main.c        ****   PeriphClkInit.AdcClockSelection    = RCC_ADCPCLK2_DIV8;  // 8 MHz
 113              		.loc 1 51 0
 114 0042 0194     		str	r4, [sp, #4]
 115              		.loc 1 53 0
 116 0044 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 117              	.LVL3:
  54:main.c        **** 
  55:main.c        ****   // Configure the Systick interrupt time
  56:main.c        ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 118              		.loc 1 56 0
 119 0048 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 120              	.LVL4:
 121 004c 4FF47A73 		mov	r3, #1000
 122 0050 B0FBF3F0 		udiv	r0, r0, r3
 123 0054 FFF7FEFF 		bl	HAL_SYSTICK_Config
 124              	.LVL5:
  57:main.c        **** 
  58:main.c        ****   // Configure the Systick
  59:main.c        ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 125              		.loc 1 59 0
 126 0058 0420     		movs	r0, #4
 127 005a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 128              	.LVL6:
  60:main.c        **** 
  61:main.c        ****   // SysTick_IRQn interrupt configuration
  62:main.c        ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 129              		.loc 1 62 0
 130 005e 2A46     		mov	r2, r5
 131 0060 2946     		mov	r1, r5
 132 0062 4FF0FF30 		mov	r0, #-1
 133 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 134              	.LVL7:
  63:main.c        **** }
 135              		.loc 1 63 0
 136 006a 15B0     		add	sp, sp, #84
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 006c 30BD     		pop	{r4, r5, pc}
 141              		.cfi_endproc
 142              	.LFE65:
 144              		.section	.text.PC13_led_init,"ax",%progbits
 145              		.align	1
 146              		.global	PC13_led_init
 147              		.thumb
 148              		.thumb_func
 150              	PC13_led_init:
 151              	.LFB66:
  64:main.c        **** 
  65:main.c        **** //===========================
  66:main.c        **** //	PC13 LED
  67:main.c        **** //===========================
  68:main.c        **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 5


  69:main.c        **** volatile uint32_t* GPIOC_BSRR = (volatile uint32_t*) 0x40011010; // Port C
  70:main.c        **** volatile uint32_t led_state = 0;
  71:main.c        **** 
  72:main.c        **** void PC13_led_init(void)
  73:main.c        **** {
 152              		.loc 1 73 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 0
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              		@ link register save eliminated.
 157              	.LVL8:
  74:main.c        ****   volatile uint32_t* RCC_APB2ENR = (volatile uint32_t*) 0x40021018;     // RCC
  75:main.c        ****   volatile uint32_t* GPIOC_CRH =  (volatile uint32_t*) 0x40011004;      // Port C
  76:main.c        ****   *RCC_APB2ENR |= (0b1<<4);     // set bit4=1 to enable Port C
 158              		.loc 1 76 0
 159 0000 0A4A     		ldr	r2, .L4
 160 0002 1368     		ldr	r3, [r2]
 161 0004 43F01003 		orr	r3, r3, #16
 162 0008 1360     		str	r3, [r2]
  77:main.c        ****   *GPIOC_CRH &= ~(0b1111<<20);  // clear PC13, bits 23..20
 163              		.loc 1 77 0
 164 000a 094B     		ldr	r3, .L4+4
 165 000c 1A68     		ldr	r2, [r3]
 166 000e 22F47002 		bic	r2, r2, #15728640
 167 0012 1A60     		str	r2, [r3]
  78:main.c        ****   *GPIOC_CRH  |=  (0b0110<<20);  // set the bits to 0110 for Mode Output 2
 168              		.loc 1 78 0
 169 0014 1A68     		ldr	r2, [r3]
 170 0016 42F4C002 		orr	r2, r2, #6291456
 171 001a 1A60     		str	r2, [r3]
  79:main.c        ****   *GPIOC_BSRR |= ((uint32_t) 1 << (13 + 0)); // turn off PC13/LED
 172              		.loc 1 79 0
 173 001c 054B     		ldr	r3, .L4+8
 174 001e 1A68     		ldr	r2, [r3]
 175 0020 1368     		ldr	r3, [r2]
 176 0022 43F40053 		orr	r3, r3, #8192
 177 0026 1360     		str	r3, [r2]
 178 0028 7047     		bx	lr
 179              	.L5:
 180 002a 00BF     		.align	2
 181              	.L4:
 182 002c 18100240 		.word	1073877016
 183 0030 04100140 		.word	1073811460
 184 0034 00000000 		.word	.LANCHOR0
 185              		.cfi_endproc
 186              	.LFE66:
 188              		.section	.text.PC13_led_toggle,"ax",%progbits
 189              		.align	1
 190              		.global	PC13_led_toggle
 191              		.thumb
 192              		.thumb_func
 194              	PC13_led_toggle:
 195              	.LFB67:
  80:main.c        **** }
  81:main.c        **** 
  82:main.c        **** void PC13_led_toggle(void)
  83:main.c        **** {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 6


 196              		.loc 1 83 0
 197              		.cfi_startproc
 198              		@ args = 0, pretend = 0, frame = 0
 199              		@ frame_needed = 0, uses_anonymous_args = 0
 200              		@ link register save eliminated.
  84:main.c        ****   if (led_state) { // make PC13/LED OFF
 201              		.loc 1 84 0
 202 0000 094B     		ldr	r3, .L11
 203 0002 0A4A     		ldr	r2, .L11+4
 204 0004 1968     		ldr	r1, [r3]
 205 0006 31B1     		cbz	r1, .L7
  85:main.c        ****         *GPIOC_BSRR |= ((uint32_t) 1 << (13 + 0));
 206              		.loc 1 85 0
 207 0008 1168     		ldr	r1, [r2]
 208 000a 0A68     		ldr	r2, [r1]
 209 000c 42F40052 		orr	r2, r2, #8192
 210 0010 0A60     		str	r2, [r1]
  86:main.c        ****         led_state = 0;
 211              		.loc 1 86 0
 212 0012 0022     		movs	r2, #0
 213 0014 05E0     		b	.L9
 214              	.L7:
  87:main.c        ****   } else { // make it ON
  88:main.c        ****         *GPIOC_BSRR |= ((uint32_t) 1 << (13 + 16));
 215              		.loc 1 88 0
 216 0016 1168     		ldr	r1, [r2]
 217 0018 0A68     		ldr	r2, [r1]
 218 001a 42F00052 		orr	r2, r2, #536870912
 219 001e 0A60     		str	r2, [r1]
  89:main.c        ****         led_state = 1;
 220              		.loc 1 89 0
 221 0020 0122     		movs	r2, #1
 222              	.L9:
 223 0022 1A60     		str	r2, [r3]
 224 0024 7047     		bx	lr
 225              	.L12:
 226 0026 00BF     		.align	2
 227              	.L11:
 228 0028 00000000 		.word	.LANCHOR1
 229 002c 00000000 		.word	.LANCHOR0
 230              		.cfi_endproc
 231              	.LFE67:
 233              		.section	.text.TIM2_Init,"ax",%progbits
 234              		.align	1
 235              		.global	TIM2_Init
 236              		.thumb
 237              		.thumb_func
 239              	TIM2_Init:
 240              	.LFB68:
  90:main.c        ****   }
  91:main.c        **** }
  92:main.c        **** 
  93:main.c        **** 
  94:main.c        **** 
  95:main.c        **** // ======= TIM2 ====================================================
  96:main.c        **** 
  97:main.c        **** TIM_HandleTypeDef tim2_handle;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 7


  98:main.c        **** 
  99:main.c        **** HAL_StatusTypeDef TIM2_Init()
 100:main.c        **** {
 241              		.loc 1 100 0
 242              		.cfi_startproc
 243              		@ args = 0, pretend = 0, frame = 8
 244              		@ frame_needed = 0, uses_anonymous_args = 0
 245 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 246              	.LCFI3:
 247              		.cfi_def_cfa_offset 24
 248              		.cfi_offset 4, -12
 249              		.cfi_offset 5, -8
 250              		.cfi_offset 14, -4
 101:main.c        ****   // Initialize TIM2
 102:main.c        ****   tim2_handle.Instance = TIM2;
 251              		.loc 1 102 0
 252 0002 144C     		ldr	r4, .L18
 253 0004 4FF08043 		mov	r3, #1073741824
 254 0008 2360     		str	r3, [r4]
 103:main.c        ****   tim2_handle.Init.Period = 72000000;
 255              		.loc 1 103 0
 256 000a 134B     		ldr	r3, .L18+4
 104:main.c        ****   tim2_handle.Init.Prescaler = 1;	// xN will slow N times
 105:main.c        ****   tim2_handle.Init.ClockDivision = 0U;
 257              		.loc 1 105 0
 258 000c 0025     		movs	r5, #0
 103:main.c        ****   tim2_handle.Init.Period = 72000000;
 259              		.loc 1 103 0
 260 000e E360     		str	r3, [r4, #12]
 106:main.c        ****   tim2_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 107:main.c        ****   tim2_handle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 108:main.c        ****   if (HAL_TIM_Base_Init(&tim2_handle)==HAL_ERROR)
 261              		.loc 1 108 0
 262 0010 2046     		mov	r0, r4
 104:main.c        ****   tim2_handle.Init.Prescaler = 1;	// xN will slow N times
 263              		.loc 1 104 0
 264 0012 0123     		movs	r3, #1
 265 0014 6360     		str	r3, [r4, #4]
 105:main.c        ****   tim2_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 266              		.loc 1 105 0
 267 0016 2561     		str	r5, [r4, #16]
 106:main.c        ****   tim2_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 268              		.loc 1 106 0
 269 0018 A560     		str	r5, [r4, #8]
 107:main.c        ****   if (HAL_TIM_Base_Init(&tim2_handle)==HAL_ERROR)
 270              		.loc 1 107 0
 271 001a A561     		str	r5, [r4, #24]
 272              		.loc 1 108 0
 273 001c FFF7FEFF 		bl	HAL_TIM_Base_Init
 274              	.LVL9:
 275 0020 0128     		cmp	r0, #1
 276 0022 14D0     		beq	.L14
 109:main.c        ****      return HAL_ERROR;
 110:main.c        **** 
 111:main.c        ****   // Configure the TIM2 IRQ priority
 112:main.c        ****   HAL_NVIC_SetPriority(TIM2_IRQn, 0, 0);
 277              		.loc 1 112 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 8


 278 0024 2A46     		mov	r2, r5
 279 0026 2946     		mov	r1, r5
 280 0028 1C20     		movs	r0, #28
 281 002a FFF7FEFF 		bl	HAL_NVIC_SetPriority
 282              	.LVL10:
 113:main.c        ****   // Enable the TIM2 global Interrupt
 114:main.c        ****   HAL_NVIC_EnableIRQ(TIM2_IRQn);
 283              		.loc 1 114 0
 284 002e 1C20     		movs	r0, #28
 285 0030 FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 286              	.LVL11:
 287              	.LBB2:
 115:main.c        ****   // Enable TIM2 clock
 116:main.c        ****   __HAL_RCC_TIM2_CLK_ENABLE();
 288              		.loc 1 116 0
 289 0034 094B     		ldr	r3, .L18+8
 290              	.LBE2:
 117:main.c        ****   // Starts the interrupts of tim2
 118:main.c        ****   return HAL_TIM_Base_Start_IT(&tim2_handle);
 291              		.loc 1 118 0
 292 0036 2046     		mov	r0, r4
 293              	.LBB3:
 116:main.c        ****   // Starts the interrupts of tim2
 294              		.loc 1 116 0
 295 0038 DA69     		ldr	r2, [r3, #28]
 296 003a 42F00102 		orr	r2, r2, #1
 297 003e DA61     		str	r2, [r3, #28]
 298 0040 DB69     		ldr	r3, [r3, #28]
 299 0042 03F00103 		and	r3, r3, #1
 300 0046 0193     		str	r3, [sp, #4]
 301 0048 019B     		ldr	r3, [sp, #4]
 302              	.LBE3:
 303              		.loc 1 118 0
 304 004a FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 305              	.LVL12:
 306              	.L14:
 119:main.c        **** }
 307              		.loc 1 119 0
 308 004e 03B0     		add	sp, sp, #12
 309              	.LCFI4:
 310              		.cfi_def_cfa_offset 12
 311              		@ sp needed
 312 0050 30BD     		pop	{r4, r5, pc}
 313              	.L19:
 314 0052 00BF     		.align	2
 315              	.L18:
 316 0054 00000000 		.word	tim2_handle
 317 0058 00A24A04 		.word	72000000
 318 005c 00100240 		.word	1073876992
 319              		.cfi_endproc
 320              	.LFE68:
 322              		.section	.text.TIM2_IRQHandler,"ax",%progbits
 323              		.align	1
 324              		.global	TIM2_IRQHandler
 325              		.thumb
 326              		.thumb_func
 328              	TIM2_IRQHandler:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 9


 329              	.LFB69:
 120:main.c        **** 
 121:main.c        **** void TIM2_IRQHandler(void)
 122:main.c        **** {
 330              		.loc 1 122 0
 331              		.cfi_startproc
 332              		@ args = 0, pretend = 0, frame = 0
 333              		@ frame_needed = 0, uses_anonymous_args = 0
 334 0000 10B5     		push	{r4, lr}
 335              	.LCFI5:
 336              		.cfi_def_cfa_offset 8
 337              		.cfi_offset 4, -8
 338              		.cfi_offset 14, -4
 123:main.c        ****   HAL_TIM_IRQHandler(&tim2_handle);
 339              		.loc 1 123 0
 340 0002 074C     		ldr	r4, .L21
 341 0004 2046     		mov	r0, r4
 342 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 343              	.LVL13:
 124:main.c        ****   // begin user code
 125:main.c        ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13);	// toggle LED at PC13
 344              		.loc 1 125 0
 345 000a 4FF40051 		mov	r1, #8192
 346 000e 0548     		ldr	r0, .L21+4
 347 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 348              	.LVL14:
 126:main.c        ****   //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, SET);	// turn OFF LED at PC13
 127:main.c        ****   // end user code
 128:main.c        ****   __HAL_TIM_CLEAR_IT(&tim2_handle, TIM_IT_UPDATE);
 349              		.loc 1 128 0
 350 0014 2368     		ldr	r3, [r4]
 351 0016 6FF00102 		mvn	r2, #1
 352 001a 1A61     		str	r2, [r3, #16]
 353 001c 10BD     		pop	{r4, pc}
 354              	.L22:
 355 001e 00BF     		.align	2
 356              	.L21:
 357 0020 00000000 		.word	tim2_handle
 358 0024 00100140 		.word	1073811456
 359              		.cfi_endproc
 360              	.LFE69:
 362              		.section	.text.TIM1_Init,"ax",%progbits
 363              		.align	1
 364              		.global	TIM1_Init
 365              		.thumb
 366              		.thumb_func
 368              	TIM1_Init:
 369              	.LFB70:
 129:main.c        **** }
 130:main.c        **** 
 131:main.c        **** 
 132:main.c        **** // ======= TIM1 ====================================================
 133:main.c        **** TIM_HandleTypeDef tim1_handle;
 134:main.c        **** 
 135:main.c        **** HAL_StatusTypeDef TIM1_Init()
 136:main.c        **** {
 370              		.loc 1 136 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 10


 371              		.cfi_startproc
 372              		@ args = 0, pretend = 0, frame = 8
 373              		@ frame_needed = 0, uses_anonymous_args = 0
 374 0000 37B5     		push	{r0, r1, r2, r4, r5, lr}
 375              	.LCFI6:
 376              		.cfi_def_cfa_offset 24
 377              		.cfi_offset 4, -12
 378              		.cfi_offset 5, -8
 379              		.cfi_offset 14, -4
 137:main.c        ****   // Initialize TIM1 in a similar way as above
 138:main.c        ****   tim1_handle.Instance = TIM1;
 380              		.loc 1 138 0
 381 0002 134B     		ldr	r3, .L28
 382 0004 134C     		ldr	r4, .L28+4
 139:main.c        ****   tim1_handle.Init.Period = 72000000;
 140:main.c        ****   tim1_handle.Init.Prescaler = 1;	// xN makes it N time slower
 141:main.c        ****   tim1_handle.Init.ClockDivision = 0U;
 383              		.loc 1 141 0
 384 0006 0025     		movs	r5, #0
 138:main.c        ****   tim1_handle.Init.Period = 72000000;
 385              		.loc 1 138 0
 386 0008 2360     		str	r3, [r4]
 139:main.c        ****   tim1_handle.Init.Period = 72000000;
 387              		.loc 1 139 0
 388 000a 134B     		ldr	r3, .L28+8
 142:main.c        ****   tim1_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 143:main.c        ****   tim1_handle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 144:main.c        ****   if (HAL_TIM_Base_Init(&tim1_handle)==HAL_ERROR)
 389              		.loc 1 144 0
 390 000c 2046     		mov	r0, r4
 139:main.c        ****   tim1_handle.Init.Prescaler = 1;	// xN makes it N time slower
 391              		.loc 1 139 0
 392 000e E360     		str	r3, [r4, #12]
 140:main.c        ****   tim1_handle.Init.ClockDivision = 0U;
 393              		.loc 1 140 0
 394 0010 0123     		movs	r3, #1
 395 0012 6360     		str	r3, [r4, #4]
 141:main.c        ****   tim1_handle.Init.CounterMode = TIM_COUNTERMODE_UP;
 396              		.loc 1 141 0
 397 0014 2561     		str	r5, [r4, #16]
 142:main.c        ****   tim1_handle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 398              		.loc 1 142 0
 399 0016 A560     		str	r5, [r4, #8]
 143:main.c        ****   if (HAL_TIM_Base_Init(&tim1_handle)==HAL_ERROR)
 400              		.loc 1 143 0
 401 0018 A561     		str	r5, [r4, #24]
 402              		.loc 1 144 0
 403 001a FFF7FEFF 		bl	HAL_TIM_Base_Init
 404              	.LVL15:
 405 001e 0128     		cmp	r0, #1
 406 0020 14D0     		beq	.L24
 145:main.c        ****      return HAL_ERROR;
 146:main.c        **** 
 147:main.c        ****   // setup and start TIM1's UPDATE interrupts
 148:main.c        ****   HAL_NVIC_SetPriority(TIM1_UP_IRQn, 0, 0);
 407              		.loc 1 148 0
 408 0022 2A46     		mov	r2, r5
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 11


 409 0024 2946     		mov	r1, r5
 410 0026 1920     		movs	r0, #25
 411 0028 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 412              	.LVL16:
 149:main.c        ****   HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 413              		.loc 1 149 0
 414 002c 1920     		movs	r0, #25
 415 002e FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 416              	.LVL17:
 417              	.LBB4:
 150:main.c        ****   __HAL_RCC_TIM1_CLK_ENABLE();
 418              		.loc 1 150 0
 419 0032 0A4B     		ldr	r3, .L28+12
 420              	.LBE4:
 151:main.c        ****   return HAL_TIM_Base_Start_IT(&tim1_handle);
 421              		.loc 1 151 0
 422 0034 2046     		mov	r0, r4
 423              	.LBB5:
 150:main.c        ****   __HAL_RCC_TIM1_CLK_ENABLE();
 424              		.loc 1 150 0
 425 0036 9A69     		ldr	r2, [r3, #24]
 426 0038 42F40062 		orr	r2, r2, #2048
 427 003c 9A61     		str	r2, [r3, #24]
 428 003e 9B69     		ldr	r3, [r3, #24]
 429 0040 03F40063 		and	r3, r3, #2048
 430 0044 0193     		str	r3, [sp, #4]
 431 0046 019B     		ldr	r3, [sp, #4]
 432              	.LBE5:
 433              		.loc 1 151 0
 434 0048 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 435              	.LVL18:
 436              	.L24:
 152:main.c        **** }
 437              		.loc 1 152 0
 438 004c 03B0     		add	sp, sp, #12
 439              	.LCFI7:
 440              		.cfi_def_cfa_offset 12
 441              		@ sp needed
 442 004e 30BD     		pop	{r4, r5, pc}
 443              	.L29:
 444              		.align	2
 445              	.L28:
 446 0050 002C0140 		.word	1073818624
 447 0054 00000000 		.word	tim1_handle
 448 0058 00A24A04 		.word	72000000
 449 005c 00100240 		.word	1073876992
 450              		.cfi_endproc
 451              	.LFE70:
 453              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 454              		.align	1
 455              		.global	TIM1_UP_IRQHandler
 456              		.thumb
 457              		.thumb_func
 459              	TIM1_UP_IRQHandler:
 460              	.LFB71:
 153:main.c        **** 
 154:main.c        **** void TIM1_UP_IRQHandler(void)
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 12


 155:main.c        **** {
 461              		.loc 1 155 0
 462              		.cfi_startproc
 463              		@ args = 0, pretend = 0, frame = 0
 464              		@ frame_needed = 0, uses_anonymous_args = 0
 465 0000 10B5     		push	{r4, lr}
 466              	.LCFI8:
 467              		.cfi_def_cfa_offset 8
 468              		.cfi_offset 4, -8
 469              		.cfi_offset 14, -4
 156:main.c        ****   HAL_TIM_IRQHandler(&tim1_handle);
 470              		.loc 1 156 0
 471 0002 074C     		ldr	r4, .L31
 472 0004 2046     		mov	r0, r4
 473 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 474              	.LVL19:
 157:main.c        ****   // begin user code
 158:main.c        ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // toggle PC13/LED
 475              		.loc 1 158 0
 476 000a 4FF40051 		mov	r1, #8192
 477 000e 0548     		ldr	r0, .L31+4
 478 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 479              	.LVL20:
 159:main.c        ****   // end user code
 160:main.c        ****   __HAL_TIM_CLEAR_IT(&tim1_handle, TIM_IT_UPDATE);
 480              		.loc 1 160 0
 481 0014 2368     		ldr	r3, [r4]
 482 0016 6FF00102 		mvn	r2, #1
 483 001a 1A61     		str	r2, [r3, #16]
 484 001c 10BD     		pop	{r4, pc}
 485              	.L32:
 486 001e 00BF     		.align	2
 487              	.L31:
 488 0020 00000000 		.word	tim1_handle
 489 0024 00100140 		.word	1073811456
 490              		.cfi_endproc
 491              	.LFE71:
 493              		.section	.text.startup.main,"ax",%progbits
 494              		.align	1
 495              		.global	main
 496              		.thumb
 497              		.thumb_func
 499              	main:
 500              	.LFB72:
 161:main.c        **** }
 162:main.c        **** 
 163:main.c        **** 
 164:main.c        **** 
 165:main.c        **** // ======================
 166:main.c        **** int main(void) {
 501              		.loc 1 166 0
 502              		.cfi_startproc
 503              		@ Volatile: function does not return.
 504              		@ args = 0, pretend = 0, frame = 0
 505              		@ frame_needed = 0, uses_anonymous_args = 0
 506 0000 08B5     		push	{r3, lr}
 507              	.LCFI9:
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 13


 508              		.cfi_def_cfa_offset 8
 509              		.cfi_offset 3, -8
 510              		.cfi_offset 14, -4
 167:main.c        **** 
 168:main.c        ****   HAL_Init();
 511              		.loc 1 168 0
 512 0002 FFF7FEFF 		bl	HAL_Init
 513              	.LVL21:
 169:main.c        **** 
 170:main.c        ****   SystemClock_Config();
 514              		.loc 1 170 0
 515 0006 FFF7FEFF 		bl	SystemClock_Config
 516              	.LVL22:
 171:main.c        **** 
 172:main.c        **** /*
 173:main.c        ****   __HAL_RCC_AFIO_CLK_ENABLE();
 174:main.c        **** 
 175:main.c        ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
 176:main.c        ****   HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
 177:main.c        ****   HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
 178:main.c        ****   HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
 179:main.c        ****   HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
 180:main.c        ****   HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
 181:main.c        ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
 182:main.c        ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
 183:main.c        **** */
 184:main.c        **** 
 185:main.c        ****   PC13_led_init();	// needed for toggle PC13/LED
 517              		.loc 1 185 0
 518 000a FFF7FEFF 		bl	PC13_led_init
 519              	.LVL23:
 186:main.c        **** 
 187:main.c        ****   GPIO_Init_for_PWM();
 520              		.loc 1 187 0
 521 000e FFF7FEFF 		bl	GPIO_Init_for_PWM
 522              	.LVL24:
 188:main.c        ****   TIM1_PWM1_Init();
 523              		.loc 1 188 0
 524 0012 FFF7FEFF 		bl	TIM1_PWM1_Init
 525              	.LVL25:
 189:main.c        **** 
 190:main.c        **** //  TIM1_Init();
 191:main.c        **** 
 192:main.c        **** //  TIM2_Init();
 193:main.c        **** 
 194:main.c        ****   if (HAL_InitTick(0) != HAL_ERROR)
 526              		.loc 1 194 0
 527 0016 0020     		movs	r0, #0
 528 0018 FFF7FEFF 		bl	HAL_InitTick
 529              	.LVL26:
 530              	.L34:
 195:main.c        ****   {
 196:main.c        **** 	// means the timers are started successfully
 197:main.c        ****   }
 198:main.c        **** 
 199:main.c        ****   while(1)
 200:main.c        ****   {
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 14


 201:main.c        **** /*
 202:main.c        ****         while(CH1_DC < 65535)
 203:main.c        ****         { // increase PWM duty cycles
 204:main.c        ****           TIM1->CCR1 = CH1_DC;
 205:main.c        ****           CH1_DC += 70;
 206:main.c        ****           HAL_Delay(1);
 207:main.c        ****         }
 208:main.c        ****         while(CH1_DC > 0)
 209:main.c        ****         { // decrease PWM duty cycles
 210:main.c        ****             TIM1->CCR1 = CH1_DC;
 211:main.c        ****             CH1_DC -= 70;
 212:main.c        ****             HAL_Delay(1);
 213:main.c        ****         }
 214:main.c        **** */
 215:main.c        ****         HAL_Delay(100); // is it about 500 ms?
 531              		.loc 1 215 0 discriminator 1
 532 001c 6420     		movs	r0, #100
 533 001e FFF7FEFF 		bl	HAL_Delay
 534              	.LVL27:
 216:main.c        ****         HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // PC13 LED
 535              		.loc 1 216 0 discriminator 1
 536 0022 4FF40051 		mov	r1, #8192
 537 0026 0248     		ldr	r0, .L35
 538 0028 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 539              	.LVL28:
 540 002c F6E7     		b	.L34
 541              	.L36:
 542 002e 00BF     		.align	2
 543              	.L35:
 544 0030 00100140 		.word	1073811456
 545              		.cfi_endproc
 546              	.LFE72:
 548              		.comm	tim1_handle,64,4
 549              		.comm	tim2_handle,64,4
 550              		.global	led_state
 551              		.global	GPIOC_BSRR
 552              		.section	.bss.led_state,"aw",%nobits
 553              		.align	2
 554              		.set	.LANCHOR1,. + 0
 557              	led_state:
 558 0000 00000000 		.space	4
 559              		.section	.data.GPIOC_BSRR,"aw",%progbits
 560              		.align	2
 561              		.set	.LANCHOR0,. + 0
 564              	GPIOC_BSRR:
 565 0000 10100140 		.word	1073811472
 566              		.text
 567              	.Letext0:
 568              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 569              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
 570              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 571              		.file 5 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 572              		.file 6 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 573              		.file 7 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 574              		.file 8 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 575              		.file 9 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 576              		.file 10 "../Drivers/CMSIS/Include/core_cm3.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 15


 577              		.file 11 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 578              		.file 12 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 579              		.file 13 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s 			page 16


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:20     .text.SysTick_Handler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:25     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:40     .text.SystemClock_Config:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:45     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:145    .text.PC13_led_init:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:150    .text.PC13_led_init:0000000000000000 PC13_led_init
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:182    .text.PC13_led_init:000000000000002c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:189    .text.PC13_led_toggle:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:194    .text.PC13_led_toggle:0000000000000000 PC13_led_toggle
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:228    .text.PC13_led_toggle:0000000000000028 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:234    .text.TIM2_Init:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:239    .text.TIM2_Init:0000000000000000 TIM2_Init
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:316    .text.TIM2_Init:0000000000000054 $d
                            *COM*:0000000000000040 tim2_handle
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:323    .text.TIM2_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:328    .text.TIM2_IRQHandler:0000000000000000 TIM2_IRQHandler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:357    .text.TIM2_IRQHandler:0000000000000020 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:363    .text.TIM1_Init:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:368    .text.TIM1_Init:0000000000000000 TIM1_Init
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:446    .text.TIM1_Init:0000000000000050 $d
                            *COM*:0000000000000040 tim1_handle
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:454    .text.TIM1_UP_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:459    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:488    .text.TIM1_UP_IRQHandler:0000000000000020 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:494    .text.startup.main:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:499    .text.startup.main:0000000000000000 main
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:544    .text.startup.main:0000000000000030 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:557    .bss.led_state:0000000000000000 led_state
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:564    .data.GPIOC_BSRR:0000000000000000 GPIOC_BSRR
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:553    .bss.led_state:0000000000000000 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccMAGOPV.s:560    .data.GPIOC_BSRR:0000000000000000 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_TIM_Base_Init
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Start_IT
HAL_TIM_IRQHandler
HAL_GPIO_TogglePin
HAL_Init
GPIO_Init_for_PWM
TIM1_PWM1_Init
HAL_InitTick
HAL_Delay
