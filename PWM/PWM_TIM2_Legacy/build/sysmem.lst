ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"sysmem.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text._sbrk,"ax",%progbits
  20              		.align	1
  21              		.global	_sbrk
  22              		.thumb
  23              		.thumb_func
  25              	_sbrk:
  26              	.LFB1:
  27              		.file 1 "Src/sysmem.c"
   1:Src/sysmem.c  **** /**
   2:Src/sysmem.c  ****  ******************************************************************************
   3:Src/sysmem.c  ****  * @file      sysmem.c
   4:Src/sysmem.c  ****  * @author    Auto-generated by STM32CubeIDE
   5:Src/sysmem.c  ****  * @brief     STM32CubeIDE Minimal System Memory calls file
   6:Src/sysmem.c  ****  *
   7:Src/sysmem.c  ****  *            For more information about which c-functions
   8:Src/sysmem.c  ****  *            need which of these lowlevel functions
   9:Src/sysmem.c  ****  *            please consult the Newlib libc-manual
  10:Src/sysmem.c  ****  ******************************************************************************
  11:Src/sysmem.c  ****  * @attention
  12:Src/sysmem.c  ****  *
  13:Src/sysmem.c  ****  * <h2><center>&copy; Copyright (c) 2020 STMicroelectronics.
  14:Src/sysmem.c  ****  * All rights reserved.</center></h2>
  15:Src/sysmem.c  ****  *
  16:Src/sysmem.c  ****  * This software component is licensed by ST under BSD 3-Clause license,
  17:Src/sysmem.c  ****  * the "License"; You may not use this file except in compliance with the
  18:Src/sysmem.c  ****  * License. You may obtain a copy of the License at:
  19:Src/sysmem.c  ****  *                        opensource.org/licenses/BSD-3-Clause
  20:Src/sysmem.c  ****  *
  21:Src/sysmem.c  ****  ******************************************************************************
  22:Src/sysmem.c  ****  */
  23:Src/sysmem.c  **** 
  24:Src/sysmem.c  **** /* Includes */
  25:Src/sysmem.c  **** #include <errno.h>
  26:Src/sysmem.c  **** #include <stdio.h>
  27:Src/sysmem.c  **** 
  28:Src/sysmem.c  **** /* Variables */
  29:Src/sysmem.c  **** extern int errno;
  30:Src/sysmem.c  **** register char * stack_ptr asm("sp");
  31:Src/sysmem.c  **** 
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s 			page 2


  32:Src/sysmem.c  **** /* Functions */
  33:Src/sysmem.c  **** 
  34:Src/sysmem.c  **** /**
  35:Src/sysmem.c  ****  _sbrk
  36:Src/sysmem.c  ****  Increase program data space. Malloc and related functions depend on this
  37:Src/sysmem.c  **** **/
  38:Src/sysmem.c  **** caddr_t _sbrk(int incr)
  39:Src/sysmem.c  **** {
  28              		.loc 1 39 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              	.LVL0:
  33 0000 08B5     		push	{r3, lr}
  34              	.LCFI0:
  35              		.cfi_def_cfa_offset 8
  36              		.cfi_offset 3, -8
  37              		.cfi_offset 14, -4
  40:Src/sysmem.c  **** 	extern char end asm("end");
  41:Src/sysmem.c  **** 	static char *heap_end;
  42:Src/sysmem.c  **** 	char *prev_heap_end;
  43:Src/sysmem.c  **** 
  44:Src/sysmem.c  **** 	if (heap_end == 0)
  38              		.loc 1 44 0
  39 0002 0A4B     		ldr	r3, .L6
  40 0004 1A68     		ldr	r2, [r3]
  41 0006 0AB9     		cbnz	r2, .L2
  45:Src/sysmem.c  **** 		heap_end = &end;
  42              		.loc 1 45 0
  43 0008 094A     		ldr	r2, .L6+4
  44 000a 1A60     		str	r2, [r3]
  45              	.L2:
  46:Src/sysmem.c  **** 
  47:Src/sysmem.c  **** 	prev_heap_end = heap_end;
  48:Src/sysmem.c  **** 	if (heap_end + incr > stack_ptr)
  46              		.loc 1 48 0
  47 000c 6A46     		mov	r2, sp
  47:Src/sysmem.c  **** 	if (heap_end + incr > stack_ptr)
  48              		.loc 1 47 0
  49 000e 1B68     		ldr	r3, [r3]
  50              	.LVL1:
  51              		.loc 1 48 0
  52 0010 1844     		add	r0, r0, r3
  53              	.LVL2:
  54 0012 9042     		cmp	r0, r2
  55 0014 06D9     		bls	.L3
  49:Src/sysmem.c  **** 	{
  50:Src/sysmem.c  **** 		errno = ENOMEM;
  56              		.loc 1 50 0
  57 0016 FFF7FEFF 		bl	__errno
  58              	.LVL3:
  59 001a 0C23     		movs	r3, #12
  60 001c 0360     		str	r3, [r0]
  51:Src/sysmem.c  **** 		return (caddr_t) -1;
  61              		.loc 1 51 0
  62 001e 4FF0FF30 		mov	r0, #-1
  63 0022 08BD     		pop	{r3, pc}
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s 			page 3


  64              	.LVL4:
  65              	.L3:
  52:Src/sysmem.c  **** 	}
  53:Src/sysmem.c  **** 
  54:Src/sysmem.c  **** 	heap_end += incr;
  66              		.loc 1 54 0
  67 0024 014A     		ldr	r2, .L6
  68 0026 1060     		str	r0, [r2]
  55:Src/sysmem.c  **** 
  56:Src/sysmem.c  **** 	return (caddr_t) prev_heap_end;
  69              		.loc 1 56 0
  70 0028 1846     		mov	r0, r3
  57:Src/sysmem.c  **** }
  71              		.loc 1 57 0
  72 002a 08BD     		pop	{r3, pc}
  73              	.LVL5:
  74              	.L7:
  75              		.align	2
  76              	.L6:
  77 002c 00000000 		.word	.LANCHOR0
  78 0030 00000000 		.word	end
  79              		.cfi_endproc
  80              	.LFE1:
  82              		.section	.bss.heap_end.5167,"aw",%nobits
  83              		.align	2
  84              		.set	.LANCHOR0,. + 0
  87              	heap_end.5167:
  88 0000 00000000 		.space	4
  89              		.text
  90              	.Letext0:
  91              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/types.h"
  92              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/errno.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s 			page 4


DEFINED SYMBOLS
                            *ABS*:0000000000000000 sysmem.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s:20     .text._sbrk:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s:25     .text._sbrk:0000000000000000 _sbrk
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s:77     .text._sbrk:000000000000002c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s:83     .bss.heap_end.5167:0000000000000000 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccdHxMJc.s:87     .bss.heap_end.5167:0000000000000000 heap_end.5167
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
__errno
end
