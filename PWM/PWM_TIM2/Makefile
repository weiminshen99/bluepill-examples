##########################################################################################################################
# File automatically-generated by tool: [projectgenerator] version: [3.1.0] date: [Mon Feb 03 19:54:27 CET 2020] 
##########################################################################################################################

# ------------------------------------------------
# Generic Makefile (based on gcc)
#
# ChangeLog :
#   2022-3-18  - improvements for hover-master-slave-boards by WMS
#   2017-02-10 - Several enhancements + project update mode
#   2015-07-22 - first version
# ------------------------------------------------

######################################
# target: change config.h to select MASTER or SLAVE
######################################
TARGET = main
#TARGET = master
#TARGET = slave

######################################
# building variables
######################################
# debug build?
DEBUG = 1
# optimization for size
OPT = -Os


#######################################
# paths
#######################################
# Build path
BUILD_DIR = build

# Drivers path
DRIVERS_DIR = ../Drivers/STM32F1xx_HAL_Driver

# C includes
C_INCLUDES =  \
-I. \
-IInc \
-I$(DRIVERS_DIR)/Inc \
-I$(DRIVERS_DIR)/Inc/Legacy \
-I../Drivers/CMSIS/Device/ST/STM32F1xx/Include \
-I../Drivers/CMSIS/Include

######################################
# source
######################################
# C sources
C_SOURCES =  \
../Drivers/CMSIS/Device/ST/STM32F1xx/Source/Templates/system_stm32f1xx.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_cortex.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_tim.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_tim_ex.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_rcc.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_rcc_ex.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_gpio.c \
$(DRIVERS_DIR)/Src/stm32f1xx_hal_gpio_ex.c \
main.c \
tim1_it.c \
tim2_it.c \
tim2_pwm1.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_flash.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_pwr.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_adc_ex.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_flash_ex.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_adc.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_uart.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_i2c.c \
#$(DRIVERS_DIR)/Src/stm32f1xx_hal_dma.c \

# ASM sources
ASM_SOURCES =  \
startup_stm32f103xb.s
#../blink1/bootstrap.s
#startup_stm32f103xe.s

#######################################
# binaries
#######################################
PREFIX = arm-none-eabi-
# The gcc compiler bin path can be either defined in make command via GCC_PATH variable (> make GCC_PATH=xxx)
# either it can be added to the PATH environment variable.
ifdef GCC_PATH
CC = $(GCC_PATH)/$(PREFIX)gcc
AS = $(GCC_PATH)/$(PREFIX)gcc -x assembler-with-cpp
CP = $(GCC_PATH)/$(PREFIX)objcopy
SZ = $(GCC_PATH)/$(PREFIX)size
else
CC = $(PREFIX)gcc
AS = $(PREFIX)gcc -x assembler-with-cpp
CP = $(PREFIX)objcopy
SZ = $(PREFIX)size
GDB= $(PREFIX)gdb
endif
HEX = $(CP) -O ihex
BIN = $(CP) -O binary -S

#######################################
# CFLAGS
#######################################
# cpu
CPU = -mcpu=cortex-m3

# fpu
# NONE for Cortex-M0/M0+/M3

# float-abi


# mcu
MCU = $(CPU) -mthumb $(FPU) $(FLOAT-ABI)

# macros for gcc
# AS defines
AS_DEFS = 

# C defines
C_DEFS =  \
 -DUSE_HAL_DRIVER \
 -DSTM32F103xB
# -DSTM32F103xE

# AS includes
AS_INCLUDES = 

# compile gcc flags
ASFLAGS = $(MCU) $(AS_DEFS) $(AS_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

CFLAGS = $(MCU) $(C_DEFS) $(C_INCLUDES) $(OPT) -Wall -fdata-sections -ffunction-sections

ifeq ($(DEBUG), 1)
CFLAGS += -g -gdwarf-2
endif


# Generate dependency information
CFLAGS += -MMD -MP -MF"$(@:%.o=%.d)"


#######################################
# LDFLAGS
#######################################
# link script
#LDSCRIPT = GD32F130C6T_FLASH.ld
#LDSCRIPT = STM32F103RCTx_FLASH.ld
LDSCRIPT = STM32F103C8Tx_FLASH.ld

# libraries
LIBS = -lc -lm -lnosys
LIBDIR =
LDFLAGS = $(MCU) -specs=nano.specs -T$(LDSCRIPT) $(LIBDIR) $(LIBS) -Wl,-Map=$(BUILD_DIR)/$(TARGET).map,--cref -Wl,--gc-sections

# default action: build all
all: $(BUILD_DIR)/$(TARGET).elf $(BUILD_DIR)/$(TARGET).hex $(BUILD_DIR)/$(TARGET).bin


#######################################
# build the application
#######################################
# list of objects
OBJECTS = $(addprefix $(BUILD_DIR)/,$(notdir $(C_SOURCES:.c=.o)))
vpath %.c $(sort $(dir $(C_SOURCES)))
# list of ASM program objects
OBJECTS += $(addprefix $(BUILD_DIR)/,$(notdir $(ASM_SOURCES:.s=.o)))
vpath %.s $(sort $(dir $(ASM_SOURCES)))

$(BUILD_DIR)/%.o: %.c Makefile | $(BUILD_DIR)
	$(CC) -c $(CFLAGS) -Wa,-a,-ad,-alms=$(BUILD_DIR)/$(notdir $(<:.c=.lst)) $< -o $@

$(BUILD_DIR)/%.o: %.s Makefile | $(BUILD_DIR)
	$(AS) -c $(CFLAGS) $< -o $@

$(BUILD_DIR)/$(TARGET).elf: $(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

slave:	$(OBJECTS) Makefile
	$(CC) $(OBJECTS) $(LDFLAGS) -o $@
	$(SZ) $@

$(BUILD_DIR)/%.hex: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(HEX) $< $@

$(BUILD_DIR)/%.bin: $(BUILD_DIR)/%.elf | $(BUILD_DIR)
	$(BIN) $< $@

$(BUILD_DIR):
	mkdir $@

#######################################
# clean up
#######################################
clean:
	-rm -fR $(BUILD_DIR)

flash:	$(BUILD_DIR)/$(TARGET).bin
	st-flash --reset write $(BUILD_DIR)/$(TARGET).bin 0x8000000

unlock:
	openocd -f interface/stlink-v2.cfg -f target/stm32f1x.cfg -c init -c "reset halt" -c "stm32f1x unlock 0"

gdb:	$(BUILD_DIR)/$(TARGET).elf
#	st-util -p 4242 & // you may type this once
	$(GDB) --eval-command="target extended-remote :4242" $(BUILD_DIR)/$(TARGET).elf

#######################################
# dependencies
#######################################
-include $(wildcard $(BUILD_DIR)/*.d)

# *** EOF ***
