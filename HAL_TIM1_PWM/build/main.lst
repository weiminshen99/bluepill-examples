ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 1


   1              		.syntax unified
   2              		.cpu cortex-m3
   3              		.fpu softvfp
   4              		.eabi_attribute 20, 1
   5              		.eabi_attribute 21, 1
   6              		.eabi_attribute 23, 3
   7              		.eabi_attribute 24, 1
   8              		.eabi_attribute 25, 1
   9              		.eabi_attribute 26, 1
  10              		.eabi_attribute 30, 4
  11              		.eabi_attribute 34, 1
  12              		.eabi_attribute 18, 4
  13              		.thumb
  14              		.syntax unified
  15              		.file	"main.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.section	.text.SysTick_Handler,"ax",%progbits
  20              		.align	1
  21              		.global	SysTick_Handler
  22              		.thumb
  23              		.thumb_func
  25              	SysTick_Handler:
  26              	.LFB65:
  27              		.file 1 "main.c"
   1:main.c        **** // **************************************************************
   2:main.c        **** // Copyright (c) 2022 AARI Corporation. All rights reserved
   3:main.c        **** // Author Wei-Min Shen, 3-26-2022, 11-9-2022
   4:main.c        **** //
   5:main.c        **** // A demo for two timers to colaborate with each other:
   6:main.c        **** // 	Timer1's interrupt trun on  PC13/LED, and
   7:main.c        **** // 	Timer2's interrupt turn off PC13/LED
   8:main.c        **** //	To see these fast effects, gdb break on HAL_GPIO_TogglePin
   9:main.c        **** // ***************************************************************
  10:main.c        **** 
  11:main.c        **** #include "stm32f1xx_hal.h"
  12:main.c        **** 
  13:main.c        **** 
  14:main.c        **** void GPIO_Init();
  15:main.c        **** HAL_StatusTypeDef TIM1_PWM1_Init();
  16:main.c        **** void SystemClock_Config();
  17:main.c        **** 
  18:main.c        **** TIM_HandleTypeDef tim1_handle;
  19:main.c        **** 
  20:main.c        **** // ======================
  21:main.c        **** int main(void) {
  22:main.c        **** 
  23:main.c        ****   HAL_Init();
  24:main.c        ****   SystemClock_Config();
  25:main.c        **** 
  26:main.c        **** /*
  27:main.c        ****   __HAL_RCC_AFIO_CLK_ENABLE();
  28:main.c        ****   HAL_NVIC_SetPriorityGrouping(NVIC_PRIORITYGROUP_4);
  29:main.c        ****   HAL_NVIC_SetPriority(MemoryManagement_IRQn, 0, 0);
  30:main.c        ****   HAL_NVIC_SetPriority(BusFault_IRQn, 0, 0);
  31:main.c        ****   HAL_NVIC_SetPriority(UsageFault_IRQn, 0, 0);
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 2


  32:main.c        ****   HAL_NVIC_SetPriority(SVCall_IRQn, 0, 0);
  33:main.c        ****   HAL_NVIC_SetPriority(DebugMonitor_IRQn, 0, 0);
  34:main.c        ****   HAL_NVIC_SetPriority(PendSV_IRQn, 0, 0);
  35:main.c        ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
  36:main.c        **** */
  37:main.c        **** 
  38:main.c        ****   GPIO_Init();
  39:main.c        ****   TIM1_PWM1_Init();
  40:main.c        **** 
  41:main.c        ****   if (HAL_InitTick(0) != HAL_ERROR) {
  42:main.c        **** 	// means the timers are started successfully 
  43:main.c        ****   }
  44:main.c        **** 
  45:main.c        ****   while(1)
  46:main.c        ****     {
  47:main.c        **** 	HAL_Delay(100);	// is it about 500 ms?
  48:main.c        **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // PC13 LED
  49:main.c        ****     }
  50:main.c        **** }
  51:main.c        **** 
  52:main.c        **** 
  53:main.c        **** // ===================================
  54:main.c        **** // this is needed for HAL_Delay()
  55:main.c        **** void SysTick_Handler(void)	// this SysTick Timer is running at _MHZ
  56:main.c        **** {
  28              		.loc 1 56 0
  29              		.cfi_startproc
  30              		@ args = 0, pretend = 0, frame = 0
  31              		@ frame_needed = 0, uses_anonymous_args = 0
  32              		@ link register save eliminated.
  57:main.c        ****   HAL_IncTick();                  	// at Hardware Abstraction Level (HAL), OR
  33              		.loc 1 57 0
  34 0000 FFF7FEBF 		b	HAL_IncTick
  35              	.LVL0:
  36              		.cfi_endproc
  37              	.LFE65:
  39              		.section	.text.SystemClock_Config,"ax",%progbits
  40              		.align	1
  41              		.global	SystemClock_Config
  42              		.thumb
  43              		.thumb_func
  45              	SystemClock_Config:
  46              	.LFB66:
  58:main.c        ****   //extern int32_t uwTick; uwTick++;	// equivelently, do it at the hardware level
  59:main.c        **** }
  60:main.c        **** 
  61:main.c        **** // System Clock Configuration
  62:main.c        **** void SystemClock_Config(void) {
  47              		.loc 1 62 0
  48              		.cfi_startproc
  49              		@ args = 0, pretend = 0, frame = 80
  50              		@ frame_needed = 0, uses_anonymous_args = 0
  51 0000 30B5     		push	{r4, r5, lr}
  52              	.LCFI0:
  53              		.cfi_def_cfa_offset 12
  54              		.cfi_offset 4, -12
  55              		.cfi_offset 5, -8
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 3


  56              		.cfi_offset 14, -4
  63:main.c        ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  64:main.c        ****   RCC_ClkInitTypeDef RCC_ClkInitStruct;
  65:main.c        ****   RCC_PeriphCLKInitTypeDef PeriphClkInit;
  66:main.c        ****   // Initializes the CPU, AHB and APB busses clocks
  67:main.c        ****   RCC_OscInitStruct.OscillatorType      = RCC_OSCILLATORTYPE_HSI;
  68:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  57              		.loc 1 68 0
  58 0002 0123     		movs	r3, #1
  62:main.c        ****   RCC_OscInitTypeDef RCC_OscInitStruct;
  59              		.loc 1 62 0
  60 0004 95B0     		sub	sp, sp, #84
  61              	.LCFI1:
  62              		.cfi_def_cfa_offset 96
  63              		.loc 1 68 0
  64 0006 0E93     		str	r3, [sp, #56]
  69:main.c        ****   RCC_OscInitStruct.HSICalibrationValue = 16;
  65              		.loc 1 69 0
  66 0008 1023     		movs	r3, #16
  67:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  67              		.loc 1 67 0
  68 000a 0224     		movs	r4, #2
  70:main.c        ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
  71:main.c        ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI_DIV2;
  69              		.loc 1 71 0
  70 000c 0025     		movs	r5, #0
  69:main.c        ****   RCC_OscInitStruct.PLL.PLLState        = RCC_PLL_ON;
  71              		.loc 1 69 0
  72 000e 0F93     		str	r3, [sp, #60]
  72:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  73:main.c        ****   HAL_RCC_OscConfig(&RCC_OscInitStruct);
  73              		.loc 1 73 0
  74 0010 0AA8     		add	r0, sp, #40
  72:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  75              		.loc 1 72 0
  76 0012 4FF46013 		mov	r3, #3670016
  77 0016 1393     		str	r3, [sp, #76]
  67:main.c        ****   RCC_OscInitStruct.HSIState            = RCC_HSI_ON;
  78              		.loc 1 67 0
  79 0018 0A94     		str	r4, [sp, #40]
  70:main.c        ****   RCC_OscInitStruct.PLL.PLLSource       = RCC_PLLSOURCE_HSI_DIV2;
  80              		.loc 1 70 0
  81 001a 1194     		str	r4, [sp, #68]
  71:main.c        ****   RCC_OscInitStruct.PLL.PLLMUL          = RCC_PLL_MUL16;
  82              		.loc 1 71 0
  83 001c 1295     		str	r5, [sp, #72]
  84              		.loc 1 73 0
  85 001e FFF7FEFF 		bl	HAL_RCC_OscConfig
  86              	.LVL1:
  74:main.c        ****   // Initializes the CPU, AHB and APB busses clocks
  75:main.c        ****   RCC_ClkInitStruct.ClockType      = RCC_CLOCKTYPE_HCLK | RCC_CLOCKTYPE_SYSCLK | RCC_CLOCKTYPE_PCLK
  87              		.loc 1 75 0
  88 0022 0F23     		movs	r3, #15
  76:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  77:main.c        ****   RCC_ClkInitStruct.AHBCLKDivider  = RCC_SYSCLK_DIV1;
  78:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
  79:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 4


  80:main.c        ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2);
  89              		.loc 1 80 0
  90 0024 2146     		mov	r1, r4
  75:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  91              		.loc 1 75 0
  92 0026 0593     		str	r3, [sp, #20]
  93              		.loc 1 80 0
  94 0028 05A8     		add	r0, sp, #20
  78:main.c        ****   RCC_ClkInitStruct.APB2CLKDivider = RCC_HCLK_DIV1;
  95              		.loc 1 78 0
  96 002a 4FF48063 		mov	r3, #1024
  97 002e 0893     		str	r3, [sp, #32]
  76:main.c        ****   RCC_ClkInitStruct.SYSCLKSource   = RCC_SYSCLKSOURCE_PLLCLK;
  98              		.loc 1 76 0
  99 0030 0694     		str	r4, [sp, #24]
  77:main.c        ****   RCC_ClkInitStruct.APB1CLKDivider = RCC_HCLK_DIV2;
 100              		.loc 1 77 0
 101 0032 0795     		str	r5, [sp, #28]
  79:main.c        ****   HAL_RCC_ClockConfig(&RCC_ClkInitStruct, FLASH_LATENCY_2);
 102              		.loc 1 79 0
 103 0034 0995     		str	r5, [sp, #36]
 104              		.loc 1 80 0
 105 0036 FFF7FEFF 		bl	HAL_RCC_ClockConfig
 106              	.LVL2:
  81:main.c        ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
  82:main.c        ****   PeriphClkInit.AdcClockSelection    = RCC_ADCPCLK2_DIV8;  // 8 MHz
 107              		.loc 1 82 0
 108 003a 4FF44043 		mov	r3, #49152
  83:main.c        ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 109              		.loc 1 83 0
 110 003e 01A8     		add	r0, sp, #4
  82:main.c        ****   HAL_RCCEx_PeriphCLKConfig(&PeriphClkInit);
 111              		.loc 1 82 0
 112 0040 0393     		str	r3, [sp, #12]
  81:main.c        ****   PeriphClkInit.PeriphClockSelection = RCC_PERIPHCLK_ADC;
 113              		.loc 1 81 0
 114 0042 0194     		str	r4, [sp, #4]
 115              		.loc 1 83 0
 116 0044 FFF7FEFF 		bl	HAL_RCCEx_PeriphCLKConfig
 117              	.LVL3:
  84:main.c        ****   // Configure the Systick interrupt time
  85:main.c        ****   HAL_SYSTICK_Config(HAL_RCC_GetHCLKFreq() / 1000);
 118              		.loc 1 85 0
 119 0048 FFF7FEFF 		bl	HAL_RCC_GetHCLKFreq
 120              	.LVL4:
 121 004c 4FF47A73 		mov	r3, #1000
 122 0050 B0FBF3F0 		udiv	r0, r0, r3
 123 0054 FFF7FEFF 		bl	HAL_SYSTICK_Config
 124              	.LVL5:
  86:main.c        ****   // Configure the Systick
  87:main.c        ****   HAL_SYSTICK_CLKSourceConfig(SYSTICK_CLKSOURCE_HCLK);
 125              		.loc 1 87 0
 126 0058 0420     		movs	r0, #4
 127 005a FFF7FEFF 		bl	HAL_SYSTICK_CLKSourceConfig
 128              	.LVL6:
  88:main.c        ****   // SysTick_IRQn interrupt configuration
  89:main.c        ****   HAL_NVIC_SetPriority(SysTick_IRQn, 0, 0);
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 5


 129              		.loc 1 89 0
 130 005e 2A46     		mov	r2, r5
 131 0060 2946     		mov	r1, r5
 132 0062 4FF0FF30 		mov	r0, #-1
 133 0066 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 134              	.LVL7:
  90:main.c        **** }
 135              		.loc 1 90 0
 136 006a 15B0     		add	sp, sp, #84
 137              	.LCFI2:
 138              		.cfi_def_cfa_offset 12
 139              		@ sp needed
 140 006c 30BD     		pop	{r4, r5, pc}
 141              		.cfi_endproc
 142              	.LFE66:
 144              		.section	.text.GPIO_Init,"ax",%progbits
 145              		.align	1
 146              		.global	GPIO_Init
 147              		.thumb
 148              		.thumb_func
 150              	GPIO_Init:
 151              	.LFB67:
  91:main.c        **** 
  92:main.c        **** void GPIO_Init()
  93:main.c        **** {
 152              		.loc 1 93 0
 153              		.cfi_startproc
 154              		@ args = 0, pretend = 0, frame = 32
 155              		@ frame_needed = 0, uses_anonymous_args = 0
 156              	.LBB3:
  94:main.c        ****   // GPIO Ports Clock Enable
  95:main.c        ****   __HAL_RCC_GPIOA_CLK_ENABLE();
 157              		.loc 1 95 0
 158 0000 1C4B     		ldr	r3, .L4
 159              	.LBE3:
  93:main.c        ****   // GPIO Ports Clock Enable
 160              		.loc 1 93 0
 161 0002 30B5     		push	{r4, r5, lr}
 162              	.LCFI3:
 163              		.cfi_def_cfa_offset 12
 164              		.cfi_offset 4, -12
 165              		.cfi_offset 5, -8
 166              		.cfi_offset 14, -4
 167              	.LBB4:
 168              		.loc 1 95 0
 169 0004 9A69     		ldr	r2, [r3, #24]
 170              	.LBE4:
  93:main.c        ****   // GPIO Ports Clock Enable
 171              		.loc 1 93 0
 172 0006 89B0     		sub	sp, sp, #36
 173              	.LCFI4:
 174              		.cfi_def_cfa_offset 48
 175              	.LBB5:
 176              		.loc 1 95 0
 177 0008 42F00402 		orr	r2, r2, #4
 178 000c 9A61     		str	r2, [r3, #24]
 179 000e 9A69     		ldr	r2, [r3, #24]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 6


 180              	.LBE5:
  96:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
  97:main.c        ****   __HAL_RCC_GPIOC_CLK_ENABLE();
  98:main.c        ****   // PC13 for Output to LED
  99:main.c        ****   GPIO_InitTypeDef GPIO_InitStruct;
 100:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_OUTPUT_PP; // <== OUTPUT_PP below
 101:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 181              		.loc 1 101 0
 182 0010 08AC     		add	r4, sp, #32
 183              	.LBB6:
  95:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 184              		.loc 1 95 0
 185 0012 02F00402 		and	r2, r2, #4
 186 0016 0192     		str	r2, [sp, #4]
 187 0018 019A     		ldr	r2, [sp, #4]
 188              	.LBE6:
 189              	.LBB7:
  96:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 190              		.loc 1 96 0
 191 001a 9A69     		ldr	r2, [r3, #24]
 192              	.LBE7:
 193              		.loc 1 101 0
 194 001c 4FF40055 		mov	r5, #8192
 195              	.LBB8:
  96:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 196              		.loc 1 96 0
 197 0020 42F00802 		orr	r2, r2, #8
 198 0024 9A61     		str	r2, [r3, #24]
 199 0026 9A69     		ldr	r2, [r3, #24]
 200              	.LBE8:
 102:main.c        ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 201              		.loc 1 102 0
 202 0028 1348     		ldr	r0, .L4+4
 203              	.LBB9:
  96:main.c        ****   __HAL_RCC_GPIOB_CLK_ENABLE();
 204              		.loc 1 96 0
 205 002a 02F00802 		and	r2, r2, #8
 206 002e 0292     		str	r2, [sp, #8]
 207 0030 029A     		ldr	r2, [sp, #8]
 208              	.LBE9:
 209              	.LBB10:
  97:main.c        ****   // PC13 for Output to LED
 210              		.loc 1 97 0
 211 0032 9A69     		ldr	r2, [r3, #24]
 212 0034 42F01002 		orr	r2, r2, #16
 213 0038 9A61     		str	r2, [r3, #24]
 214 003a 9B69     		ldr	r3, [r3, #24]
 215              	.LBE10:
 101:main.c        ****   HAL_GPIO_Init(GPIOC, &GPIO_InitStruct);
 216              		.loc 1 101 0
 217 003c 44F8105D 		str	r5, [r4, #-16]!
 218              	.LBB11:
  97:main.c        ****   // PC13 for Output to LED
 219              		.loc 1 97 0
 220 0040 03F01003 		and	r3, r3, #16
 221 0044 0393     		str	r3, [sp, #12]
 222 0046 039B     		ldr	r3, [sp, #12]
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 7


 223              	.LBE11:
 224              		.loc 1 102 0
 225 0048 2146     		mov	r1, r4
 100:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 226              		.loc 1 100 0
 227 004a 0123     		movs	r3, #1
 228 004c 0593     		str	r3, [sp, #20]
 229              		.loc 1 102 0
 230 004e FFF7FEFF 		bl	HAL_GPIO_Init
 231              	.LVL8:
 103:main.c        **** 
 104:main.c        ****   GPIO_InitStruct.Mode = GPIO_MODE_AF_PP; // AF_PP pins below
 232              		.loc 1 104 0
 233 0052 0223     		movs	r3, #2
 234 0054 0593     		str	r3, [sp, #20]
 105:main.c        ****   // PA8 for TIM1's Channle 1 to output PWM
 106:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_8;
 107:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 235              		.loc 1 107 0
 236 0056 2146     		mov	r1, r4
 106:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 237              		.loc 1 106 0
 238 0058 4FF48073 		mov	r3, #256
 239              		.loc 1 107 0
 240 005c 0748     		ldr	r0, .L4+8
 106:main.c        ****   HAL_GPIO_Init(GPIOA, &GPIO_InitStruct);
 241              		.loc 1 106 0
 242 005e 0493     		str	r3, [sp, #16]
 243              		.loc 1 107 0
 244 0060 FFF7FEFF 		bl	HAL_GPIO_Init
 245              	.LVL9:
 108:main.c        ****   // PB13 for TIM1's Channel 1 complementary to output ~PWM
 109:main.c        ****   GPIO_InitStruct.Pin = GPIO_PIN_13;
 110:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 246              		.loc 1 110 0
 247 0064 2146     		mov	r1, r4
 248 0066 0648     		ldr	r0, .L4+12
 109:main.c        ****   HAL_GPIO_Init(GPIOB, &GPIO_InitStruct);
 249              		.loc 1 109 0
 250 0068 0495     		str	r5, [sp, #16]
 251              		.loc 1 110 0
 252 006a FFF7FEFF 		bl	HAL_GPIO_Init
 253              	.LVL10:
 111:main.c        **** }
 254              		.loc 1 111 0
 255 006e 09B0     		add	sp, sp, #36
 256              	.LCFI5:
 257              		.cfi_def_cfa_offset 12
 258              		@ sp needed
 259 0070 30BD     		pop	{r4, r5, pc}
 260              	.L5:
 261 0072 00BF     		.align	2
 262              	.L4:
 263 0074 00100240 		.word	1073876992
 264 0078 00100140 		.word	1073811456
 265 007c 00080140 		.word	1073809408
 266 0080 000C0140 		.word	1073810432
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 8


 267              		.cfi_endproc
 268              	.LFE67:
 270              		.section	.text.TIM1_PWM1_Init,"ax",%progbits
 271              		.align	1
 272              		.global	TIM1_PWM1_Init
 273              		.thumb
 274              		.thumb_func
 276              	TIM1_PWM1_Init:
 277              	.LFB68:
 112:main.c        **** 
 113:main.c        **** // ======= TIM1 ===========
 114:main.c        **** HAL_StatusTypeDef TIM1_PWM1_Init()
 115:main.c        **** {
 278              		.loc 1 115 0
 279              		.cfi_startproc
 280              		@ args = 0, pretend = 0, frame = 72
 281              		@ frame_needed = 0, uses_anonymous_args = 0
 282              	.LBB16:
 116:main.c        ****   __HAL_RCC_TIM1_CLK_ENABLE();  // start TIM1's clock
 283              		.loc 1 116 0
 284 0000 324B     		ldr	r3, .L13
 285              	.LBE16:
 115:main.c        ****   __HAL_RCC_TIM1_CLK_ENABLE();  // start TIM1's clock
 286              		.loc 1 115 0
 287 0002 10B5     		push	{r4, lr}
 288              	.LCFI6:
 289              		.cfi_def_cfa_offset 8
 290              		.cfi_offset 4, -8
 291              		.cfi_offset 14, -4
 292              	.LBB17:
 293              		.loc 1 116 0
 294 0004 9A69     		ldr	r2, [r3, #24]
 295              	.LBE17:
 115:main.c        ****   __HAL_RCC_TIM1_CLK_ENABLE();  // start TIM1's clock
 296              		.loc 1 115 0
 297 0006 92B0     		sub	sp, sp, #72
 298              	.LCFI7:
 299              		.cfi_def_cfa_offset 80
 300              	.LBB18:
 301              		.loc 1 116 0
 302 0008 42F40062 		orr	r2, r2, #2048
 303 000c 9A61     		str	r2, [r3, #24]
 304 000e 9B69     		ldr	r3, [r3, #24]
 305              	.LBE18:
 117:main.c        **** 
 118:main.c        ****   // Initialize TIM1 in a similar way as above
 119:main.c        ****   tim1_handle.Instance = TIM1;
 306              		.loc 1 119 0
 307 0010 2F4C     		ldr	r4, .L13+4
 308              	.LBB19:
 116:main.c        **** 
 309              		.loc 1 116 0
 310 0012 03F40063 		and	r3, r3, #2048
 311 0016 0193     		str	r3, [sp, #4]
 312 0018 019B     		ldr	r3, [sp, #4]
 313              	.LBE19:
 314              		.loc 1 119 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 9


 315 001a 2E4B     		ldr	r3, .L13+8
 120:main.c        ****   tim1_handle.Init.Period = 2000;
 121:main.c        ****   tim1_handle.Init.Prescaler = 0; // xN makes it N time slower
 122:main.c        ****   tim1_handle.Init.RepetitionCounter = 0;
 123:main.c        ****   tim1_handle.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 124:main.c        ****   tim1_handle.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 316              		.loc 1 124 0
 317 001c 2022     		movs	r2, #32
 119:main.c        ****   tim1_handle.Init.Period = 2000;
 318              		.loc 1 119 0
 319 001e 2360     		str	r3, [r4]
 120:main.c        ****   tim1_handle.Init.Period = 2000;
 320              		.loc 1 120 0
 321 0020 4FF4FA63 		mov	r3, #2000
 322 0024 E360     		str	r3, [r4, #12]
 125:main.c        ****   tim1_handle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 126:main.c        **** 
 127:main.c        ****   if (HAL_TIM_Base_Init(&tim1_handle) == HAL_ERROR) return HAL_ERROR;
 323              		.loc 1 127 0
 324 0026 2046     		mov	r0, r4
 121:main.c        ****   tim1_handle.Init.RepetitionCounter = 0;
 325              		.loc 1 121 0
 326 0028 0023     		movs	r3, #0
 327 002a 6360     		str	r3, [r4, #4]
 122:main.c        ****   tim1_handle.Init.ClockDivision = TIM_CLOCKDIVISION_DIV1;
 328              		.loc 1 122 0
 329 002c 6361     		str	r3, [r4, #20]
 123:main.c        ****   tim1_handle.Init.CounterMode = TIM_COUNTERMODE_CENTERALIGNED1;
 330              		.loc 1 123 0
 331 002e 2361     		str	r3, [r4, #16]
 124:main.c        ****   tim1_handle.Init.AutoReloadPreload = TIM_AUTORELOAD_PRELOAD_DISABLE;
 332              		.loc 1 124 0
 333 0030 A260     		str	r2, [r4, #8]
 125:main.c        **** 
 334              		.loc 1 125 0
 335 0032 A361     		str	r3, [r4, #24]
 336              		.loc 1 127 0
 337 0034 FFF7FEFF 		bl	HAL_TIM_Base_Init
 338              	.LVL11:
 339 0038 0128     		cmp	r0, #1
 340 003a 45D0     		beq	.L7
 341              	.LBB20:
 342              	.LBB21:
 128:main.c        ****   if (HAL_TIM_PWM_Init (&tim1_handle) == HAL_ERROR) printf("BBBBADD");
 343              		.loc 1 128 0
 344 003c 2046     		mov	r0, r4
 345 003e FFF7FEFF 		bl	HAL_TIM_PWM_Init
 346              	.LVL12:
 347 0042 0128     		cmp	r0, #1
 348 0044 02D1     		bne	.L8
 349 0046 2448     		ldr	r0, .L13+12
 350 0048 FFF7FEFF 		bl	printf
 351              	.LVL13:
 352              	.L8:
 129:main.c        **** 
 130:main.c        ****   TIM_MasterConfigTypeDef sMasterConfig;
 131:main.c        ****   sMasterConfig.MasterOutputTrigger = TIM_TRGO_ENABLE;
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 10


 132:main.c        ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 353              		.loc 1 132 0
 354 004c 0024     		movs	r4, #0
 131:main.c        ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 355              		.loc 1 131 0
 356 004e 1023     		movs	r3, #16
 133:main.c        ****   HAL_TIMEx_MasterConfigSynchronization(&tim1_handle, &sMasterConfig);
 357              		.loc 1 133 0
 358 0050 02A9     		add	r1, sp, #8
 359 0052 1F48     		ldr	r0, .L13+4
 131:main.c        ****   sMasterConfig.MasterSlaveMode     = TIM_MASTERSLAVEMODE_DISABLE;
 360              		.loc 1 131 0
 361 0054 0293     		str	r3, [sp, #8]
 132:main.c        ****   HAL_TIMEx_MasterConfigSynchronization(&tim1_handle, &sMasterConfig);
 362              		.loc 1 132 0
 363 0056 0394     		str	r4, [sp, #12]
 364              		.loc 1 133 0
 365 0058 FFF7FEFF 		bl	HAL_TIMEx_MasterConfigSynchronization
 366              	.LVL14:
 134:main.c        **** 
 135:main.c        ****   TIM_OC_InitTypeDef sConfigOC;
 136:main.c        ****   sConfigOC.OCMode       = TIM_OCMODE_PWM1;
 367              		.loc 1 136 0
 368 005c 6023     		movs	r3, #96
 369 005e 0493     		str	r3, [sp, #16]
 137:main.c        ****   sConfigOC.Pulse        = 100; // make it visible
 370              		.loc 1 137 0
 371 0060 6423     		movs	r3, #100
 372 0062 0593     		str	r3, [sp, #20]
 138:main.c        ****   sConfigOC.OCPolarity   = TIM_OCPOLARITY_HIGH;
 139:main.c        ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 373              		.loc 1 139 0
 374 0064 0823     		movs	r3, #8
 140:main.c        ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 141:main.c        ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 142:main.c        ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 143:main.c        ****   HAL_TIM_PWM_ConfigChannel(&tim1_handle, &sConfigOC, TIM_CHANNEL_1);
 375              		.loc 1 143 0
 376 0066 2246     		mov	r2, r4
 139:main.c        ****   sConfigOC.OCFastMode   = TIM_OCFAST_DISABLE;
 377              		.loc 1 139 0
 378 0068 0793     		str	r3, [sp, #28]
 379              		.loc 1 143 0
 380 006a 04A9     		add	r1, sp, #16
 142:main.c        ****   HAL_TIM_PWM_ConfigChannel(&tim1_handle, &sConfigOC, TIM_CHANNEL_1);
 381              		.loc 1 142 0
 382 006c 4FF40073 		mov	r3, #512
 383              		.loc 1 143 0
 384 0070 1748     		ldr	r0, .L13+4
 142:main.c        ****   HAL_TIM_PWM_ConfigChannel(&tim1_handle, &sConfigOC, TIM_CHANNEL_1);
 385              		.loc 1 142 0
 386 0072 0A93     		str	r3, [sp, #40]
 138:main.c        ****   sConfigOC.OCNPolarity  = TIM_OCNPOLARITY_LOW;
 387              		.loc 1 138 0
 388 0074 0694     		str	r4, [sp, #24]
 140:main.c        ****   sConfigOC.OCIdleState  = TIM_OCIDLESTATE_RESET;
 389              		.loc 1 140 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 11


 390 0076 0894     		str	r4, [sp, #32]
 141:main.c        ****   sConfigOC.OCNIdleState = TIM_OCNIDLESTATE_SET;
 391              		.loc 1 141 0
 392 0078 0994     		str	r4, [sp, #36]
 393              		.loc 1 143 0
 394 007a FFF7FEFF 		bl	HAL_TIM_PWM_ConfigChannel
 395              	.LVL15:
 144:main.c        **** 
 145:main.c        ****   TIM_BreakDeadTimeConfigTypeDef sBreakDeadTimeConfig;
 146:main.c        ****   sBreakDeadTimeConfig.OffStateRunMode  = TIM_OSSR_ENABLE;
 396              		.loc 1 146 0
 397 007e 4FF40063 		mov	r3, #2048
 398 0082 0B93     		str	r3, [sp, #44]
 147:main.c        ****   sBreakDeadTimeConfig.OffStateIDLEMode = TIM_OSSI_ENABLE;
 399              		.loc 1 147 0
 400 0084 4FF48063 		mov	r3, #1024
 401 0088 0C93     		str	r3, [sp, #48]
 148:main.c        ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 149:main.c        ****   sBreakDeadTimeConfig.DeadTime         = 48; // DEAD_TIME;
 402              		.loc 1 149 0
 403 008a 3023     		movs	r3, #48
 404 008c 0E93     		str	r3, [sp, #56]
 150:main.c        ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 151:main.c        ****   sBreakDeadTimeConfig.BreakPolarity    = TIM_BREAKPOLARITY_LOW;
 152:main.c        ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_ENABLE;
 153:main.c        ****   HAL_TIMEx_ConfigBreakDeadTime(&tim1_handle, &sBreakDeadTimeConfig);
 405              		.loc 1 153 0
 406 008e 0BA9     		add	r1, sp, #44
 152:main.c        ****   HAL_TIMEx_ConfigBreakDeadTime(&tim1_handle, &sBreakDeadTimeConfig);
 407              		.loc 1 152 0
 408 0090 4FF48043 		mov	r3, #16384
 409              		.loc 1 153 0
 410 0094 0E48     		ldr	r0, .L13+4
 152:main.c        ****   HAL_TIMEx_ConfigBreakDeadTime(&tim1_handle, &sBreakDeadTimeConfig);
 411              		.loc 1 152 0
 412 0096 1193     		str	r3, [sp, #68]
 148:main.c        ****   sBreakDeadTimeConfig.LockLevel        = TIM_LOCKLEVEL_OFF;
 413              		.loc 1 148 0
 414 0098 0D94     		str	r4, [sp, #52]
 150:main.c        ****   sBreakDeadTimeConfig.BreakState       = TIM_BREAK_DISABLE;
 415              		.loc 1 150 0
 416 009a 0F94     		str	r4, [sp, #60]
 151:main.c        ****   sBreakDeadTimeConfig.AutomaticOutput  = TIM_AUTOMATICOUTPUT_ENABLE;
 417              		.loc 1 151 0
 418 009c 1094     		str	r4, [sp, #64]
 419              		.loc 1 153 0
 420 009e FFF7FEFF 		bl	HAL_TIMEx_ConfigBreakDeadTime
 421              	.LVL16:
 154:main.c        **** 
 155:main.c        ****   // Enable all three channels for PWM output
 156:main.c        ****   HAL_TIM_PWM_Start(&tim1_handle, TIM_CHANNEL_1);
 422              		.loc 1 156 0
 423 00a2 2146     		mov	r1, r4
 424 00a4 0A48     		ldr	r0, .L13+4
 425 00a6 FFF7FEFF 		bl	HAL_TIM_PWM_Start
 426              	.LVL17:
 157:main.c        ****   HAL_TIMEx_PWMN_Start(&tim1_handle, TIM_CHANNEL_1);
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 12


 427              		.loc 1 157 0
 428 00aa 2146     		mov	r1, r4
 429 00ac 0848     		ldr	r0, .L13+4
 430 00ae FFF7FEFF 		bl	HAL_TIMEx_PWMN_Start
 431              	.LVL18:
 158:main.c        **** 
 159:main.c        ****   // setup and start TIM1's UPDATE interrupts
 160:main.c        ****   HAL_NVIC_SetPriority(TIM1_UP_IRQn, 0, 0);
 432              		.loc 1 160 0
 433 00b2 2246     		mov	r2, r4
 434 00b4 2146     		mov	r1, r4
 435 00b6 1920     		movs	r0, #25
 436 00b8 FFF7FEFF 		bl	HAL_NVIC_SetPriority
 437              	.LVL19:
 161:main.c        ****   HAL_NVIC_EnableIRQ(TIM1_UP_IRQn);
 438              		.loc 1 161 0
 439 00bc 1920     		movs	r0, #25
 440 00be FFF7FEFF 		bl	HAL_NVIC_EnableIRQ
 441              	.LVL20:
 162:main.c        ****   //__HAL_RCC_TIM1_CLK_ENABLE();
 163:main.c        ****   return HAL_TIM_Base_Start_IT(&tim1_handle);
 442              		.loc 1 163 0
 443 00c2 0348     		ldr	r0, .L13+4
 444 00c4 FFF7FEFF 		bl	HAL_TIM_Base_Start_IT
 445              	.LVL21:
 446              	.L7:
 447              	.LBE21:
 448              	.LBE20:
 164:main.c        **** }
 449              		.loc 1 164 0
 450 00c8 12B0     		add	sp, sp, #72
 451              	.LCFI8:
 452              		.cfi_def_cfa_offset 8
 453              		@ sp needed
 454 00ca 10BD     		pop	{r4, pc}
 455              	.L14:
 456              		.align	2
 457              	.L13:
 458 00cc 00100240 		.word	1073876992
 459 00d0 00000000 		.word	tim1_handle
 460 00d4 002C0140 		.word	1073818624
 461 00d8 00000000 		.word	.LC0
 462              		.cfi_endproc
 463              	.LFE68:
 465              		.section	.text.startup.main,"ax",%progbits
 466              		.align	1
 467              		.global	main
 468              		.thumb
 469              		.thumb_func
 471              	main:
 472              	.LFB64:
  21:main.c        **** 
 473              		.loc 1 21 0
 474              		.cfi_startproc
 475              		@ Volatile: function does not return.
 476              		@ args = 0, pretend = 0, frame = 0
 477              		@ frame_needed = 0, uses_anonymous_args = 0
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 13


 478 0000 08B5     		push	{r3, lr}
 479              	.LCFI9:
 480              		.cfi_def_cfa_offset 8
 481              		.cfi_offset 3, -8
 482              		.cfi_offset 14, -4
  23:main.c        ****   SystemClock_Config();
 483              		.loc 1 23 0
 484 0002 FFF7FEFF 		bl	HAL_Init
 485              	.LVL22:
  24:main.c        **** 
 486              		.loc 1 24 0
 487 0006 FFF7FEFF 		bl	SystemClock_Config
 488              	.LVL23:
  38:main.c        ****   TIM1_PWM1_Init();
 489              		.loc 1 38 0
 490 000a FFF7FEFF 		bl	GPIO_Init
 491              	.LVL24:
  39:main.c        **** 
 492              		.loc 1 39 0
 493 000e FFF7FEFF 		bl	TIM1_PWM1_Init
 494              	.LVL25:
  41:main.c        **** 	// means the timers are started successfully 
 495              		.loc 1 41 0
 496 0012 0020     		movs	r0, #0
 497 0014 FFF7FEFF 		bl	HAL_InitTick
 498              	.LVL26:
 499              	.L16:
  47:main.c        **** 	HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // PC13 LED
 500              		.loc 1 47 0 discriminator 1
 501 0018 6420     		movs	r0, #100
 502 001a FFF7FEFF 		bl	HAL_Delay
 503              	.LVL27:
  48:main.c        ****     }
 504              		.loc 1 48 0 discriminator 1
 505 001e 4FF40051 		mov	r1, #8192
 506 0022 0248     		ldr	r0, .L17
 507 0024 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 508              	.LVL28:
 509 0028 F6E7     		b	.L16
 510              	.L18:
 511 002a 00BF     		.align	2
 512              	.L17:
 513 002c 00100140 		.word	1073811456
 514              		.cfi_endproc
 515              	.LFE64:
 517              		.section	.text.TIM1_UP_IRQHandler,"ax",%progbits
 518              		.align	1
 519              		.global	TIM1_UP_IRQHandler
 520              		.thumb
 521              		.thumb_func
 523              	TIM1_UP_IRQHandler:
 524              	.LFB69:
 165:main.c        **** 
 166:main.c        **** void TIM1_UP_IRQHandler(void)
 167:main.c        **** {
 525              		.loc 1 167 0
 526              		.cfi_startproc
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 14


 527              		@ args = 0, pretend = 0, frame = 0
 528              		@ frame_needed = 0, uses_anonymous_args = 0
 529 0000 10B5     		push	{r4, lr}
 530              	.LCFI10:
 531              		.cfi_def_cfa_offset 8
 532              		.cfi_offset 4, -8
 533              		.cfi_offset 14, -4
 168:main.c        ****   HAL_TIM_IRQHandler(&tim1_handle);
 534              		.loc 1 168 0
 535 0002 074C     		ldr	r4, .L20
 536 0004 2046     		mov	r0, r4
 537 0006 FFF7FEFF 		bl	HAL_TIM_IRQHandler
 538              	.LVL29:
 169:main.c        ****   // begin user code
 170:main.c        ****   HAL_GPIO_TogglePin(GPIOC, GPIO_PIN_13); // toggle PC13/LED
 539              		.loc 1 170 0
 540 000a 4FF40051 		mov	r1, #8192
 541 000e 0548     		ldr	r0, .L20+4
 542 0010 FFF7FEFF 		bl	HAL_GPIO_TogglePin
 543              	.LVL30:
 171:main.c        ****   //HAL_GPIO_WritePin(GPIOC, GPIO_PIN_13, RESET); // turn ON PC13/LED
 172:main.c        ****   // end user code
 173:main.c        ****   __HAL_TIM_CLEAR_IT(&tim1_handle, TIM_IT_UPDATE);
 544              		.loc 1 173 0
 545 0014 2368     		ldr	r3, [r4]
 546 0016 6FF00102 		mvn	r2, #1
 547 001a 1A61     		str	r2, [r3, #16]
 548 001c 10BD     		pop	{r4, pc}
 549              	.L21:
 550 001e 00BF     		.align	2
 551              	.L20:
 552 0020 00000000 		.word	tim1_handle
 553 0024 00100140 		.word	1073811456
 554              		.cfi_endproc
 555              	.LFE69:
 557              		.comm	tim1_handle,64,4
 558              		.section	.rodata.str1.1,"aMS",%progbits,1
 559              	.LC0:
 560 0000 42424242 		.ascii	"BBBBADD\000"
 560      41444400 
 561              		.text
 562              	.Letext0:
 563              		.file 2 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/machine/_default_types
 564              		.file 3 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/sys/_stdint.h"
 565              		.file 4 "../Drivers/CMSIS/Device/ST/STM32F1xx/Include/stm32f103xb.h"
 566              		.file 5 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_def.h"
 567              		.file 6 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc.h"
 568              		.file 7 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_rcc_ex.h"
 569              		.file 8 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_gpio.h"
 570              		.file 9 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_dma.h"
 571              		.file 10 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim.h"
 572              		.file 11 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_tim_ex.h"
 573              		.file 12 "../Drivers/CMSIS/Include/core_cm3.h"
 574              		.file 13 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal.h"
 575              		.file 14 "../Drivers/STM32F1xx_HAL_Driver/Inc/stm32f1xx_hal_cortex.h"
 576              		.file 15 "/usr/local/Cellar/gcc-arm-none-eabi/20160928/arm-none-eabi/include/stdio.h"
ARM GAS  /var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s 			page 15


DEFINED SYMBOLS
                            *ABS*:0000000000000000 main.c
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:20     .text.SysTick_Handler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:25     .text.SysTick_Handler:0000000000000000 SysTick_Handler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:40     .text.SystemClock_Config:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:45     .text.SystemClock_Config:0000000000000000 SystemClock_Config
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:145    .text.GPIO_Init:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:150    .text.GPIO_Init:0000000000000000 GPIO_Init
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:263    .text.GPIO_Init:0000000000000074 $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:271    .text.TIM1_PWM1_Init:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:276    .text.TIM1_PWM1_Init:0000000000000000 TIM1_PWM1_Init
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:458    .text.TIM1_PWM1_Init:00000000000000cc $d
                            *COM*:0000000000000040 tim1_handle
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:466    .text.startup.main:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:471    .text.startup.main:0000000000000000 main
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:513    .text.startup.main:000000000000002c $d
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:518    .text.TIM1_UP_IRQHandler:0000000000000000 $t
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:523    .text.TIM1_UP_IRQHandler:0000000000000000 TIM1_UP_IRQHandler
/var/folders/jn/652hmfdj2m99syhs9p34dk640000gq/T//ccDV6UMl.s:552    .text.TIM1_UP_IRQHandler:0000000000000020 $d
                     .debug_frame:0000000000000010 $d

UNDEFINED SYMBOLS
HAL_IncTick
HAL_RCC_OscConfig
HAL_RCC_ClockConfig
HAL_RCCEx_PeriphCLKConfig
HAL_RCC_GetHCLKFreq
HAL_SYSTICK_Config
HAL_SYSTICK_CLKSourceConfig
HAL_NVIC_SetPriority
HAL_GPIO_Init
HAL_TIM_Base_Init
HAL_TIM_PWM_Init
printf
HAL_TIMEx_MasterConfigSynchronization
HAL_TIM_PWM_ConfigChannel
HAL_TIMEx_ConfigBreakDeadTime
HAL_TIM_PWM_Start
HAL_TIMEx_PWMN_Start
HAL_NVIC_EnableIRQ
HAL_TIM_Base_Start_IT
HAL_Init
HAL_InitTick
HAL_Delay
HAL_GPIO_TogglePin
HAL_TIM_IRQHandler
